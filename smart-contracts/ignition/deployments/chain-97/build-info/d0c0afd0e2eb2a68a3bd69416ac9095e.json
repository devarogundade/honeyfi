{
  "id": "d0c0afd0e2eb2a68a3bd69416ac9095e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.24",
  "solcLongVersion": "0.8.24+commit.e11b9ed9",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "contracts/lib/EquitoApp.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.23;\r\n\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {IRouter} from \"./interfaces/IRouter.sol\";\r\nimport {IEquitoReceiver} from \"./interfaces/IEquitoReceiver.sol\";\r\nimport {bytes64, EquitoMessage} from \"./libraries/EquitoMessageLibrary.sol\";\r\nimport {Errors} from \"./libraries/Errors.sol\";\r\n\r\n/// @title EquitoApp\r\n/// @notice This abstract contract is the base for all applications that want to leverage\r\n///         the Equito cross-chain messaging protocol to communicate with other blockchains.\r\nabstract contract EquitoApp is IEquitoReceiver, Ownable {\r\n    /// @dev The Router Contract that is used to send and receive messages.\r\n    IRouter internal immutable router;\r\n\r\n    /// @dev Mapping to store peer addresses for different chain selectors.\r\n    mapping(uint256 => bytes64) public peers;\r\n\r\n    /// @notice Initializes the EquitoApp contract and set the router address.\r\n    /// @param _router The address of the router contract.\r\n    constructor(address _router) Ownable(msg.sender) {\r\n        if (_router == address(0)) {\r\n            revert Errors.RouterAddressCannotBeZero();\r\n        }\r\n        router = IRouter(_router);\r\n    }\r\n\r\n    /// @notice Modifier to restrict access to only the router contract.\r\n    modifier onlyRouter() {\r\n        if (msg.sender != address(router))\r\n            revert Errors.InvalidRouter(msg.sender);\r\n        _;\r\n    }\r\n\r\n    /// @notice Allows the owner to set the peer addresses for different chain selectors.\r\n    /// @param chainSelectors The list of chain selectors.\r\n    /// @param addresses The list of addresses corresponding to the chain selectors.\r\n    function setPeers(\r\n        uint256[] calldata chainSelectors,\r\n        bytes64[] calldata addresses\r\n    ) external onlyOwner {\r\n        _setPeers(chainSelectors, addresses);\r\n    }\r\n\r\n    /// @notice Internal function to set the peer addresses for different chain selectors.\r\n    /// @param chainSelectors The list of chain selectors.\r\n    /// @param addresses The list of addresses corresponding to the chain selectors.\r\n    /// @dev This function is internal to allow for easier overriding and extension by derived contracts,\r\n    ///      facilitating the reuse of peer-setting logic in different contexts.\r\n    function _setPeers(\r\n        uint256[] calldata chainSelectors,\r\n        bytes64[] calldata addresses\r\n    ) internal virtual onlyOwner {\r\n        if (chainSelectors.length != addresses.length)\r\n            revert Errors.InvalidLength();\r\n\r\n        for (uint256 i = 0; i < chainSelectors.length; ) {\r\n            peers[chainSelectors[i]] = addresses[i];\r\n\r\n            unchecked {\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n\r\n    /// @notice Returns the peer address for a given chain selector.\r\n    /// @param chainSelector The chain selector for which the peer address is requested.\r\n    /// @return The peer address for the given chain selector.\r\n    /// @dev Throws an error if the chain selector is not found in the mapping.\r\n    function getPeer(\r\n        uint256 chainSelector\r\n    ) public view returns (bytes64 memory) {\r\n        bytes64 memory peerAddress = peers[chainSelector];\r\n        if (peerAddress.lower == 0x00 && peerAddress.upper == 0x00) {\r\n            revert Errors.InvalidPeer(chainSelector);\r\n        }\r\n        return peerAddress;\r\n    }\r\n\r\n    /// @notice Receives a cross-chain message from the Router Contract.\r\n    ///         It is a wrapper function for the `_receiveMessage` functions, that need to be overridden.\r\n    ///         Only the Router Contract is allowed to call this function.\r\n    /// @param message The Equito message received.\r\n    /// @param messageData The data of the message received.\r\n    function receiveMessage(\r\n        EquitoMessage calldata message,\r\n        bytes calldata messageData\r\n    ) external payable override onlyRouter {\r\n        bytes64 memory peerAddress = peers[message.sourceChainSelector];\r\n\r\n        if (\r\n            peerAddress.lower != message.sender.lower ||\r\n            peerAddress.upper != message.sender.upper\r\n        ) {\r\n            _receiveMessageFromNonPeer(message, messageData);\r\n        } else {\r\n            _receiveMessageFromPeer(message, messageData);\r\n        }\r\n    }\r\n\r\n    /// @notice The logic for receiving a cross-chain message from a peer.\r\n    /// @param message The Equito message received.\r\n    /// @param messageData The data of the message received.\r\n    function _receiveMessageFromPeer(\r\n        EquitoMessage calldata message,\r\n        bytes calldata messageData\r\n    ) internal virtual {}\r\n\r\n    /// @notice The logic for receiving a cross-chain message from a non-peer.\r\n    ///         The default implementation reverts the transaction.\r\n    /// @param message The Equito message received.\r\n    /// @param messageData The data of the message received.\r\n    function _receiveMessageFromNonPeer(\r\n        EquitoMessage calldata message,\r\n        bytes calldata messageData\r\n    ) internal virtual {\r\n        revert Errors.InvalidMessageSender();\r\n    }\r\n}\r\n"
      },
      "contracts/lib/interfaces/IEquitoReceiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.23;\r\n\r\nimport {EquitoMessage} from \"../libraries/EquitoMessageLibrary.sol\";\r\n\r\n/// @title IEquitoReceiver\r\n/// @notice Interface for contracts that can receive cross-chain messages via the Router contract.\r\ninterface IEquitoReceiver {\r\n    /// @notice Receives a cross-chain message from the Router contract.\r\n    /// @param message The Equito message received.\r\n    /// @param messageData The data of the message.\r\n    function receiveMessage(\r\n        EquitoMessage calldata message,\r\n        bytes calldata messageData\r\n    ) external payable;\r\n}\r\n"
      },
      "contracts/lib/interfaces/IRouter.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.23;\r\n\r\nimport {bytes64, EquitoMessage} from \"../libraries/EquitoMessageLibrary.sol\";\r\n\r\n/// @title IEquitoFees\r\n/// @notice Interface for the IEquitoFees contract, used to collect fees for Message Send transactions.\r\ninterface IEquitoFees {\r\n    /// @notice Gets the current fee amount required to send a Message.\r\n    /// @param sender The address of the Message Sender, usually an Equito App.\r\n    /// @return The current fee amount in wei.\r\n    function getFee(address sender) external view returns (uint256);\r\n}\r\n\r\n/// @title IRouter\r\n/// @notice Interface for the Router contract, used to interact with the cross-chain messaging protocol.\r\ninterface IRouter is IEquitoFees {\r\n    /// @notice Emitted when a message send request is created.\r\n    /// @param message The message being sent.\r\n    /// @param messageData The data of the message being sent.\r\n    event MessageSendRequested(EquitoMessage message, bytes messageData);\r\n\r\n    /// @notice Emitted when a new verifier is added.\r\n    /// @param verifier The address of the new verifier.\r\n    event VerifierAdded(address indexed verifier);\r\n\r\n    /// @notice Emitted when a messages has successfully been delivered, ready to be executed.\r\n    /// @param messageHash The hash of the message that has been delivered.\r\n    event MessageDelivered(bytes32 messageHash);\r\n\r\n    /// @notice Emitted when a message has successfully been executed.\r\n    /// @param messageHash The hash of the message that has been executed.\r\n    event MessageExecuted(bytes32 messageHash);\r\n\r\n    /// @notice Emitted when the Equito fees are set.\r\n    event EquitoFeesSet();\r\n\r\n    /// @notice Event emitted when the equito address is set.\r\n    event EquitoAddressSet();\r\n\r\n    /// @notice Sends a cross-chain message using Equito.\r\n    /// @param receiver The address of the receiver.\r\n    /// @param destinationChainSelector The chain selector of the destination chain.\r\n    /// @param data The message data.\r\n    /// @return The hash of the message.\r\n    function sendMessage(\r\n        bytes64 calldata receiver,\r\n        uint256 destinationChainSelector,\r\n        bytes calldata data\r\n    ) external payable returns (bytes32);\r\n\r\n    /// @notice Verify and execute a message with the appropriate receiver contract.\r\n    /// @param message The message to be executed.\r\n    /// @param messageData The data of the message to be executed.\r\n    /// @param verifierIndex The index of the verifier used to verify the message.\r\n    /// @param proof The proof to provide to the verifier.\r\n    function deliverAndExecuteMessage(\r\n        EquitoMessage calldata message,\r\n        bytes calldata messageData,\r\n        uint256 verifierIndex,\r\n        bytes calldata proof\r\n    ) external payable;\r\n\r\n    /// @notice Delivers messages to be stored for later execution.\r\n    /// @param messages The list of messages to be delivered.\r\n    /// @param verifierIndex The index of the verifier used to verify the messages.\r\n    /// @param proof The proof provided by the verifier.\r\n    function deliverMessages(\r\n        EquitoMessage[] calldata messages,\r\n        uint256 verifierIndex,\r\n        bytes calldata proof\r\n    ) external;\r\n\r\n    /// @notice Executes a stored message.\r\n    /// @param message The message to be executed.\r\n    /// @param messageData The data of the message to be executed.\r\n    function executeMessage(\r\n        EquitoMessage calldata message,\r\n        bytes calldata messageData\r\n    ) external payable;\r\n\r\n    /// @notice Returns the chain selector of the current chain.\r\n    function chainSelector() external view returns (uint256);\r\n\r\n    /// @notice Returns the equito address.\r\n    function equitoAddress() external view returns (bytes32, bytes32);\r\n}\r\n"
      },
      "contracts/lib/libraries/EquitoMessageLibrary.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.23;\r\n\r\n/// @title bytes64\r\n/// @notice A struct that holds two bytes32 values, used to store a 64-byte value.\r\n/// @dev Used to store 64-byte long values for the sender and receiver addresses in the EquitoMessage struct.\r\nstruct bytes64 {\r\n    bytes32 lower;\r\n    bytes32 upper;\r\n}\r\n\r\n/// @title EquitoMessage\r\n/// @notice The ubiquitous message structure for cross-chain communication, used by the Router contract to deliver and receive messages.\r\n/// @dev Designed to be used by any chain supported by the Equito protocol.\r\nstruct EquitoMessage {\r\n    /// @notice Block number at which the message is emitted.\r\n    uint256 blockNumber;\r\n    /// @notice Selector for the source chain, acting as an id.\r\n    uint256 sourceChainSelector;\r\n    /// @notice Address of the sender.\r\n    bytes64 sender;\r\n    /// @notice Selector for the destination chain, acting as an id.\r\n    uint256 destinationChainSelector;\r\n    /// @notice Address of the receiver.\r\n    bytes64 receiver;\r\n    /// @notice Hash of the payload of the message to be delivered.\r\n    bytes32 hashedData;\r\n}\r\n\r\n/// @title EquitoMessageLibrary\r\n/// @notice Library providing helper functions for EquitoMessage struct.\r\n/// @dev Contains hashing function for EquitoMessage.\r\nlibrary EquitoMessageLibrary {\r\n    /// @notice Converts an address to a bytes64 struct.\r\n    /// @param addr The address to convert.\r\n    /// @return The bytes64 struct containing the address.\r\n    /// @dev The upper bytes32 value is set to 0. This operation cannot fail.\r\n    function addressToBytes64(\r\n        address addr\r\n    ) internal pure returns (bytes64 memory) {\r\n        return bytes64(bytes32(uint256(uint160(addr))), bytes32(0));\r\n    }\r\n\r\n    /// @notice Converts a bytes64 struct to an address.\r\n    /// @param b64 The bytes64 struct to convert.\r\n    /// @return The address contained in the bytes64 struct's lower bytes32.\r\n    /// @dev The upper bytes32 value is ignored. This operation cannot fail.\r\n    function bytes64ToAddress(\r\n        bytes64 memory b64\r\n    ) internal pure returns (address) {\r\n        return address(uint160(uint256(b64.lower)));\r\n    }\r\n}\r\n"
      },
      "contracts/lib/libraries/Errors.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.23;\r\n\r\n/// @title Errors\r\n/// @notice Defines all error messages used in the EquitoApp contracts.\r\nlibrary Errors {\r\n    /// @notice Thrown when the router address is invalid.\r\n    /// @param router The address of the router that caused the error.\r\n    error InvalidRouter(address router);\r\n\r\n    /// @notice Thrown when the router address is zero.\r\n    error RouterAddressCannotBeZero();\r\n\r\n    /// @notice Thrown when the proof for verifying messages is invalid.\r\n    error InvalidMessagesProof();\r\n\r\n    /// @notice Thrown when the verifier index provided is out of bounds.\r\n    error InvalidVerifierIndex();\r\n\r\n    /// @notice Thrown when the initial verifier address provided in the constructor is zero.\r\n    error InitialVerifierZeroAddress();\r\n\r\n    /// @notice Thrown when the lengths of arrays are invalid.\r\n    error InvalidLength();\r\n\r\n    /// @notice Thrown when the sender of a message is invalid.\r\n    error InvalidMessageSender();\r\n\r\n    /// @notice Thrown when the provided fee is insufficient to cover the required cost.\r\n    error InsufficientFee();\r\n\r\n    /// @notice Thrown when the amount of ether sent with the transaction is insufficient.\r\n    error InsufficientValueSent();\r\n\r\n    /// @notice Thrown when the provided cost is not greater than zero.\r\n    error CostMustBeGreaterThanZero();\r\n\r\n    /// @notice Thrown when the token price retrieved from the oracle is invalid or zero.\r\n    error InvalidTokenPriceFromOracle();\r\n\r\n    /// @notice Thrown when a message is received from an invalid sovereign account.\r\n    error InvalidSovereign();\r\n\r\n    /// @notice Thrown when an invalid operation code is encountered in the received message.\r\n    error InvalidOperation();\r\n\r\n    /// @notice Thrown when an invalid liquidity provider address is provided.\r\n    error InvalidLiquidityProvider();\r\n\r\n    /// @notice Thrown when a transfer of fees to the liquidity provider fails.\r\n    error TransferFailed();\r\n\r\n    /// @notice Thrown when there is a mismatch in session IDs during validation.\r\n    error SessionIdMismatch();\r\n\r\n    /// @notice Thrown when attempting to set the router, but the router is already set.\r\n    error RouterAlreadySet();\r\n\r\n    /// @notice Thrown when an invalid sender is calling a function.\r\n    error InvalidSender(address sender);\r\n\r\n    /// @notice Thrown when the provided session ID does not match the current session.\r\n    error InvalidSessionId();\r\n\r\n    /// @notice Thrown when a Peer address is not found in the mapping, given a chain selector.\r\n    /// @param chainSelector The chain selector for which the peer address is requested.\r\n    error InvalidPeer(uint256 chainSelector);\r\n}\r\n"
      },
      "contracts/routers/BasicRouter.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\nimport {IBasicRouter} from \"./interfaces/IBasicRouter.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract BasicRouter is IBasicRouter, AccessControl {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address private constant WETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n\r\n    // Mapping to store token prices in USD (1 token = price in USD * 10^18)\r\n    mapping(address => uint256) public tokenPricesUSD;\r\n\r\n    constructor() {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n    }\r\n\r\n    function weth() external pure override returns (address) {\r\n        return WETH;\r\n    }\r\n\r\n    // Set the price of a token in USD (in wei format, where 1 USD = 10^18)\r\n    function setTokenPrice(\r\n        address token,\r\n        uint256 priceUSD\r\n    ) external override onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        tokenPricesUSD[token] = priceUSD;\r\n    }\r\n\r\n    // Calculate token amountOut based on USD price\r\n    function getAmountOut(\r\n        address tokenIn,\r\n        address tokenOut,\r\n        uint256 amountIn\r\n    ) public view returns (uint256) {\r\n        uint256 priceIn = tokenPricesUSD[tokenIn]; // Price of tokenIn in USD\r\n        uint256 priceOut = tokenPricesUSD[tokenOut]; // Price of tokenOut in USD\r\n\r\n        require(priceIn > 0 && priceOut > 0, \"Token price not set\");\r\n\r\n        // Calculate equivalent amount of tokenOut (keeping it proportional to USD value)\r\n        return (amountIn * priceIn) / priceOut;\r\n    }\r\n\r\n    // Swap from one token to another using stored USD prices\r\n    function swapTokenToToken(\r\n        address tokenIn,\r\n        address tokenOut,\r\n        uint256 amountIn,\r\n        address to\r\n    ) external override returns (uint256) {\r\n        uint256 amountOut = getAmountOut(tokenIn, tokenOut, amountIn);\r\n\r\n        // Transfer tokenIn from sender to contract\r\n        IERC20(tokenIn).safeTransferFrom(_msgSender(), address(this), amountIn);\r\n\r\n        // Ensure the contract has enough balance of tokenOut\r\n        require(\r\n            IERC20(tokenOut).balanceOf(address(this)) >= amountOut,\r\n            \"Insufficient output token balance\"\r\n        );\r\n\r\n        // Transfer tokenOut to the receiver\r\n        IERC20(tokenOut).safeTransfer(to, amountOut);\r\n\r\n        emit TokenSwap(_msgSender(), tokenIn, tokenOut, amountIn, amountOut);\r\n\r\n        return amountOut;\r\n    }\r\n\r\n    // Swap ETH to token using stored USD prices\r\n    function swapETHToTokens(\r\n        address tokenOut,\r\n        address to\r\n    ) external payable override returns (uint256) {\r\n        require(msg.value > 0, \"Must send ETH to swap\");\r\n\r\n        uint256 ethPriceUSD = tokenPricesUSD[WETH]; // Price of 1 ETH in USD\r\n        uint256 tokenPriceUSD = tokenPricesUSD[tokenOut]; // Price of tokenOut in USD\r\n\r\n        require(\r\n            ethPriceUSD > 0 && tokenPriceUSD > 0,\r\n            \"ETH or Token price not set\"\r\n        );\r\n\r\n        // Calculate amountOut (token equivalent of sent ETH)\r\n        uint256 amountOut = (msg.value * ethPriceUSD) / tokenPriceUSD;\r\n\r\n        require(\r\n            IERC20(tokenOut).balanceOf(address(this)) >= amountOut,\r\n            \"Insufficient token balance\"\r\n        );\r\n\r\n        // Transfer tokenOut to receiver\r\n        IERC20(tokenOut).safeTransfer(to, amountOut);\r\n\r\n        emit EthToTokenSwap(_msgSender(), msg.value, tokenOut, amountOut);\r\n\r\n        return amountOut;\r\n    }\r\n\r\n    // Swap Token to ETH using stored USD prices\r\n    function swapTokensToETH(\r\n        address tokenIn,\r\n        uint256 amountIn,\r\n        address to\r\n    ) external override returns (uint256) {\r\n        uint256 ethPriceUSD = tokenPricesUSD[WETH]; // Price of 1 ETH in USD\r\n        uint256 tokenPriceUSD = tokenPricesUSD[tokenIn]; // Price of tokenIn in USD\r\n\r\n        require(\r\n            ethPriceUSD > 0 && tokenPriceUSD > 0,\r\n            \"ETH or Token price not set\"\r\n        );\r\n\r\n        // Calculate amountOut (ETH equivalent of tokenIn)\r\n        uint256 amountOut = (amountIn * tokenPriceUSD) / ethPriceUSD;\r\n\r\n        // Transfer tokenIn from sender to contract\r\n        IERC20(tokenIn).transferFrom(_msgSender(), address(this), amountIn);\r\n\r\n        require(address(this).balance >= amountOut, \"Insufficient ETH balance\");\r\n\r\n        // Send ETH to receiver\r\n        payable(to).transfer(amountOut);\r\n\r\n        emit TokenToEthSwap(_msgSender(), tokenIn, amountIn, amountOut);\r\n\r\n        return amountOut;\r\n    }\r\n\r\n    // Fallback function to receive ETH\r\n    receive() external payable {}\r\n}\r\n"
      },
      "contracts/routers/interfaces/IBasicRouter.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\ninterface IBasicRouter {\r\n    // Events\r\n    event TokenSwap(\r\n        address indexed from,\r\n        address indexed tokenIn,\r\n        address indexed tokenOut,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n    event EthToTokenSwap(\r\n        address indexed from,\r\n        uint256 amountIn,\r\n        address indexed tokenOut,\r\n        uint256 amountOut\r\n    );\r\n    event TokenToEthSwap(\r\n        address indexed from,\r\n        address indexed tokenIn,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n\r\n    function weth() external pure returns (address);\r\n\r\n    // Set the price of a token in USD (in wei format, where 1 USD = 10^18)\r\n    function setTokenPrice(address token, uint256 priceUSD) external;\r\n\r\n    // Get the calculated amountOut based on token prices\r\n    function getAmountOut(\r\n        address tokenIn,\r\n        address tokenOut,\r\n        uint256 amountIn\r\n    ) external view returns (uint256);\r\n\r\n    // Swap from one token to another using stored USD prices\r\n    function swapTokenToToken(\r\n        address tokenIn,\r\n        address tokenOut,\r\n        uint256 amountIn,\r\n        address to\r\n    ) external returns (uint256);\r\n\r\n    // Swap ETH to token using stored USD prices\r\n    function swapETHToTokens(\r\n        address tokenOut,\r\n        address to\r\n    ) external payable returns (uint256);\r\n\r\n    // Swap Token to ETH using stored USD prices\r\n    function swapTokensToETH(\r\n        address tokenIn,\r\n        uint256 amountIn,\r\n        address to\r\n    ) external returns (uint256);\r\n}\r\n"
      },
      "contracts/src/HoneyErrors.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\nerror InsufficientWalletBalance(\r\n    address account,\r\n    uint256 balance,\r\n    uint256 balanceNeeded\r\n);\r\nerror AlreadyExists();\r\nerror NotCreated();\r\nerror SwapDoesNotExist(bytes32 orderId);\r\nerror SwapQuantityIsZero();\r\nerror InsufficientSwapInputValue();\r\nerror TokenInIsTokenOut();\r\nerror InsufficientOutputAmount(uint256 amountOut, uint256 expectedAmountOut);\r\nerror InsufficientInputAmount(uint256 amountIn, uint256 expectedAmountIn);\r\nerror InsufficientLiquidity();\r\nerror InsufficientMsgValue();\r\nerror AmountInIsZero();\r\nerror AddressIsZero();\r\nerror IdenticalTokenAddresses();\r\nerror InvalidInputTokenForSwapPlacement();\r\nerror SwapNotEligibleForRefresh(bytes32 orderId);\r\nerror AmountOutRequiredIsZero(bytes32 orderId);\r\nerror ExecutorNotCheckedIn();\r\nerror InvalidToAddressBits();\r\nerror V2SwapFailed();\r\nerror V3SwapFailed();\r\n"
      },
      "contracts/src/HoneyFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\nimport \"./HoneyErrors.sol\";\r\nimport \"../lib/libraries/EquitoMessageLibrary.sol\";\r\nimport {EquitoApp} from \"../lib/EquitoApp.sol\";\r\nimport {ITokenMap} from \"./interfaces/ITokenMap.sol\";\r\nimport {IHoneyFactory} from \"./interfaces/IHoneyFactory.sol\";\r\nimport {IHoneyETHPool} from \"./interfaces/IHoneyETHPool.sol\";\r\nimport {IHoneyPool} from \"./interfaces/IHoneyPool.sol\";\r\nimport {HoneyETHPool} from \"./pools/HoneyETHPool.sol\";\r\nimport {HoneyERC20Pool} from \"./pools/HoneyERC20Pool.sol\";\r\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract HoneyFactory is EquitoApp, IHoneyFactory, AccessControl {\r\n    bytes32 public constant HONEY_ROUTER_ROLE = keccak256(\"HONEY_ROUTER_ROLE\");\r\n\r\n    address private constant WETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n\r\n    mapping(address => address) private _pools;\r\n\r\n    ITokenMap private tokenMap;\r\n\r\n    constructor(address _tokenMap, address _router) EquitoApp(_router) {\r\n        tokenMap = ITokenMap(_tokenMap);\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n    }\r\n\r\n    function addRouter(\r\n        address honeyRouter\r\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        _grantRole(HONEY_ROUTER_ROLE, honeyRouter);\r\n    }\r\n\r\n    function removeRouter(\r\n        address honeyRouter\r\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        _revokeRole(HONEY_ROUTER_ROLE, honeyRouter);\r\n    }\r\n\r\n    function createPool(address token) external override {\r\n        if (_pools[token] != address(0)) {\r\n            revert AlreadyExists();\r\n        }\r\n\r\n        if (token == WETH) {\r\n            _pools[token] = address(new HoneyETHPool());\r\n        } else {\r\n            _pools[token] = address(new HoneyERC20Pool(token));\r\n        }\r\n    }\r\n\r\n    function weth() external pure returns (address) {\r\n        return WETH;\r\n    }\r\n\r\n    function getPool(address token) external view override returns (address) {\r\n        return _getPool(token);\r\n    }\r\n\r\n    function getEquitoFee() external view returns (uint256) {\r\n        return router.getFee(address(this));\r\n    }\r\n\r\n    function withdrawFromPool(\r\n        address token,\r\n        uint256 amount\r\n    ) external onlyRole(HONEY_ROUTER_ROLE) {\r\n        address receiver = _msgSender();\r\n\r\n        if (token == WETH) {\r\n            IHoneyETHPool(_pools[WETH]).withdraw(amount, receiver);\r\n        } else {\r\n            IHoneyPool(_pools[token]).withdraw(amount, receiver);\r\n        }\r\n    }\r\n\r\n    function _releasedTokens(\r\n        address peerToken,\r\n        uint256 sourceChainSelector,\r\n        address receiver,\r\n        uint256 amount\r\n    ) internal {\r\n        address token = tokenMap.get(peerToken, sourceChainSelector);\r\n\r\n        if (token == WETH) {\r\n            IHoneyETHPool(_pools[WETH]).withdraw(amount, receiver);\r\n        } else {\r\n            IHoneyPool(_pools[token]).withdraw(amount, receiver);\r\n        }\r\n\r\n        emit ReleasedTokens(sourceChainSelector, receiver, amount);\r\n    }\r\n\r\n    function crossChainCall(\r\n        address receiver,\r\n        uint256 destinationChainSelector,\r\n        address token,\r\n        uint256 amount\r\n    ) external payable override {\r\n        bytes memory data = abi.encode(token, receiver, amount);\r\n\r\n        router.sendMessage{value: msg.value}(\r\n            peers[destinationChainSelector],\r\n            destinationChainSelector,\r\n            data\r\n        );\r\n    }\r\n\r\n    function _receiveMessageFromPeer(\r\n        EquitoMessage calldata message,\r\n        bytes calldata data\r\n    ) internal override {\r\n        // decode incoming message data\r\n        (address token, address receiver, uint256 amount) = abi.decode(\r\n            data,\r\n            (address, address, uint256)\r\n        );\r\n\r\n        // callback function\r\n        _releasedTokens(token, message.sourceChainSelector, receiver, amount);\r\n    }\r\n\r\n    function _getPool(address token) internal view returns (address) {\r\n        if (_pools[token] == address(0)) {\r\n            revert NotCreated();\r\n        }\r\n\r\n        return _pools[token];\r\n    }\r\n\r\n    function toBase64(address value) public pure returns (bytes64 memory) {\r\n        return EquitoMessageLibrary.addressToBytes64(value);\r\n    }\r\n}\r\n"
      },
      "contracts/src/HoneyRouter01.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\nimport \"./HoneyErrors.sol\";\r\nimport \"../lib/libraries/EquitoMessageLibrary.sol\";\r\nimport {HoneyFeeMath} from \"./lib/HoneyFeeMath.sol\";\r\nimport {IHoneyRouter01} from \"./interfaces/IHoneyRouter01.sol\";\r\nimport {ITokenMap} from \"./interfaces/ITokenMap.sol\";\r\nimport {HoneyFactory} from \"./HoneyFactory.sol\";\r\nimport {IHoneyFactory} from \"./interfaces/IHoneyFactory.sol\";\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport {Pausable} from \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport {EquitoApp} from \"../lib/EquitoApp.sol\";\r\nimport {IHoneyExecutor} from \"./interfaces/IHoneyExecutor.sol\";\r\n\r\ncontract HoneyRouter01 is IHoneyRouter01, AccessControl, Pausable, EquitoApp {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address private constant WETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n\r\n    address public TREASURY;\r\n\r\n    ITokenMap private tokenMap;\r\n    IHoneyFactory private factory;\r\n    IHoneyExecutor private executor;\r\n\r\n    constructor(\r\n        address _tokenMap,\r\n        address _router,\r\n        address _treasury\r\n    ) EquitoApp(_router) {\r\n        TREASURY = _treasury;\r\n\r\n        tokenMap = ITokenMap(_tokenMap);\r\n\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n    }\r\n\r\n    // =================== MUTABLE  =================== //\r\n\r\n    function swapETHToTokens(\r\n        address tokenOut,\r\n        uint256 amountOutMin,\r\n        uint256 destinationChainSelector\r\n    ) external payable override whenNotPaused {\r\n        address sender = _msgSender();\r\n\r\n        uint256 amountIn = 0;\r\n\r\n        if (router.chainSelector() == destinationChainSelector) {\r\n            amountIn = msg.value;\r\n        } else {\r\n            // cross chain swap\r\n            uint256 equitoFee = router.getFee(address(this));\r\n            amountIn = msg.value - equitoFee;\r\n        }\r\n\r\n        uint256 amountOut = executor.swapETHToTokens{value: amountIn}(\r\n            tokenOut,\r\n            amountOutMin,\r\n            address(this)\r\n        );\r\n\r\n        if (router.chainSelector() == destinationChainSelector) {\r\n            // no cross chain call\r\n            // transfer Tokens to sender\r\n            IERC20(tokenOut).safeTransfer(sender, amountOut);\r\n        } else {\r\n            // cross chain call to release Tokens on the destination chain.\r\n            _crossChainCall(\r\n                sender,\r\n                destinationChainSelector,\r\n                tokenOut,\r\n                amountOut\r\n            );\r\n        }\r\n    }\r\n\r\n    function swapTokensToETH(\r\n        address tokenIn,\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        uint256 destinationChainSelector\r\n    ) external payable override whenNotPaused {\r\n        address sender = _msgSender();\r\n\r\n        // Transfer token in to executor contract.\r\n        IERC20(tokenIn).safeTransferFrom(sender, address(executor), amountIn);\r\n\r\n        uint256 amountOut = executor.swapTokensToETH(\r\n            tokenIn,\r\n            amountIn,\r\n            amountOutMin,\r\n            address(this)\r\n        );\r\n\r\n        if (router.chainSelector() == destinationChainSelector) {\r\n            // no cross chain call\r\n            // transfer Tokens to sender\r\n            payable(sender).transfer(amountOut);\r\n        } else {\r\n            // cross chain call to release Tokens on the destination chain.\r\n            _crossChainCall(sender, destinationChainSelector, WETH, amountOut);\r\n        }\r\n    }\r\n\r\n    function swapTokensToTokens(\r\n        address tokenIn,\r\n        uint256 amountIn,\r\n        address tokenOut,\r\n        uint256 amountOutMin,\r\n        uint256 destinationChainSelector\r\n    ) external payable override whenNotPaused {\r\n        address sender = _msgSender();\r\n\r\n        // Transfer token in to executor contract.\r\n        IERC20(tokenIn).safeTransferFrom(sender, address(executor), amountIn);\r\n\r\n        uint256 amountOut = executor.swapTokensToTokens(\r\n            tokenIn,\r\n            amountIn,\r\n            tokenOut,\r\n            amountOutMin,\r\n            address(this)\r\n        );\r\n\r\n        if (router.chainSelector() == destinationChainSelector) {\r\n            // no cross chain call\r\n            // transfer Tokens to sender\r\n            IERC20(tokenOut).safeTransfer(sender, amountOut);\r\n        } else {\r\n            // cross chain call to release Tokens on the destination chain.\r\n            _crossChainCall(\r\n                sender,\r\n                destinationChainSelector,\r\n                tokenOut,\r\n                amountOut\r\n            );\r\n        }\r\n    }\r\n\r\n    // =================== VIEW FUNCTIONS =================== //\r\n\r\n    function toBase64(address value) public pure returns (bytes64 memory) {\r\n        return EquitoMessageLibrary.addressToBytes64(value);\r\n    }\r\n\r\n    function getEquitoFee() external view override returns (uint256) {\r\n        return router.getFee(address(this));\r\n    }\r\n\r\n    function bestRouter(\r\n        uint256 amountIn,\r\n        address tokenIn,\r\n        address tokenOut\r\n    ) external view returns (uint256, address, IHoneyExecutor.Router memory) {\r\n        return executor.bestRouter(amountIn, tokenIn, tokenOut);\r\n    }\r\n\r\n    // =================== ADMIN FUNCTIONS =================== //\r\n\r\n    function updateFactory(\r\n        address newFactory\r\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        factory = IHoneyFactory(newFactory);\r\n    }\r\n\r\n    function updateExecutor(\r\n        address newExecutor\r\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        executor = IHoneyExecutor(newExecutor);\r\n    }\r\n\r\n    function pause() external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        _pause();\r\n    }\r\n\r\n    function unPause() external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        _unpause();\r\n    }\r\n\r\n    // =================== INTERNAL =================== //\r\n\r\n    function _releasedTokens(\r\n        uint256 sourceChainSelector,\r\n        address peerToken,\r\n        address receiver,\r\n        uint256 amountOut\r\n    ) internal {\r\n        address token = tokenMap.get(peerToken, sourceChainSelector);\r\n\r\n        // Withdraw from pool to contract\r\n        factory.withdrawFromPool(token, amountOut);\r\n\r\n        (uint256 finalAmountOut, uint256 honeyFeeAmount) = HoneyFeeMath.split(\r\n            amountOut\r\n        );\r\n\r\n        // transfer Tokens amount out to receiver\r\n        IERC20(token).safeTransfer(receiver, finalAmountOut);\r\n\r\n        // transfer Tokens honey fee amount to treasury\r\n        IERC20(token).safeTransfer(TREASURY, honeyFeeAmount);\r\n    }\r\n\r\n    // =================== CROSS CHAIN =================== //\r\n\r\n    function _crossChainCall(\r\n        address receiver,\r\n        uint256 destinationChainSelector,\r\n        address tokenOut,\r\n        uint256 amountOut\r\n    ) internal {\r\n        bytes memory data = abi.encode(tokenOut, receiver, amountOut);\r\n\r\n        uint256 equitoFee = router.getFee(address(this));\r\n\r\n        router.sendMessage{value: equitoFee}(\r\n            peers[destinationChainSelector],\r\n            destinationChainSelector,\r\n            data\r\n        );\r\n    }\r\n\r\n    function _receiveMessageFromPeer(\r\n        EquitoMessage calldata message,\r\n        bytes calldata data\r\n    ) internal override {\r\n        // decode incoming message data\r\n        (address tokenOut, address receiver, uint256 amountOut) = abi.decode(\r\n            data,\r\n            (address, address, uint256)\r\n        );\r\n\r\n        // callback function\r\n        _releasedTokens(\r\n            message.sourceChainSelector,\r\n            tokenOut,\r\n            receiver,\r\n            amountOut\r\n        );\r\n    }\r\n}\r\n"
      },
      "contracts/src/interfaces/IHoneyETHPool.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\ninterface IHoneyETHPool {\r\n    function addLiquidity() external payable;\r\n\r\n    function removeLiquidity(\r\n        uint256 lpTokens,\r\n        uint256 secondaryChainSelector\r\n    ) external payable;\r\n\r\n    function deposit() external payable;\r\n\r\n    function withdraw(uint256 amount, address to) external;\r\n}\r\n"
      },
      "contracts/src/interfaces/IHoneyExecutor.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\ninterface IHoneyExecutor {\r\n    // Struct to store router information\r\n    struct Router {\r\n        string name;\r\n        string routerURI;\r\n    }\r\n\r\n    function swapETHToTokens(\r\n        address tokenOut,\r\n        uint256 amountOutMin,\r\n        address to\r\n    ) external payable returns (uint256);\r\n\r\n    function swapTokensToETH(\r\n        address tokenIn,\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        address to\r\n    ) external payable returns (uint256);\r\n\r\n    function swapTokensToTokens(\r\n        address tokenIn,\r\n        uint256 amountIn,\r\n        address tokenOut,\r\n        uint256 amountOutMin,\r\n        address to\r\n    ) external payable returns (uint256);\r\n\r\n    function bestRouter(\r\n        uint256 amountIn,\r\n        address tokenIn,\r\n        address tokenOut\r\n    ) external view returns (uint256, address routerId, Router memory);\r\n\r\n    function addRouter(\r\n        string calldata name,\r\n        string calldata routerURI,\r\n        address routerId\r\n    ) external;\r\n\r\n    function removeRouter(address routerId) external;\r\n\r\n    function getRouterCount() external view returns (uint256);\r\n}\r\n"
      },
      "contracts/src/interfaces/IHoneyFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\ninterface IHoneyFactory {\r\n    event ReleasedTokens(\r\n        uint256 sourceChainSelector,\r\n        address receiver,\r\n        uint256 amount\r\n    );\r\n\r\n    function createPool(address token) external;\r\n\r\n    function getPool(address token) external view returns (address);\r\n\r\n    function weth() external pure returns (address);\r\n\r\n    function getEquitoFee() external view returns (uint256);\r\n\r\n    function withdrawFromPool(address token, uint256 amount) external;\r\n\r\n    function crossChainCall(\r\n        address receiver,\r\n        uint256 destinationChainSelector,\r\n        address token,\r\n        uint256 amount\r\n    ) external payable;\r\n}\r\n"
      },
      "contracts/src/interfaces/IHoneyPool.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\ninterface IHoneyPool {\r\n    function addLiquidity(uint256 amount) external;\r\n\r\n    function removeLiquidity(\r\n        uint256 lpTokens,\r\n        uint256 secondaryChainSelector\r\n    ) external payable;\r\n\r\n    function deposit(uint256 amount) external;\r\n\r\n    function withdraw(uint256 amount, address to) external;\r\n}\r\n"
      },
      "contracts/src/interfaces/IHoneyRouter01.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\ninterface IHoneyRouter01 {\r\n    function swapETHToTokens(\r\n        address tokenOut,\r\n        uint256 amountOutMin,\r\n        uint256 destinationChainSelector\r\n    ) external payable;\r\n\r\n    function swapTokensToETH(\r\n        address tokenIn,\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        uint256 destinationChainSelector\r\n    ) external payable;\r\n\r\n    function swapTokensToTokens(\r\n        address tokenIn,\r\n        uint256 amountIn,\r\n        address tokenOut,\r\n        uint256 amountOutMin,\r\n        uint256 destinationChainSelector\r\n    ) external payable;\r\n\r\n    function getEquitoFee() external view returns (uint256);\r\n}\r\n"
      },
      "contracts/src/interfaces/ITokenMap.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\ninterface ITokenMap {\r\n    function set(address token, uint256 chainId, address mappedToken) external;\r\n\r\n    function get(\r\n        address token,\r\n        uint256 chainId\r\n    ) external view returns (address);\r\n}\r\n"
      },
      "contracts/src/lib/HoneyFeeMath.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\nlibrary HoneyFeeMath {\r\n    uint256 public constant DENOMINATOR = 1_000_000;\r\n    uint256 public constant HONEY_FEE_PERCENTAGE = 1_000; // 0.1%\r\n\r\n    // @params amount out from swap\r\n    // @returns final amount out, honeyFee\r\n    function split(uint256 amount) public pure returns (uint256, uint256) {\r\n        uint256 honeyFee = extract(amount, HONEY_FEE_PERCENTAGE);\r\n        return ((amount - honeyFee), honeyFee);\r\n    }\r\n\r\n    // This function extracts the percentage of the value.\r\n    // The `percentage` is expected to be a value between 0 and DENOMINATOR.\r\n    function extract(\r\n        uint256 value,\r\n        uint256 percentage\r\n    ) public pure returns (uint256) {\r\n        require(percentage <= DENOMINATOR, \"Percentage cannot exceed 100%\");\r\n        return (value * percentage) / DENOMINATOR;\r\n    }\r\n}\r\n"
      },
      "contracts/src/pools/HoneyERC20Pool.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\nimport \"../HoneyErrors.sol\";\r\nimport {IHoneyPool} from \"../interfaces/IHoneyPool.sol\";\r\nimport {IHoneyFactory} from \"../interfaces/IHoneyFactory.sol\";\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract HoneyERC20Pool is IHoneyPool, ERC20, AccessControl {\r\n    using SafeERC20 for ERC20;\r\n\r\n    uint256 private constant MINIMAL_LIQUIDITY = 10_000 * 1e18;\r\n\r\n    // Address of the ERC20 token being used in the pool\r\n    address public immutable token;\r\n\r\n    // Total reserves of the token in the pool\r\n    uint256 public totalReserves;\r\n\r\n    IHoneyFactory private _factory;\r\n\r\n    constructor(address _token) ERC20(\"HoneyPool LP Token\", \"HLP\") {\r\n        token = _token;\r\n\r\n        _factory = IHoneyFactory(_msgSender());\r\n\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n    }\r\n\r\n    // Adds liquidity to the pool in the form of the specified token\r\n    function addLiquidity(uint256 amount) external override {\r\n        if (amount == 0) {\r\n            revert AmountInIsZero();\r\n        }\r\n\r\n        address sender = _msgSender();\r\n\r\n        // Transfer the tokens from the user to the pool\r\n        ERC20(token).safeTransferFrom(sender, address(this), amount);\r\n\r\n        uint256 lpTokensToMint;\r\n\r\n        // If this is the first deposit, the liquidity is just the amount deposited\r\n        if (totalReserves == 0) {\r\n            lpTokensToMint = MINIMAL_LIQUIDITY;\r\n        } else {\r\n            // Calculate liquidity based on existing pool reserves and LP supply\r\n            lpTokensToMint = (amount * totalSupply()) / totalReserves;\r\n        }\r\n\r\n        // Mint LP tokens to the user\r\n        _mint(sender, lpTokensToMint);\r\n\r\n        // Update total reserves\r\n        totalReserves += amount;\r\n    }\r\n\r\n    // Removes liquidity from the pool\r\n    function removeLiquidity(\r\n        uint256 lpTokens,\r\n        uint256 secondaryChainSelector\r\n    ) external payable override {\r\n        if (lpTokens == 0) {\r\n            revert AmountInIsZero();\r\n        }\r\n\r\n        address sender = _msgSender();\r\n\r\n        // Calculate the underlying token amount to return based on LP tokens\r\n        uint256 amount = (lpTokens * totalReserves) / totalSupply();\r\n\r\n        if (amount == 0) {\r\n            revert AmountInIsZero();\r\n        }\r\n\r\n        // Burn the LP tokens\r\n        _burn(sender, lpTokens);\r\n\r\n        uint256 poolBalance = balanceOf(address(this));\r\n\r\n        if (poolBalance < amount) {\r\n            uint256 equitoFee = _factory.getEquitoFee();\r\n\r\n            // Get the amount remain for user\r\n            uint256 secondaryAmount = amount - poolBalance;\r\n\r\n            // Transfer the underlying available tokens back to the user\r\n            ERC20(token).safeTransfer(sender, poolBalance);\r\n\r\n            _factory.crossChainCall{value: equitoFee}(\r\n                sender,\r\n                secondaryChainSelector,\r\n                token,\r\n                secondaryAmount\r\n            );\r\n        } else {\r\n            // Transfer the underlying tokens back to the user\r\n            ERC20(token).safeTransfer(sender, amount);\r\n            // Include unspent ETH\r\n            payable(sender).transfer(msg.value);\r\n        }\r\n\r\n        // Update total reserves\r\n        totalReserves -= amount;\r\n    }\r\n\r\n    function deposit(uint256 amount) external override {\r\n        address sender = _msgSender();\r\n\r\n        // Transfer the tokens from the user to the pool\r\n        ERC20(token).safeTransferFrom(sender, address(this), amount);\r\n\r\n        totalReserves += amount;\r\n    }\r\n\r\n    function withdraw(\r\n        uint256 amount,\r\n        address to\r\n    ) external override onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        // Transfer the underlying tokens back to the user\r\n        ERC20(token).safeTransfer(to, amount);\r\n    }\r\n}\r\n"
      },
      "contracts/src/pools/HoneyETHPool.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity <=0.8.24;\r\n\r\nimport \"../HoneyErrors.sol\";\r\nimport {IHoneyETHPool} from \"../interfaces/IHoneyETHPool.sol\";\r\nimport {IHoneyFactory} from \"../interfaces/IHoneyFactory.sol\";\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\ncontract HoneyETHPool is IHoneyETHPool, ERC20, AccessControl {\r\n    using SafeERC20 for ERC20;\r\n\r\n    uint256 private constant MINIMAL_LIQUIDITY = 10_000 * 1e18;\r\n\r\n    // Total reserves of the token in the pool\r\n    uint256 public totalReserves;\r\n\r\n    IHoneyFactory private _factory;\r\n\r\n    constructor() ERC20(\"HoneyPool LP Token\", \"HLP\") {\r\n        _factory = IHoneyFactory(_msgSender());\r\n\r\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\r\n    }\r\n\r\n    // Adds liquidity to the pool in the form of the specified token\r\n    function addLiquidity() external payable override {\r\n        uint256 amount = msg.value;\r\n\r\n        if (amount == 0) {\r\n            revert AmountInIsZero();\r\n        }\r\n\r\n        address sender = _msgSender();\r\n\r\n        uint256 lpTokensToMint;\r\n\r\n        // If this is the first deposit, the liquidity is just the amount deposited\r\n        if (totalReserves == 0) {\r\n            lpTokensToMint = MINIMAL_LIQUIDITY;\r\n        } else {\r\n            // Calculate liquidity based on existing pool reserves and LP supply\r\n            lpTokensToMint = (amount * totalSupply()) / totalReserves;\r\n        }\r\n\r\n        // Mint LP tokens to the user\r\n        _mint(sender, lpTokensToMint);\r\n\r\n        // Update total reserves\r\n        totalReserves += amount;\r\n    }\r\n\r\n    function removeLiquidity(\r\n        uint256 lpTokens,\r\n        uint256 secondaryChainSelector\r\n    ) external payable override {\r\n        if (lpTokens == 0) {\r\n            revert AmountInIsZero();\r\n        }\r\n\r\n        address sender = _msgSender();\r\n\r\n        // Calculate the underlying token amount to return based on LP tokens\r\n        uint256 amount = (lpTokens * totalReserves) / totalSupply();\r\n\r\n        if (amount == 0) {\r\n            revert AmountInIsZero();\r\n        }\r\n\r\n        // Burn the LP tokens\r\n        _burn(sender, lpTokens);\r\n\r\n        uint256 poolBalance = address(this).balance;\r\n\r\n        if (poolBalance < amount) {\r\n            uint256 equitoFee = _factory.getEquitoFee();\r\n\r\n            // Extract equito fee from amount\r\n            uint256 amountExcludingFee = amount - equitoFee;\r\n\r\n            // Get the amount remain for user\r\n            uint256 secondaryAmount = amountExcludingFee - poolBalance;\r\n\r\n            // Transfer the underlying available tokens back to the user\r\n            payable(sender).transfer(poolBalance);\r\n\r\n            _factory.crossChainCall{value: equitoFee}(\r\n                sender,\r\n                secondaryChainSelector,\r\n                _factory.weth(),\r\n                secondaryAmount\r\n            );\r\n        } else {\r\n            // Transfer the underlying tokens back to the user\r\n            // Include unspent ETH\r\n            payable(sender).transfer(amount + msg.value);\r\n        }\r\n\r\n        // Update total reserves\r\n        totalReserves -= amount;\r\n    }\r\n\r\n    function deposit() external payable override {\r\n        totalReserves += msg.value;\r\n    }\r\n\r\n    function withdraw(\r\n        uint256 amount,\r\n        address to\r\n    ) external override onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        // Transfer the underlying tokens back to the user\r\n        payable(to).transfer(amount);\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/lib/EquitoApp.sol:116:9:\n    |\n116 |         EquitoMessage calldata message,\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 4976,
          "file": "contracts/lib/EquitoApp.sol",
          "start": 4946
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/lib/EquitoApp.sol:117:9:\n    |\n117 |         bytes calldata messageData\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 5013,
          "file": "contracts/lib/EquitoApp.sol",
          "start": 4987
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1891
            ],
            "ERC165": [
              2032
            ],
            "IAccessControl": [
              378
            ]
          },
          "id": 296,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
              "file": "./IAccessControl.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 379,
              "src": "134:52:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "IAccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "142:14:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1892,
              "src": "187:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1891,
                    "src": "195:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
              "file": "../utils/introspection/ERC165.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 2033,
              "src": "233:57:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 6,
                    "name": "ERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2032,
                    "src": "241:6:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 9,
                    "name": "Context",
                    "nameLocations": [
                      "1988:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1891,
                    "src": "1988:7:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1988:7:0"
                },
                {
                  "baseName": {
                    "id": 11,
                    "name": "IAccessControl",
                    "nameLocations": [
                      "1997:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 378,
                    "src": "1997:14:0"
                  },
                  "id": 12,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1997:14:0"
                },
                {
                  "baseName": {
                    "id": 13,
                    "name": "ERC165",
                    "nameLocations": [
                      "2013:6:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2032,
                    "src": "2013:6:0"
                  },
                  "id": 14,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2013:6:0"
                }
              ],
              "canonicalName": "AccessControl",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 8,
                "nodeType": "StructuredDocumentation",
                "src": "292:1660:0",
                "text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
              },
              "fullyImplemented": true,
              "id": 295,
              "linearizedBaseContracts": [
                295,
                2032,
                2044,
                378,
                1891
              ],
              "name": "AccessControl",
              "nameLocation": "1971:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "AccessControl.RoleData",
                  "id": 21,
                  "members": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "hasRole",
                      "nameLocation": "2085:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2052:40:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "typeName": {
                        "id": 17,
                        "keyName": "account",
                        "keyNameLocation": "2068:7:0",
                        "keyType": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2052:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 16,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2079:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 20,
                      "mutability": "mutable",
                      "name": "adminRole",
                      "nameLocation": "2110:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2102:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2102:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RoleData",
                  "nameLocation": "2033:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 295,
                  "src": "2026:100:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_roles",
                  "nameLocation": "2174:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2132:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                    "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                  },
                  "typeName": {
                    "id": 25,
                    "keyName": "role",
                    "keyNameLocation": "2148:4:0",
                    "keyType": {
                      "id": 22,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2132:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                      "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 24,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 23,
                        "name": "RoleData",
                        "nameLocations": [
                          "2156:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 21,
                        "src": "2156:8:0"
                      },
                      "referencedDeclaration": 21,
                      "src": "2156:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
                        "typeString": "struct AccessControl.RoleData"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "functionSelector": "a217fddf",
                  "id": 29,
                  "mutability": "constant",
                  "name": "DEFAULT_ADMIN_ROLE",
                  "nameLocation": "2211:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2187:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "30783030",
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2232:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x00"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "2454:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "2475:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 34,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 93,
                            "src": "2464:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2464:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "2464:16:0"
                      },
                      {
                        "id": 38,
                        "nodeType": "PlaceholderStatement",
                        "src": "2490:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 30,
                    "nodeType": "StructuredDocumentation",
                    "src": "2243:174:0",
                    "text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
                  },
                  "id": 40,
                  "name": "onlyRole",
                  "nameLocation": "2431:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2448:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2440:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2439:14:0"
                  },
                  "src": "2422:76:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    2031
                  ],
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "2656:111:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "2673:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 51,
                                    "name": "IAccessControl",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "2693:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  ],
                                  "id": 50,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "2688:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2688:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
                                  "typeString": "type(contract IAccessControl)"
                                }
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2709:11:0",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "2688:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "2673:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 57,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "2748:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "id": 55,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -25,
                                "src": "2724:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
                                  "typeString": "type(contract super AccessControl)"
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2730:17:0",
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2031,
                              "src": "2724:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) view returns (bool)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2724:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2673:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 48,
                        "id": 60,
                        "nodeType": "Return",
                        "src": "2666:94:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "2504:56:0",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 62,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "2574:17:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 45,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2632:8:0"
                  },
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "2599:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2592:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2591:20:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2650:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2649:6:0"
                  },
                  "scope": 295,
                  "src": "2565:202:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    345
                  ],
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "2937:53:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 72,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2954:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 74,
                              "indexExpression": {
                                "id": 73,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2961:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2967:7:0",
                            "memberName": "hasRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "2954:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "id": 76,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "2975:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2954:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 71,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "2947:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 63,
                    "nodeType": "StructuredDocumentation",
                    "src": "2773:76:0",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "2863:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2879:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2871:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2871:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2893:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2885:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2885:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2870:31:0"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2931:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2931:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2930:6:0"
                  },
                  "scope": 295,
                  "src": "2854:136:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "3255:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "3276:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 88,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "3282:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3282:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 114,
                            "src": "3265:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) view"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "3265:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "2996:198:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
                  },
                  "id": 93,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3208:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3227:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "3219:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3219:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3218:14:0"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3255:0:0"
                  },
                  "scope": 295,
                  "src": "3199:103:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "3505:124:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3519:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 102,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "3528:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 103,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "3534:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 101,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "3520:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 112,
                        "nodeType": "IfStatement",
                        "src": "3515:108:0",
                        "trueBody": {
                          "id": 111,
                          "nodeType": "Block",
                          "src": "3544:79:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 107,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "3598:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 108,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96,
                                    "src": "3607:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 106,
                                  "name": "AccessControlUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "3565:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
                                    "typeString": "function (address,bytes32) pure"
                                  }
                                },
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3565:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 110,
                              "nodeType": "RevertStatement",
                              "src": "3558:54:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "3308:119:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
                  },
                  "id": 114,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3441:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3460:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3452:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3452:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3474:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3466:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3466:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3451:31:0"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3505:0:0"
                  },
                  "scope": 295,
                  "src": "3432:197:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    353
                  ],
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "3884:46:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 122,
                              "name": "_roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "3901:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                              }
                            },
                            "id": 124,
                            "indexExpression": {
                              "id": 123,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "3908:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3901:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RoleData_$21_storage",
                              "typeString": "struct AccessControl.RoleData storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3914:9:0",
                          "memberName": "adminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "3901:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 121,
                        "id": 126,
                        "nodeType": "Return",
                        "src": "3894:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 115,
                    "nodeType": "StructuredDocumentation",
                    "src": "3635:170:0",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "3819:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3840:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3832:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3832:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3831:14:0"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3875:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3875:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3874:9:0"
                  },
                  "scope": 295,
                  "src": "3810:120:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    361
                  ],
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "4320:42:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 142,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4341:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 143,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "4347:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 141,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "4330:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4330:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "4330:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "3936:285:0",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 147,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 137,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4313:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 136,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4300:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4300:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 139,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 135,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4291:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4291:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4291:28:0"
                    }
                  ],
                  "name": "grantRole",
                  "nameLocation": "4235:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4253:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4245:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4245:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4267:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4259:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4259:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4244:31:0"
                  },
                  "returnParameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4320:0:0"
                  },
                  "scope": 295,
                  "src": "4226:136:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    369
                  ],
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "4737:43:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 161,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4759:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 162,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "4765:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 160,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "4747:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4747:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "4747:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "4368:269:0",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "d547741f",
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 156,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4730:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 155,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4717:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4717:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 158,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 154,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4708:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4708:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4708:28:0"
                    }
                  ],
                  "name": "revokeRole",
                  "nameLocation": "4651:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4670:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4662:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4684:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4676:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4661:31:0"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4737:0:0"
                  },
                  "scope": 295,
                  "src": "4642:138:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    377
                  ],
                  "body": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "5407:166:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 174,
                            "name": "callerConfirmation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5421:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 175,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1873,
                              "src": "5443:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5443:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5421:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 182,
                        "nodeType": "IfStatement",
                        "src": "5417:102:0",
                        "trueBody": {
                          "id": 181,
                          "nodeType": "Block",
                          "src": "5457:62:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 178,
                                  "name": "AccessControlBadConfirmation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "5478:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5478:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 180,
                              "nodeType": "RevertStatement",
                              "src": "5471:37:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 184,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "5541:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 185,
                              "name": "callerConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "5547:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 183,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "5529:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5529:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "5529:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 167,
                    "nodeType": "StructuredDocumentation",
                    "src": "4786:537:0",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "36568abe",
                  "id": 189,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "5337:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5358:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5350:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5350:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "5372:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5364:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5364:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5349:42:0"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5407:0:0"
                  },
                  "scope": 295,
                  "src": "5328:245:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "5771:174:0",
                    "statements": [
                      {
                        "assignments": [
                          198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 198,
                            "mutability": "mutable",
                            "name": "previousAdminRole",
                            "nameLocation": "5789:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "5781:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 197,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5781:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 202,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 200,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5822:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 199,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "5809:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5809:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5781:46:0"
                      },
                      {
                        "expression": {
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 203,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "5837:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 205,
                              "indexExpression": {
                                "id": 204,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "5844:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5837:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5850:9:0",
                            "memberName": "adminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "5837:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 207,
                            "name": "adminRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "5862:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5837:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "5837:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 211,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5903:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 212,
                              "name": "previousAdminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "5909:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 213,
                              "name": "adminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "5928:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 210,
                            "name": "RoleAdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "5886:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32,bytes32)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5886:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "EmitStatement",
                        "src": "5881:57:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 190,
                    "nodeType": "StructuredDocumentation",
                    "src": "5579:114:0",
                    "text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
                  },
                  "id": 217,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setRoleAdmin",
                  "nameLocation": "5707:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5729:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5721:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5721:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "adminRole",
                        "nameLocation": "5743:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5735:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5735:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5720:33:0"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5771:0:0"
                  },
                  "scope": 295,
                  "src": "5698:247:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 255,
                    "nodeType": "Block",
                    "src": "6262:233:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6276:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 228,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6285:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 229,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "6291:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 227,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "6277:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6277:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 253,
                          "nodeType": "Block",
                          "src": "6452:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6473:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 226,
                              "id": 252,
                              "nodeType": "Return",
                              "src": "6466:12:0"
                            }
                          ]
                        },
                        "id": 254,
                        "nodeType": "IfStatement",
                        "src": "6272:217:0",
                        "trueBody": {
                          "id": 250,
                          "nodeType": "Block",
                          "src": "6301:145:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 232,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6315:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 234,
                                      "indexExpression": {
                                        "id": 233,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 220,
                                        "src": "6322:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6315:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6328:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6315:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 237,
                                  "indexExpression": {
                                    "id": 236,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6336:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6315:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6347:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "6315:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 240,
                              "nodeType": "ExpressionStatement",
                              "src": "6315:36:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 242,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 220,
                                    "src": "6382:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 243,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6388:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 244,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1873,
                                      "src": "6397:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6397:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 241,
                                  "name": "RoleGranted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "6370:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6370:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 247,
                              "nodeType": "EmitStatement",
                              "src": "6365:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6431:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 226,
                              "id": 249,
                              "nodeType": "Return",
                              "src": "6424:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 218,
                    "nodeType": "StructuredDocumentation",
                    "src": "5951:223:0",
                    "text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
                  },
                  "id": 256,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_grantRole",
                  "nameLocation": "6188:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6207:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6199:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6199:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6221:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6213:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6213:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6198:31:0"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6256:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6256:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6255:6:0"
                  },
                  "scope": 295,
                  "src": "6179:316:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "6814:233:0",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 267,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "6836:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 268,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "6842:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 266,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "6828:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6828:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 291,
                          "nodeType": "Block",
                          "src": "7004:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7025:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 265,
                              "id": 290,
                              "nodeType": "Return",
                              "src": "7018:12:0"
                            }
                          ]
                        },
                        "id": 292,
                        "nodeType": "IfStatement",
                        "src": "6824:217:0",
                        "trueBody": {
                          "id": 288,
                          "nodeType": "Block",
                          "src": "6852:146:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 270,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6866:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 272,
                                      "indexExpression": {
                                        "id": 271,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 259,
                                        "src": "6873:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6866:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 273,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6879:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6866:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 275,
                                  "indexExpression": {
                                    "id": 274,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6887:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6866:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6898:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6866:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 278,
                              "nodeType": "ExpressionStatement",
                              "src": "6866:37:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 280,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 259,
                                    "src": "6934:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 281,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6940:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 282,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1873,
                                      "src": "6949:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6949:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 279,
                                  "name": "RoleRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 335,
                                  "src": "6922:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6922:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 285,
                              "nodeType": "EmitStatement",
                              "src": "6917:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6983:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 265,
                              "id": 287,
                              "nodeType": "Return",
                              "src": "6976:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 257,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:224:0",
                    "text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
                  },
                  "id": 294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revokeRole",
                  "nameLocation": "6739:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6759:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6751:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6751:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6773:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6765:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6765:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6750:31:0"
                  },
                  "returnParameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6808:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6808:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6807:6:0"
                  },
                  "scope": 295,
                  "src": "6730:317:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 296,
              "src": "1953:5096:0",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "108:6942:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
          "exportedSymbols": {
            "IAccessControl": [
              378
            ]
          },
          "id": 379,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 297,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAccessControl",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 298,
                "nodeType": "StructuredDocumentation",
                "src": "135:89:1",
                "text": " @dev External interface of AccessControl declared to support ERC165 detection."
              },
              "fullyImplemented": false,
              "id": 378,
              "linearizedBaseContracts": [
                378
              ],
              "name": "IAccessControl",
              "nameLocation": "235:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 299,
                    "nodeType": "StructuredDocumentation",
                    "src": "256:56:1",
                    "text": " @dev The `account` is missing a role."
                  },
                  "errorSelector": "e2517d3f",
                  "id": 305,
                  "name": "AccessControlUnauthorizedAccount",
                  "nameLocation": "323:32:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "364:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "356:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "356:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "neededRole",
                        "nameLocation": "381:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "373:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "373:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "355:37:1"
                  },
                  "src": "317:76:1"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "399:148:1",
                    "text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
                  },
                  "errorSelector": "6697b232",
                  "id": 308,
                  "name": "AccessControlBadConfirmation",
                  "nameLocation": "558:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "586:2:1"
                  },
                  "src": "552:37:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 309,
                    "nodeType": "StructuredDocumentation",
                    "src": "595:254:1",
                    "text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
                  },
                  "eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
                  "id": 317,
                  "name": "RoleAdminChanged",
                  "nameLocation": "860:16:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "893:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "877:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "877:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 313,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousAdminRole",
                        "nameLocation": "915:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "899:33:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "899:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 315,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAdminRole",
                        "nameLocation": "950:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "934:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "934:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "876:87:1"
                  },
                  "src": "854:110:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "970:212:1",
                    "text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
                  },
                  "eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
                  "id": 326,
                  "name": "RoleGranted",
                  "nameLocation": "1193:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1221:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1205:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1205:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1243:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1227:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1227:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1268:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1252:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1252:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1204:71:1"
                  },
                  "src": "1187:89:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 327,
                    "nodeType": "StructuredDocumentation",
                    "src": "1282:275:1",
                    "text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
                  },
                  "eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
                  "id": 335,
                  "name": "RoleRevoked",
                  "nameLocation": "1568:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 329,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1596:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1580:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1580:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1618:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1602:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1602:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1643:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1627:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1627:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1579:71:1"
                  },
                  "src": "1562:89:1"
                },
                {
                  "documentation": {
                    "id": 336,
                    "nodeType": "StructuredDocumentation",
                    "src": "1657:76:1",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 345,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "1747:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1763:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1755:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1755:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1777:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1769:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1769:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1754:31:1"
                  },
                  "returnParameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1809:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1809:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1808:6:1"
                  },
                  "scope": 378,
                  "src": "1738:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1821:184:1",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "2019:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2040:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2032:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2032:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2031:14:1"
                  },
                  "returnParameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2069:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2069:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2068:9:1"
                  },
                  "scope": 378,
                  "src": "2010:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 354,
                    "nodeType": "StructuredDocumentation",
                    "src": "2084:239:1",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 361,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "grantRole",
                  "nameLocation": "2337:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2355:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2347:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2347:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2369:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2361:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2361:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2346:31:1"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2386:0:1"
                  },
                  "scope": 378,
                  "src": "2328:59:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "2393:223:1",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "d547741f",
                  "id": 369,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeRole",
                  "nameLocation": "2630:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2649:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2641:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2641:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2663:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2655:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2655:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2640:31:1"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2680:0:1"
                  },
                  "scope": 378,
                  "src": "2621:60:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "2687:491:1",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
                  },
                  "functionSelector": "36568abe",
                  "id": 377,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "3192:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3213:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3205:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3205:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "3227:18:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3219:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3219:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3204:42:1"
                  },
                  "returnParameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3255:0:1"
                  },
                  "scope": 378,
                  "src": "3183:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 379,
              "src": "225:3033:1",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "109:3150:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1891
            ],
            "Ownable": [
              526
            ]
          },
          "id": 527,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 380,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 382,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 527,
              "sourceUnit": 1892,
              "src": "128:45:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 381,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1891,
                    "src": "136:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 384,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1891,
                    "src": "692:7:2"
                  },
                  "id": 385,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:2"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 383,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:2",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 526,
              "linearizedBaseContracts": [
                526,
                1891
              ],
              "name": "Ownable",
              "nameLocation": "681:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "706:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 388,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:2",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 392,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 392,
                        "src": "858:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:2"
                  },
                  "src": "825:50:2"
                },
                {
                  "documentation": {
                    "id": 393,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:2",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 397,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 397,
                        "src": "994:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:2"
                  },
                  "src": "968:41:2"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 403,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 399,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "1042:29:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 401,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "1073:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:2"
                  },
                  "src": "1015:84:2"
                },
                {
                  "body": {
                    "id": 428,
                    "nodeType": "Block",
                    "src": "1259:153:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 409,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "1273:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 410,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 423,
                        "nodeType": "IfStatement",
                        "src": "1269:95:2",
                        "trueBody": {
                          "id": 422,
                          "nodeType": "Block",
                          "src": "1301:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 418,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 417,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 416,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 415,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "1322:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 421,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 425,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 406,
                              "src": "1392:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 424,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "1373:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 427,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 404,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:2",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 429,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 429,
                        "src": "1237:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:2"
                  },
                  "returnParameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:2"
                  },
                  "scope": 526,
                  "src": "1225:187:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 436,
                    "nodeType": "Block",
                    "src": "1521:41:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 432,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "1531:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 434,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:2"
                      },
                      {
                        "id": 435,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 430,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:2",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 437,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 431,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:2"
                  },
                  "src": "1500:62:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 445,
                    "nodeType": "Block",
                    "src": "1693:30:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 443,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "1710:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 442,
                        "id": 444,
                        "nodeType": "Return",
                        "src": "1703:13:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 438,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:2",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 446,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:2"
                  },
                  "returnParameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 441,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "1684:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 440,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:2"
                  },
                  "scope": 526,
                  "src": "1638:85:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 462,
                    "nodeType": "Block",
                    "src": "1841:117:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 450,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 446,
                              "src": "1855:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 452,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1873,
                              "src": "1866:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 461,
                        "nodeType": "IfStatement",
                        "src": "1851:101:2",
                        "trueBody": {
                          "id": 460,
                          "nodeType": "Block",
                          "src": "1880:72:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 456,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1873,
                                      "src": "1928:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 457,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 455,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 392,
                                  "src": "1901:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 459,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 447,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:2",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 463,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 448,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:2"
                  },
                  "returnParameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:2"
                  },
                  "scope": 526,
                  "src": "1796:162:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 476,
                    "nodeType": "Block",
                    "src": "2347:47:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 470,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 469,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "2357:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 475,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 464,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:2",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 477,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 467,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 466,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 437,
                        "src": "2337:9:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:2"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:2"
                  },
                  "returnParameters": {
                    "id": 468,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:2"
                  },
                  "scope": 526,
                  "src": "2293:101:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 504,
                    "nodeType": "Block",
                    "src": "2613:145:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 485,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "2627:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 486,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 499,
                        "nodeType": "IfStatement",
                        "src": "2623:91:2",
                        "trueBody": {
                          "id": 498,
                          "nodeType": "Block",
                          "src": "2651:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 494,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 493,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 492,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 491,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "2672:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 497,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 501,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "2742:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 500,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "2723:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 503,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 478,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:2",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 505,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 483,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 482,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 437,
                        "src": "2603:9:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:2"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 480,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 505,
                        "src": "2570:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 479,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:2"
                  },
                  "returnParameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:2"
                  },
                  "scope": 526,
                  "src": "2543:215:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 524,
                    "nodeType": "Block",
                    "src": "2975:124:2",
                    "statements": [
                      {
                        "assignments": [
                          512
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 512,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 524,
                            "src": "2985:16:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 511,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 514,
                        "initialValue": {
                          "id": 513,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "3004:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:2"
                      },
                      {
                        "expression": {
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 515,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "3020:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 516,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "3029:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 520,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 512,
                              "src": "3073:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 521,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 508,
                              "src": "3083:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 519,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 403,
                            "src": "3052:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 523,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 506,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:2",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 525,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 508,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 525,
                        "src": "2940:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:2"
                  },
                  "returnParameters": {
                    "id": 510,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:2"
                  },
                  "scope": 526,
                  "src": "2912:187:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 527,
              "src": "663:2438:2",
              "usedErrors": [
                392,
                397
              ],
              "usedEvents": [
                403
              ]
            }
          ],
          "src": "102:3000:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              663
            ],
            "IERC20Errors": [
              568
            ],
            "IERC721Errors": [
              616
            ]
          },
          "id": 664,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 528,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 529,
                "nodeType": "StructuredDocumentation",
                "src": "138:139:3",
                "text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
              },
              "fullyImplemented": true,
              "id": 568,
              "linearizedBaseContracts": [
                568
              ],
              "name": "IERC20Errors",
              "nameLocation": "288:12:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 530,
                    "nodeType": "StructuredDocumentation",
                    "src": "307:309:3",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 538,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "627:24:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "660:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "652:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "676:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "668:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "668:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "693:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "685:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "651:49:3"
                  },
                  "src": "621:80:3"
                },
                {
                  "documentation": {
                    "id": 539,
                    "nodeType": "StructuredDocumentation",
                    "src": "707:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 543,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "870:18:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "897:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 543,
                        "src": "889:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "889:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "888:16:3"
                  },
                  "src": "864:41:3"
                },
                {
                  "documentation": {
                    "id": 544,
                    "nodeType": "StructuredDocumentation",
                    "src": "911:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 548,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1081:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 547,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 546,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1110:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 548,
                        "src": "1102:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 545,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1102:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1101:18:3"
                  },
                  "src": "1075:45:3"
                },
                {
                  "documentation": {
                    "id": 549,
                    "nodeType": "StructuredDocumentation",
                    "src": "1126:345:3",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 557,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1482:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 551,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1517:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "1509:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1509:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1534:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "1526:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1526:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1553:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "1545:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1545:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1508:52:3"
                  },
                  "src": "1476:85:3"
                },
                {
                  "documentation": {
                    "id": 558,
                    "nodeType": "StructuredDocumentation",
                    "src": "1567:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 562,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1752:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 560,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1781:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 562,
                        "src": "1773:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:18:3"
                  },
                  "src": "1746:45:3"
                },
                {
                  "documentation": {
                    "id": 563,
                    "nodeType": "StructuredDocumentation",
                    "src": "1797:195:3",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 567,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2003:19:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 566,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 565,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2031:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "2023:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 564,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2023:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2022:17:3"
                  },
                  "src": "1997:43:3"
                }
              ],
              "scope": 664,
              "src": "278:1764:3",
              "usedErrors": [
                538,
                543,
                548,
                557,
                562,
                567
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 569,
                "nodeType": "StructuredDocumentation",
                "src": "2044:141:3",
                "text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
              },
              "fullyImplemented": true,
              "id": 616,
              "linearizedBaseContracts": [
                616
              ],
              "name": "IERC721Errors",
              "nameLocation": "2196:13:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 570,
                    "nodeType": "StructuredDocumentation",
                    "src": "2216:219:3",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 574,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2446:18:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 572,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2473:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 574,
                        "src": "2465:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 571,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2465:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2464:15:3"
                  },
                  "src": "2440:40:3"
                },
                {
                  "documentation": {
                    "id": 575,
                    "nodeType": "StructuredDocumentation",
                    "src": "2486:132:3",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 579,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2629:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2660:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 579,
                        "src": "2652:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2652:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2651:17:3"
                  },
                  "src": "2623:46:3"
                },
                {
                  "documentation": {
                    "id": 580,
                    "nodeType": "StructuredDocumentation",
                    "src": "2675:289:3",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 588,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2975:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3004:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "2996:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2996:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 584,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3020:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "3012:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3012:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 586,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3037:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 588,
                        "src": "3029:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3029:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2995:48:3"
                  },
                  "src": "2969:75:3"
                },
                {
                  "documentation": {
                    "id": 589,
                    "nodeType": "StructuredDocumentation",
                    "src": "3050:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 593,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3213:19:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 591,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3241:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "3233:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3233:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3232:16:3"
                  },
                  "src": "3207:42:3"
                },
                {
                  "documentation": {
                    "id": 594,
                    "nodeType": "StructuredDocumentation",
                    "src": "3255:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 598,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3425:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 596,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3455:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "3447:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3447:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3446:18:3"
                  },
                  "src": "3419:46:3"
                },
                {
                  "documentation": {
                    "id": 599,
                    "nodeType": "StructuredDocumentation",
                    "src": "3471:247:3",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 605,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3729:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 601,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3764:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "3756:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 600,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3756:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 603,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3782:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 605,
                        "src": "3774:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3755:35:3"
                  },
                  "src": "3723:68:3"
                },
                {
                  "documentation": {
                    "id": 606,
                    "nodeType": "StructuredDocumentation",
                    "src": "3797:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 610,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3982:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 608,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4012:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "4004:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4004:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4003:18:3"
                  },
                  "src": "3976:46:3"
                },
                {
                  "documentation": {
                    "id": 611,
                    "nodeType": "StructuredDocumentation",
                    "src": "4028:197:3",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 615,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4236:21:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 614,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 613,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4266:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 615,
                        "src": "4258:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 612,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4258:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4257:18:3"
                  },
                  "src": "4230:46:3"
                }
              ],
              "scope": 664,
              "src": "2186:2092:3",
              "usedErrors": [
                574,
                579,
                588,
                593,
                598,
                605,
                610,
                615
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 617,
                "nodeType": "StructuredDocumentation",
                "src": "4280:143:3",
                "text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
              },
              "fullyImplemented": true,
              "id": 663,
              "linearizedBaseContracts": [
                663
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4434:14:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 618,
                    "nodeType": "StructuredDocumentation",
                    "src": "4455:361:3",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 628,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4827:26:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 620,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4862:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "4854:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 619,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4854:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4878:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "4870:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4870:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4895:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "4887:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4887:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4911:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "4903:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 625,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4903:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4853:66:3"
                  },
                  "src": "4821:99:3"
                },
                {
                  "documentation": {
                    "id": 629,
                    "nodeType": "StructuredDocumentation",
                    "src": "4926:152:3",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 633,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5089:20:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 632,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 631,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5118:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 633,
                        "src": "5110:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 630,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5110:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5109:16:3"
                  },
                  "src": "5083:43:3"
                },
                {
                  "documentation": {
                    "id": 634,
                    "nodeType": "StructuredDocumentation",
                    "src": "5132:159:3",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 638,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5302:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 636,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5333:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "5325:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5325:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5324:18:3"
                  },
                  "src": "5296:47:3"
                },
                {
                  "documentation": {
                    "id": 639,
                    "nodeType": "StructuredDocumentation",
                    "src": "5349:256:3",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 645,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5616:28:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 644,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 641,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5653:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 645,
                        "src": "5645:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5645:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5671:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 645,
                        "src": "5663:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5663:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5644:33:3"
                  },
                  "src": "5610:68:3"
                },
                {
                  "documentation": {
                    "id": 646,
                    "nodeType": "StructuredDocumentation",
                    "src": "5684:174:3",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 650,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5869:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5900:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "5892:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5892:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5891:18:3"
                  },
                  "src": "5863:47:3"
                },
                {
                  "documentation": {
                    "id": 651,
                    "nodeType": "StructuredDocumentation",
                    "src": "5916:197:3",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 655,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6124:22:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 653,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6155:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "6147:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6147:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6146:18:3"
                  },
                  "src": "6118:47:3"
                },
                {
                  "documentation": {
                    "id": 656,
                    "nodeType": "StructuredDocumentation",
                    "src": "6171:280:3",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 662,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6462:25:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 661,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 658,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6496:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 662,
                        "src": "6488:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 657,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6488:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 660,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6515:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 662,
                        "src": "6507:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 659,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6507:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6487:41:3"
                  },
                  "src": "6456:73:3"
                }
              ],
              "scope": 664,
              "src": "4424:2107:3",
              "usedErrors": [
                628,
                633,
                638,
                645,
                650,
                655,
                662
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6420:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1891
            ],
            "ERC20": [
              1178
            ],
            "IERC20": [
              1256
            ],
            "IERC20Errors": [
              568
            ],
            "IERC20Metadata": [
              1282
            ]
          },
          "id": 1179,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 665,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 667,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1179,
              "sourceUnit": 1257,
              "src": "131:36:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 666,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
                    "src": "139:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 669,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1179,
              "sourceUnit": 1283,
              "src": "168:63:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 668,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1282,
                    "src": "176:14:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 671,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1179,
              "sourceUnit": 1892,
              "src": "232:48:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 670,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1891,
                    "src": "240:7:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 673,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1179,
              "sourceUnit": 664,
              "src": "281:65:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 672,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 568,
                    "src": "289:12:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 675,
                    "name": "Context",
                    "nameLocations": [
                      "1428:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1891,
                    "src": "1428:7:4"
                  },
                  "id": 676,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1428:7:4"
                },
                {
                  "baseName": {
                    "id": 677,
                    "name": "IERC20",
                    "nameLocations": [
                      "1437:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1256,
                    "src": "1437:6:4"
                  },
                  "id": 678,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1437:6:4"
                },
                {
                  "baseName": {
                    "id": 679,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1445:14:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1282,
                    "src": "1445:14:4"
                  },
                  "id": 680,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1445:14:4"
                },
                {
                  "baseName": {
                    "id": 681,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1461:12:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 568,
                    "src": "1461:12:4"
                  },
                  "id": 682,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1461:12:4"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 674,
                "nodeType": "StructuredDocumentation",
                "src": "348:1052:4",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
              },
              "fullyImplemented": true,
              "id": 1178,
              "linearizedBaseContracts": [
                1178,
                568,
                1282,
                1256,
                1891
              ],
              "name": "ERC20",
              "nameLocation": "1419:5:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1524:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "1480:53:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 685,
                    "keyName": "account",
                    "keyNameLocation": "1496:7:4",
                    "keyType": {
                      "id": 683,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1488:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1480:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 684,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1507:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1612:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "1540:83:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 691,
                    "keyName": "account",
                    "keyNameLocation": "1556:7:4",
                    "keyType": {
                      "id": 687,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1548:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1540:63:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 690,
                      "keyName": "spender",
                      "keyNameLocation": "1583:7:4",
                      "keyType": {
                        "id": 688,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1575:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1567:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 689,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1594:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1646:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "1630:28:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1630:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1680:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "1665:20:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1706:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "1691:22:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 714,
                    "nodeType": "Block",
                    "src": "1952:57:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 706,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "1962:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 707,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 701,
                            "src": "1970:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1962:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 709,
                        "nodeType": "ExpressionStatement",
                        "src": "1962:13:4"
                      },
                      {
                        "expression": {
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 710,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "1985:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 711,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "1995:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1985:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 713,
                        "nodeType": "ExpressionStatement",
                        "src": "1985:17:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 699,
                    "nodeType": "StructuredDocumentation",
                    "src": "1720:171:4",
                    "text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
                  },
                  "id": 715,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1922:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "1908:19:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1908:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1943:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "1929:21:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1929:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1907:44:4"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1952:0:4"
                  },
                  "scope": 1178,
                  "src": "1896:113:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1269
                  ],
                  "body": {
                    "id": 723,
                    "nodeType": "Block",
                    "src": "2134:29:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 721,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "2151:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 720,
                        "id": 722,
                        "nodeType": "Return",
                        "src": "2144:12:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 716,
                    "nodeType": "StructuredDocumentation",
                    "src": "2015:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 724,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "2083:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 717,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2087:2:4"
                  },
                  "returnParameters": {
                    "id": 720,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 719,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 724,
                        "src": "2119:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2119:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2118:15:4"
                  },
                  "scope": 1178,
                  "src": "2074:89:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1275
                  ],
                  "body": {
                    "id": 732,
                    "nodeType": "Block",
                    "src": "2338:31:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 730,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "2355:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 729,
                        "id": 731,
                        "nodeType": "Return",
                        "src": "2348:14:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 725,
                    "nodeType": "StructuredDocumentation",
                    "src": "2169:102:4",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 733,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "2285:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 726,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2291:2:4"
                  },
                  "returnParameters": {
                    "id": 729,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 728,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 733,
                        "src": "2323:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2323:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2322:15:4"
                  },
                  "scope": 1178,
                  "src": "2276:93:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1281
                  ],
                  "body": {
                    "id": 741,
                    "nodeType": "Block",
                    "src": "3058:26:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3075:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 738,
                        "id": 740,
                        "nodeType": "Return",
                        "src": "3068:9:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 734,
                    "nodeType": "StructuredDocumentation",
                    "src": "2375:622:4",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 742,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "3011:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 735,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3019:2:4"
                  },
                  "returnParameters": {
                    "id": 738,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 737,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 742,
                        "src": "3051:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3051:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3050:7:4"
                  },
                  "scope": 1178,
                  "src": "3002:82:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1205
                  ],
                  "body": {
                    "id": 750,
                    "nodeType": "Block",
                    "src": "3205:36:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 748,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 694,
                          "src": "3222:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 747,
                        "id": 749,
                        "nodeType": "Return",
                        "src": "3215:19:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 743,
                    "nodeType": "StructuredDocumentation",
                    "src": "3090:49:4",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 751,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "3153:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3164:2:4"
                  },
                  "returnParameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 751,
                        "src": "3196:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3196:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3195:9:4"
                  },
                  "scope": 1178,
                  "src": "3144:97:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1213
                  ],
                  "body": {
                    "id": 763,
                    "nodeType": "Block",
                    "src": "3373:42:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 759,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "3390:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 761,
                          "indexExpression": {
                            "id": 760,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 754,
                            "src": "3400:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3390:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 758,
                        "id": 762,
                        "nodeType": "Return",
                        "src": "3383:25:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 752,
                    "nodeType": "StructuredDocumentation",
                    "src": "3247:47:4",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 764,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "3308:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 755,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 754,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3326:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 764,
                        "src": "3318:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 753,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3318:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3317:17:4"
                  },
                  "returnParameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 764,
                        "src": "3364:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3364:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3363:9:4"
                  },
                  "scope": 1178,
                  "src": "3299:116:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1223
                  ],
                  "body": {
                    "id": 787,
                    "nodeType": "Block",
                    "src": "3685:103:4",
                    "statements": [
                      {
                        "assignments": [
                          775
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 775,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3703:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 787,
                            "src": "3695:13:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 774,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3695:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 778,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 776,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "3711:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3711:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3695:28:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 780,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 775,
                              "src": "3743:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 781,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "3750:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 782,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "3754:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 779,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "3733:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3733:27:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 784,
                        "nodeType": "ExpressionStatement",
                        "src": "3733:27:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3777:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 773,
                        "id": 786,
                        "nodeType": "Return",
                        "src": "3770:11:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 765,
                    "nodeType": "StructuredDocumentation",
                    "src": "3421:184:4",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 788,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3619:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3636:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 788,
                        "src": "3628:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3628:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 769,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3648:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 788,
                        "src": "3640:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3640:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3627:27:4"
                  },
                  "returnParameters": {
                    "id": 773,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 772,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 788,
                        "src": "3679:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 771,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3679:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3678:6:4"
                  },
                  "scope": 1178,
                  "src": "3610:178:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1233
                  ],
                  "body": {
                    "id": 804,
                    "nodeType": "Block",
                    "src": "3935:51:4",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 798,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 692,
                              "src": "3952:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 800,
                            "indexExpression": {
                              "id": 799,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "3964:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3952:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 802,
                          "indexExpression": {
                            "id": 801,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "3971:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3952:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 797,
                        "id": 803,
                        "nodeType": "Return",
                        "src": "3945:34:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 789,
                    "nodeType": "StructuredDocumentation",
                    "src": "3794:47:4",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 805,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3855:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 791,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3873:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 805,
                        "src": "3865:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 790,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3865:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 793,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3888:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 805,
                        "src": "3880:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 792,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3880:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3864:32:4"
                  },
                  "returnParameters": {
                    "id": 797,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 796,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 805,
                        "src": "3926:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 795,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3926:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3925:9:4"
                  },
                  "scope": 1178,
                  "src": "3846:140:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1243
                  ],
                  "body": {
                    "id": 828,
                    "nodeType": "Block",
                    "src": "4372:107:4",
                    "statements": [
                      {
                        "assignments": [
                          816
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 816,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4390:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 828,
                            "src": "4382:13:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 815,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4382:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 819,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 817,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "4398:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4398:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4382:28:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 821,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 816,
                              "src": "4429:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 822,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "4436:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 823,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "4445:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 820,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1069,
                              1129
                            ],
                            "referencedDeclaration": 1069,
                            "src": "4420:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4420:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 825,
                        "nodeType": "ExpressionStatement",
                        "src": "4420:31:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4468:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 814,
                        "id": 827,
                        "nodeType": "Return",
                        "src": "4461:11:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 806,
                    "nodeType": "StructuredDocumentation",
                    "src": "3992:296:4",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 829,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4302:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 811,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 808,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4318:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 829,
                        "src": "4310:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 807,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4310:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 810,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4335:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 829,
                        "src": "4327:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 809,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4327:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4309:32:4"
                  },
                  "returnParameters": {
                    "id": 814,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 813,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 829,
                        "src": "4366:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 812,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4366:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4365:6:4"
                  },
                  "scope": 1178,
                  "src": "4293:186:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1255
                  ],
                  "body": {
                    "id": 860,
                    "nodeType": "Block",
                    "src": "5132:151:4",
                    "statements": [
                      {
                        "assignments": [
                          842
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 842,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "5150:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 860,
                            "src": "5142:15:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 841,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5142:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 845,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 843,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "5160:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5160:12:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5142:30:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 847,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "5198:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 848,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "5204:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 849,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "5213:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 846,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "5182:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5182:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 851,
                        "nodeType": "ExpressionStatement",
                        "src": "5182:37:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 853,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "5239:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 854,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "5245:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 855,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 836,
                              "src": "5249:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 852,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "5229:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5229:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 857,
                        "nodeType": "ExpressionStatement",
                        "src": "5229:26:4"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5272:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 840,
                        "id": 859,
                        "nodeType": "Return",
                        "src": "5265:11:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 830,
                    "nodeType": "StructuredDocumentation",
                    "src": "4485:549:4",
                    "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 861,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "5048:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5069:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 861,
                        "src": "5061:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5061:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 834,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5083:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 861,
                        "src": "5075:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5075:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 836,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5095:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 861,
                        "src": "5087:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 835,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5087:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5060:41:4"
                  },
                  "returnParameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 861,
                        "src": "5126:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5126:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5125:6:4"
                  },
                  "scope": 1178,
                  "src": "5039:244:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 907,
                    "nodeType": "Block",
                    "src": "5725:231:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 871,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 864,
                            "src": "5739:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5755:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5747:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 872,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5747:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5747:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5739:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 885,
                        "nodeType": "IfStatement",
                        "src": "5735:86:4",
                        "trueBody": {
                          "id": 884,
                          "nodeType": "Block",
                          "src": "5759:62:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 880,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5807:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 879,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5799:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 878,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5799:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 881,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5799:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 877,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 543,
                                  "src": "5780:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5780:30:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 883,
                              "nodeType": "RevertStatement",
                              "src": "5773:37:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 886,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 866,
                            "src": "5834:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5848:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5840:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 887,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5840:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5840:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5834:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 900,
                        "nodeType": "IfStatement",
                        "src": "5830:86:4",
                        "trueBody": {
                          "id": 899,
                          "nodeType": "Block",
                          "src": "5852:64:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 895,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5902:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 894,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5894:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 893,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5894:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 896,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5894:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 892,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 548,
                                  "src": "5873:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 897,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5873:32:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 898,
                              "nodeType": "RevertStatement",
                              "src": "5866:39:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 902,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "5933:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 903,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 866,
                              "src": "5939:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 904,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 868,
                              "src": "5943:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 901,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "5925:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5925:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 906,
                        "nodeType": "ExpressionStatement",
                        "src": "5925:24:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 862,
                    "nodeType": "StructuredDocumentation",
                    "src": "5289:362:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 908,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5665:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 869,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 864,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5683:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "5675:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 863,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5675:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 866,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5697:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "5689:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 865,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5689:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 868,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5709:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 908,
                        "src": "5701:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 867,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5701:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5674:41:4"
                  },
                  "returnParameters": {
                    "id": 870,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5725:0:4"
                  },
                  "scope": 1178,
                  "src": "5656:300:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 984,
                    "nodeType": "Block",
                    "src": "6346:1032:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 918,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "6360:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6376:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6368:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 919,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6368:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6368:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6360:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 955,
                          "nodeType": "Block",
                          "src": "6534:362:4",
                          "statements": [
                            {
                              "assignments": [
                                930
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 930,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6556:11:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 955,
                                  "src": "6548:19:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 929,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6548:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 934,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 931,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 686,
                                  "src": "6570:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 933,
                                "indexExpression": {
                                  "id": 932,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 911,
                                  "src": "6580:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6570:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6548:37:4"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 935,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 930,
                                  "src": "6603:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 936,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 915,
                                  "src": "6617:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6603:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 945,
                              "nodeType": "IfStatement",
                              "src": "6599:115:4",
                              "trueBody": {
                                "id": 944,
                                "nodeType": "Block",
                                "src": "6624:90:4",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 939,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 911,
                                          "src": "6674:4:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 940,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 930,
                                          "src": "6680:11:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 941,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 915,
                                          "src": "6693:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 938,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "6649:24:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256) pure"
                                        }
                                      },
                                      "id": 942,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6649:50:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 943,
                                    "nodeType": "RevertStatement",
                                    "src": "6642:57:4"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 954,
                              "nodeType": "UncheckedBlock",
                              "src": "6727:159:4",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 952,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 946,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 686,
                                        "src": "6834:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 948,
                                      "indexExpression": {
                                        "id": 947,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 911,
                                        "src": "6844:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6834:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 951,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 949,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 930,
                                        "src": "6852:11:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 950,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 915,
                                        "src": "6866:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6852:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6834:37:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 953,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6834:37:4"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 956,
                        "nodeType": "IfStatement",
                        "src": "6356:540:4",
                        "trueBody": {
                          "id": 928,
                          "nodeType": "Block",
                          "src": "6380:148:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 924,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 694,
                                  "src": "6496:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 925,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 915,
                                  "src": "6512:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6496:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 927,
                              "nodeType": "ExpressionStatement",
                              "src": "6496:21:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 957,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 913,
                            "src": "6910:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6924:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6916:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 958,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6916:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6916:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6910:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 976,
                          "nodeType": "Block",
                          "src": "7125:206:4",
                          "statements": [
                            {
                              "id": 975,
                              "nodeType": "UncheckedBlock",
                              "src": "7139:182:4",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 973,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 969,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 686,
                                        "src": "7284:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 971,
                                      "indexExpression": {
                                        "id": 970,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 913,
                                        "src": "7294:2:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7284:13:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 972,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "7301:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7284:22:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 974,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7284:22:4"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 977,
                        "nodeType": "IfStatement",
                        "src": "6906:425:4",
                        "trueBody": {
                          "id": 968,
                          "nodeType": "Block",
                          "src": "6928:191:4",
                          "statements": [
                            {
                              "id": 967,
                              "nodeType": "UncheckedBlock",
                              "src": "6942:167:4",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 965,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 963,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 694,
                                      "src": "7073:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 964,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "7089:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7073:21:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 966,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7073:21:4"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 979,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 911,
                              "src": "7355:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 980,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 913,
                              "src": "7361:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 981,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "7365:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 978,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1190,
                            "src": "7346:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7346:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 983,
                        "nodeType": "EmitStatement",
                        "src": "7341:30:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 909,
                    "nodeType": "StructuredDocumentation",
                    "src": "5962:304:4",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 985,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "6280:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 916,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 911,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6296:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "6288:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 910,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6288:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 913,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6310:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "6302:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 912,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6302:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 915,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6322:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "6314:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 914,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6314:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6287:41:4"
                  },
                  "returnParameters": {
                    "id": 917,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6346:0:4"
                  },
                  "scope": 1178,
                  "src": "6271:1107:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1017,
                    "nodeType": "Block",
                    "src": "7777:152:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 993,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 988,
                            "src": "7791:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7810:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7802:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 994,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7802:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7802:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7791:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1007,
                        "nodeType": "IfStatement",
                        "src": "7787:91:4",
                        "trueBody": {
                          "id": 1006,
                          "nodeType": "Block",
                          "src": "7814:64:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1002,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7864:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1001,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7856:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1000,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7856:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1003,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7856:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 999,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 548,
                                  "src": "7835:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 1004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7835:32:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1005,
                              "nodeType": "RevertStatement",
                              "src": "7828:39:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1011,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7903:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7895:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1009,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7895:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7895:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1013,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 988,
                              "src": "7907:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1014,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "7916:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1008,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "7887:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7887:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1016,
                        "nodeType": "ExpressionStatement",
                        "src": "7887:35:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 986,
                    "nodeType": "StructuredDocumentation",
                    "src": "7384:332:4",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 1018,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7730:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7744:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1018,
                        "src": "7736:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7736:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 990,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7761:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1018,
                        "src": "7753:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7753:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7735:32:4"
                  },
                  "returnParameters": {
                    "id": 992,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7777:0:4"
                  },
                  "scope": 1178,
                  "src": "7721:208:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1050,
                    "nodeType": "Block",
                    "src": "8303:150:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1026,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1021,
                            "src": "8317:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8336:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8328:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1027,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8328:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8328:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8317:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1040,
                        "nodeType": "IfStatement",
                        "src": "8313:89:4",
                        "trueBody": {
                          "id": 1039,
                          "nodeType": "Block",
                          "src": "8340:62:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1035,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8388:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1034,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8380:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1033,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8380:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1036,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8380:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1032,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 543,
                                  "src": "8361:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 1037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8361:30:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1038,
                              "nodeType": "RevertStatement",
                              "src": "8354:37:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1042,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1021,
                              "src": "8419:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1045,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8436:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8428:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1043,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8428:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8428:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1047,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1023,
                              "src": "8440:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1041,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "8411:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8411:35:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1049,
                        "nodeType": "ExpressionStatement",
                        "src": "8411:35:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1019,
                    "nodeType": "StructuredDocumentation",
                    "src": "7935:307:4",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 1051,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "8256:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1024,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1021,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "8270:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "8262:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8262:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1023,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8287:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "8279:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8279:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8261:32:4"
                  },
                  "returnParameters": {
                    "id": 1025,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8303:0:4"
                  },
                  "scope": 1178,
                  "src": "8247:206:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1068,
                    "nodeType": "Block",
                    "src": "9063:54:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1062,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1054,
                              "src": "9082:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1063,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1056,
                              "src": "9089:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1064,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1058,
                              "src": "9098:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9105:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1061,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1069,
                              1129
                            ],
                            "referencedDeclaration": 1129,
                            "src": "9073:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9073:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1067,
                        "nodeType": "ExpressionStatement",
                        "src": "9073:37:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1052,
                    "nodeType": "StructuredDocumentation",
                    "src": "8459:525:4",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 1069,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8998:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1054,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9015:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1069,
                        "src": "9007:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1053,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9007:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1056,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9030:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1069,
                        "src": "9022:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1055,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9022:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1058,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9047:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1069,
                        "src": "9039:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9039:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9006:47:4"
                  },
                  "returnParameters": {
                    "id": 1060,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9063:0:4"
                  },
                  "scope": 1178,
                  "src": "8989:128:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1128,
                    "nodeType": "Block",
                    "src": "10047:334:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1081,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1072,
                            "src": "10061:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10078:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10070:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1082,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10070:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10070:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10061:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1095,
                        "nodeType": "IfStatement",
                        "src": "10057:89:4",
                        "trueBody": {
                          "id": 1094,
                          "nodeType": "Block",
                          "src": "10082:64:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1090,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10132:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1089,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10124:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1088,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10124:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1091,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10124:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1087,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 562,
                                  "src": "10103:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 1092,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10103:32:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1093,
                              "nodeType": "RevertStatement",
                              "src": "10096:39:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1096,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1074,
                            "src": "10159:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10178:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10170:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1097,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10170:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10170:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10159:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1110,
                        "nodeType": "IfStatement",
                        "src": "10155:90:4",
                        "trueBody": {
                          "id": 1109,
                          "nodeType": "Block",
                          "src": "10182:63:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1105,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10231:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1104,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10223:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1103,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10223:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1106,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10223:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1102,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 567,
                                  "src": "10203:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 1107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10203:31:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1108,
                              "nodeType": "RevertStatement",
                              "src": "10196:38:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1111,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 692,
                                "src": "10254:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1114,
                              "indexExpression": {
                                "id": 1112,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "10266:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10254:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1115,
                            "indexExpression": {
                              "id": 1113,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1074,
                              "src": "10273:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10254:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1116,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "10284:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10254:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1118,
                        "nodeType": "ExpressionStatement",
                        "src": "10254:35:4"
                      },
                      {
                        "condition": {
                          "id": 1119,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1078,
                          "src": "10303:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1127,
                        "nodeType": "IfStatement",
                        "src": "10299:76:4",
                        "trueBody": {
                          "id": 1126,
                          "nodeType": "Block",
                          "src": "10314:61:4",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1121,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "10342:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1122,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1074,
                                    "src": "10349:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1123,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1076,
                                    "src": "10358:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1120,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1199,
                                  "src": "10333:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10333:31:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1125,
                              "nodeType": "EmitStatement",
                              "src": "10328:36:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1070,
                    "nodeType": "StructuredDocumentation",
                    "src": "9123:821:4",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 1129,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9958:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1079,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1072,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9975:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "9967:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1071,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9967:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1074,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9990:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "9982:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1073,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9982:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10007:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "9999:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1075,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9999:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "10019:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "10014:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10014:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9966:63:4"
                  },
                  "returnParameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10047:0:4"
                  },
                  "scope": 1178,
                  "src": "9949:432:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1176,
                    "nodeType": "Block",
                    "src": "10752:388:4",
                    "statements": [
                      {
                        "assignments": [
                          1140
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1140,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10770:16:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 1176,
                            "src": "10762:24:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1139,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10762:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1145,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1142,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1132,
                              "src": "10799:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1143,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1134,
                              "src": "10806:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1141,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 805,
                            "src": "10789:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10789:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10762:52:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1146,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1140,
                            "src": "10828:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1149,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10853:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1148,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10853:7:4",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 1147,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10848:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10848:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10862:3:4",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10848:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10828:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1175,
                        "nodeType": "IfStatement",
                        "src": "10824:310:4",
                        "trueBody": {
                          "id": 1174,
                          "nodeType": "Block",
                          "src": "10867:267:4",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1153,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1140,
                                  "src": "10885:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1154,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1136,
                                  "src": "10904:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10885:24:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1163,
                              "nodeType": "IfStatement",
                              "src": "10881:130:4",
                              "trueBody": {
                                "id": 1162,
                                "nodeType": "Block",
                                "src": "10911:100:4",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1157,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1134,
                                          "src": "10963:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1158,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "10972:16:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1159,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1136,
                                          "src": "10990:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1156,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 557,
                                        "src": "10936:26:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256) pure"
                                        }
                                      },
                                      "id": 1160,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10936:60:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1161,
                                    "nodeType": "RevertStatement",
                                    "src": "10929:67:4"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1173,
                              "nodeType": "UncheckedBlock",
                              "src": "11024:100:4",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1165,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1132,
                                        "src": "11061:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1166,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1134,
                                        "src": "11068:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1169,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1167,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1140,
                                          "src": "11077:16:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1168,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1136,
                                          "src": "11096:5:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11077:24:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 1170,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11103:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1164,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        1069,
                                        1129
                                      ],
                                      "referencedDeclaration": 1129,
                                      "src": "11052:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 1171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11052:57:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1172,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11052:57:4"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1130,
                    "nodeType": "StructuredDocumentation",
                    "src": "10387:271:4",
                    "text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 1177,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10672:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1132,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10696:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1177,
                        "src": "10688:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10688:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1134,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10711:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1177,
                        "src": "10703:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10703:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1136,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10728:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1177,
                        "src": "10720:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1135,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10720:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10687:47:4"
                  },
                  "returnParameters": {
                    "id": 1138,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10752:0:4"
                  },
                  "scope": 1178,
                  "src": "10663:477:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1179,
              "src": "1401:9741:4",
              "usedErrors": [
                538,
                543,
                548,
                557,
                562,
                567
              ],
              "usedEvents": [
                1190,
                1199
              ]
            }
          ],
          "src": "105:11038:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1256
            ]
          },
          "id": 1257,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1180,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1181,
                "nodeType": "StructuredDocumentation",
                "src": "132:70:5",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 1256,
              "linearizedBaseContracts": [
                1256
              ],
              "name": "IERC20",
              "nameLocation": "213:6:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1182,
                    "nodeType": "StructuredDocumentation",
                    "src": "226:158:5",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1190,
                  "name": "Transfer",
                  "nameLocation": "395:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1184,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "420:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1190,
                        "src": "404:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1186,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1190,
                        "src": "426:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1188,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "454:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1190,
                        "src": "446:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:57:5"
                  },
                  "src": "389:72:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1191,
                    "nodeType": "StructuredDocumentation",
                    "src": "467:148:5",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1199,
                  "name": "Approval",
                  "nameLocation": "626:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1193,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "651:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "635:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1195,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "674:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "658:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1197,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "691:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "683:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1196,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:63:5"
                  },
                  "src": "620:78:5"
                },
                {
                  "documentation": {
                    "id": 1200,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:5",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1205,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:5"
                  },
                  "returnParameters": {
                    "id": 1204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1203,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1205,
                        "src": "820:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1202,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:5"
                  },
                  "scope": 1256,
                  "src": "774:55:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1206,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:71:5",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1213,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "920:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1208,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "938:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1213,
                        "src": "930:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:5"
                  },
                  "returnParameters": {
                    "id": 1212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1211,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1213,
                        "src": "970:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:9:5"
                  },
                  "scope": 1256,
                  "src": "911:68:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1214,
                    "nodeType": "StructuredDocumentation",
                    "src": "985:213:5",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1223,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1212:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1216,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1229:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1223,
                        "src": "1221:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1218,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1241:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1223,
                        "src": "1233:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:27:5"
                  },
                  "returnParameters": {
                    "id": 1222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1221,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1223,
                        "src": "1266:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1220,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:6:5"
                  },
                  "scope": 1256,
                  "src": "1203:69:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1224,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:264:5",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1233,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1556:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1226,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1574:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "1566:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1228,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1589:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "1581:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1227,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:32:5"
                  },
                  "returnParameters": {
                    "id": 1232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1231,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "1621:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1230,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1620:9:5"
                  },
                  "scope": 1256,
                  "src": "1547:83:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1234,
                    "nodeType": "StructuredDocumentation",
                    "src": "1636:667:5",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1243,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2317:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1236,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2333:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1243,
                        "src": "2325:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1238,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1243,
                        "src": "2342:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1237,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:32:5"
                  },
                  "returnParameters": {
                    "id": 1242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1241,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1243,
                        "src": "2375:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1240,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:5"
                  },
                  "scope": 1256,
                  "src": "2308:73:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1244,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:297:5",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1255,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2698:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1246,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2719:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "2711:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2711:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1248,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2733:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "2725:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1250,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2745:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "2737:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:41:5"
                  },
                  "returnParameters": {
                    "id": 1254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1253,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1255,
                        "src": "2770:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1252,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:6:5"
                  },
                  "scope": 1256,
                  "src": "2689:87:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1257,
              "src": "203:2575:5",
              "usedErrors": [],
              "usedEvents": [
                1190,
                1199
              ]
            }
          ],
          "src": "106:2673:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1256
            ],
            "IERC20Metadata": [
              1282
            ]
          },
          "id": 1283,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1258,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1260,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1283,
              "sourceUnit": 1257,
              "src": "151:37:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1259,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
                    "src": "159:6:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1262,
                    "name": "IERC20",
                    "nameLocations": [
                      "305:6:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1256,
                    "src": "305:6:6"
                  },
                  "id": 1263,
                  "nodeType": "InheritanceSpecifier",
                  "src": "305:6:6"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1261,
                "nodeType": "StructuredDocumentation",
                "src": "190:86:6",
                "text": " @dev Interface for the optional metadata functions from the ERC20 standard."
              },
              "fullyImplemented": false,
              "id": 1282,
              "linearizedBaseContracts": [
                1282,
                1256
              ],
              "name": "IERC20Metadata",
              "nameLocation": "287:14:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1264,
                    "nodeType": "StructuredDocumentation",
                    "src": "318:54:6",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1269,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "386:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1265,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "390:2:6"
                  },
                  "returnParameters": {
                    "id": 1268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1267,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1269,
                        "src": "416:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1266,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:15:6"
                  },
                  "scope": 1282,
                  "src": "377:54:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1270,
                    "nodeType": "StructuredDocumentation",
                    "src": "437:56:6",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1275,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "507:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1271,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "513:2:6"
                  },
                  "returnParameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1273,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1275,
                        "src": "539:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1272,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "539:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "538:15:6"
                  },
                  "scope": 1282,
                  "src": "498:56:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1276,
                    "nodeType": "StructuredDocumentation",
                    "src": "560:65:6",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1281,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "639:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1277,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "647:2:6"
                  },
                  "returnParameters": {
                    "id": 1280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1279,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1281,
                        "src": "673:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1278,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "673:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "672:7:6"
                  },
                  "scope": 1282,
                  "src": "630:50:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1283,
              "src": "277:405:6",
              "usedErrors": [],
              "usedEvents": [
                1190,
                1199
              ]
            }
          ],
          "src": "125:558:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
          "exportedSymbols": {
            "IERC20Permit": [
              1318
            ]
          },
          "id": 1319,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1284,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "123:24:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Permit",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1285,
                "nodeType": "StructuredDocumentation",
                "src": "149:1963:7",
                "text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
              },
              "fullyImplemented": false,
              "id": 1318,
              "linearizedBaseContracts": [
                1318
              ],
              "name": "IERC20Permit",
              "nameLocation": "2123:12:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1286,
                    "nodeType": "StructuredDocumentation",
                    "src": "2142:850:7",
                    "text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
                  },
                  "functionSelector": "d505accf",
                  "id": 1303,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "3006:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1301,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1288,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3030:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "3022:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1287,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3022:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1290,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3053:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "3045:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1289,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3045:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1292,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3078:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "3070:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1291,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3070:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1294,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "3101:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "3093:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1293,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3093:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1296,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "3125:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "3119:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1295,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3119:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1298,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3144:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "3136:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1297,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3136:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1300,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "3163:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "3155:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1299,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3155:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3012:158:7"
                  },
                  "returnParameters": {
                    "id": 1302,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3179:0:7"
                  },
                  "scope": 1318,
                  "src": "2997:183:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1304,
                    "nodeType": "StructuredDocumentation",
                    "src": "3186:294:7",
                    "text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
                  },
                  "functionSelector": "7ecebe00",
                  "id": 1311,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nameLocation": "3494:6:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1307,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1306,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3509:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1311,
                        "src": "3501:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1305,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3501:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3500:15:7"
                  },
                  "returnParameters": {
                    "id": 1310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1309,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1311,
                        "src": "3539:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3539:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3538:9:7"
                  },
                  "scope": 1318,
                  "src": "3485:63:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1312,
                    "nodeType": "StructuredDocumentation",
                    "src": "3554:128:7",
                    "text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
                  },
                  "functionSelector": "3644e515",
                  "id": 1317,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "3749:16:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1313,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3765:2:7"
                  },
                  "returnParameters": {
                    "id": 1316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1315,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "3791:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1314,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3791:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3790:9:7"
                  },
                  "scope": 1318,
                  "src": "3740:60:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1319,
              "src": "2113:1689:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "123:3680:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "exportedSymbols": {
            "Address": [
              1861
            ],
            "IERC20": [
              1256
            ],
            "IERC20Permit": [
              1318
            ],
            "SafeERC20": [
              1608
            ]
          },
          "id": 1609,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1320,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1322,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1609,
              "sourceUnit": 1257,
              "src": "141:37:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1321,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
                    "src": "149:6:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
              "file": "../extensions/IERC20Permit.sol",
              "id": 1324,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1609,
              "sourceUnit": 1319,
              "src": "179:60:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1323,
                    "name": "IERC20Permit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1318,
                    "src": "187:12:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "file": "../../../utils/Address.sol",
              "id": 1326,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1609,
              "sourceUnit": 1862,
              "src": "240:51:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1325,
                    "name": "Address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1861,
                    "src": "248:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeERC20",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1327,
                "nodeType": "StructuredDocumentation",
                "src": "293:457:8",
                "text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
              },
              "fullyImplemented": true,
              "id": 1608,
              "linearizedBaseContracts": [
                1608
              ],
              "name": "SafeERC20",
              "nameLocation": "759:9:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 1330,
                  "libraryName": {
                    "id": 1328,
                    "name": "Address",
                    "nameLocations": [
                      "781:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1861,
                    "src": "781:7:8"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "775:26:8",
                  "typeName": {
                    "id": 1329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "documentation": {
                    "id": 1331,
                    "nodeType": "StructuredDocumentation",
                    "src": "807:64:8",
                    "text": " @dev An operation with an ERC20 token failed."
                  },
                  "errorSelector": "5274afe7",
                  "id": 1335,
                  "name": "SafeERC20FailedOperation",
                  "nameLocation": "882:24:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1333,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "915:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1335,
                        "src": "907:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "907:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "906:15:8"
                  },
                  "src": "876:46:8"
                },
                {
                  "documentation": {
                    "id": 1336,
                    "nodeType": "StructuredDocumentation",
                    "src": "928:71:8",
                    "text": " @dev Indicates a failed `decreaseAllowance` request."
                  },
                  "errorSelector": "e570110f",
                  "id": 1344,
                  "name": "SafeERC20FailedDecreaseAllowance",
                  "nameLocation": "1010:32:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1338,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1051:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1344,
                        "src": "1043:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1337,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1043:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1340,
                        "mutability": "mutable",
                        "name": "currentAllowance",
                        "nameLocation": "1068:16:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1344,
                        "src": "1060:24:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1060:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1342,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "1094:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1344,
                        "src": "1086:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1341,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1086:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1042:70:8"
                  },
                  "src": "1004:109:8"
                },
                {
                  "body": {
                    "id": 1367,
                    "nodeType": "Block",
                    "src": "1375:88:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1356,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1348,
                              "src": "1405:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1359,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1348,
                                    "src": "1427:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1256",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1360,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1433:8:8",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1223,
                                  "src": "1427:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1361,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1350,
                                      "src": "1444:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1362,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1352,
                                      "src": "1448:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1363,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1443:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1357,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1412:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1416:10:8",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1412:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1412:43:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1355,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1558,
                            "src": "1385:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1385:71:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1366,
                        "nodeType": "ExpressionStatement",
                        "src": "1385:71:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1345,
                    "nodeType": "StructuredDocumentation",
                    "src": "1119:179:8",
                    "text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 1368,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "1312:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1353,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1332:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1368,
                        "src": "1325:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1256",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1347,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1346,
                            "name": "IERC20",
                            "nameLocations": [
                              "1325:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1256,
                            "src": "1325:6:8"
                          },
                          "referencedDeclaration": 1256,
                          "src": "1325:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1256",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1350,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1347:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1368,
                        "src": "1339:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1349,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1339:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1352,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1359:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1368,
                        "src": "1351:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1351,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1351:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1324:41:8"
                  },
                  "returnParameters": {
                    "id": 1354,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1375:0:8"
                  },
                  "scope": 1608,
                  "src": "1303:160:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1394,
                    "nodeType": "Block",
                    "src": "1792:98:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1382,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1372,
                              "src": "1822:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1385,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1372,
                                    "src": "1844:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1256",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1386,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1850:12:8",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1255,
                                  "src": "1844:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1387,
                                      "name": "from",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1374,
                                      "src": "1865:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1388,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1376,
                                      "src": "1871:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1389,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1378,
                                      "src": "1875:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1390,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "1864:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(address,address,uint256)"
                                  }
                                ],
                                "expression": {
                                  "id": 1383,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1829:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1833:10:8",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "1829:14:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1829:53:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1381,
                            "name": "_callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1558,
                            "src": "1802:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1802:81:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1393,
                        "nodeType": "ExpressionStatement",
                        "src": "1802:81:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1369,
                    "nodeType": "StructuredDocumentation",
                    "src": "1469:228:8",
                    "text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
                  },
                  "id": 1395,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1711:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1372,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1735:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "1728:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1256",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1371,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1370,
                            "name": "IERC20",
                            "nameLocations": [
                              "1728:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1256,
                            "src": "1728:6:8"
                          },
                          "referencedDeclaration": 1256,
                          "src": "1728:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1256",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1374,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1750:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "1742:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1373,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1742:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1376,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1764:2:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "1756:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1375,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1756:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1378,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1776:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "1768:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1768:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1727:55:8"
                  },
                  "returnParameters": {
                    "id": 1380,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1792:0:8"
                  },
                  "scope": 1608,
                  "src": "1702:188:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1425,
                    "nodeType": "Block",
                    "src": "2167:139:8",
                    "statements": [
                      {
                        "assignments": [
                          1407
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1407,
                            "mutability": "mutable",
                            "name": "oldAllowance",
                            "nameLocation": "2185:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1425,
                            "src": "2177:20:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1406,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2177:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1416,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1412,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2224:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1608",
                                    "typeString": "library SafeERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SafeERC20_$1608",
                                    "typeString": "library SafeERC20"
                                  }
                                ],
                                "id": 1411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2216:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1410,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2216:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2216:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1414,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1401,
                              "src": "2231:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1408,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "2200:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2206:9:8",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1233,
                            "src": "2200:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2200:39:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2177:62:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1418,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "2262:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 1419,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1401,
                              "src": "2269:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1420,
                                "name": "oldAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1407,
                                "src": "2278:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1421,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1403,
                                "src": "2293:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2278:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1417,
                            "name": "forceApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1516,
                            "src": "2249:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2249:50:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1424,
                        "nodeType": "ExpressionStatement",
                        "src": "2249:50:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1396,
                    "nodeType": "StructuredDocumentation",
                    "src": "1896:180:8",
                    "text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
                  },
                  "id": 1426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nameLocation": "2090:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1399,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2119:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "2112:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1256",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1398,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1397,
                            "name": "IERC20",
                            "nameLocations": [
                              "2112:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1256,
                            "src": "2112:6:8"
                          },
                          "referencedDeclaration": 1256,
                          "src": "2112:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1256",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1401,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2134:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "2126:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1400,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2126:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1403,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2151:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1426,
                        "src": "2143:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1402,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2143:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2111:46:8"
                  },
                  "returnParameters": {
                    "id": 1405,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2167:0:8"
                  },
                  "scope": 1608,
                  "src": "2081:225:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1468,
                    "nodeType": "Block",
                    "src": "2607:370:8",
                    "statements": [
                      {
                        "id": 1467,
                        "nodeType": "UncheckedBlock",
                        "src": "2617:354:8",
                        "statements": [
                          {
                            "assignments": [
                              1438
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 1438,
                                "mutability": "mutable",
                                "name": "currentAllowance",
                                "nameLocation": "2649:16:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 1467,
                                "src": "2641:24:8",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 1437,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2641:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 1447,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1443,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2692:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1608",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1608",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 1442,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2684:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1441,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2684:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2684:13:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1445,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1432,
                                  "src": "2699:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1439,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1430,
                                  "src": "2668:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1256",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2674:9:8",
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1233,
                                "src": "2668:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 1446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2668:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "2641:66:8"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1448,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1438,
                                "src": "2725:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1449,
                                "name": "requestedDecrease",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1434,
                                "src": "2744:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2725:36:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1458,
                            "nodeType": "IfStatement",
                            "src": "2721:160:8",
                            "trueBody": {
                              "id": 1457,
                              "nodeType": "Block",
                              "src": "2763:118:8",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 1452,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1432,
                                        "src": "2821:7:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1453,
                                        "name": "currentAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1438,
                                        "src": "2830:16:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 1454,
                                        "name": "requestedDecrease",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1434,
                                        "src": "2848:17:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1451,
                                      "name": "SafeERC20FailedDecreaseAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1344,
                                      "src": "2788:32:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,uint256,uint256) pure"
                                      }
                                    },
                                    "id": 1455,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2788:78:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1456,
                                  "nodeType": "RevertStatement",
                                  "src": "2781:85:8"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1460,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1430,
                                  "src": "2907:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1256",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 1461,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1432,
                                  "src": "2914:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1464,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1462,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1438,
                                    "src": "2923:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1463,
                                    "name": "requestedDecrease",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1434,
                                    "src": "2942:17:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2923:36:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1256",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1459,
                                "name": "forceApprove",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1516,
                                "src": "2894:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (contract IERC20,address,uint256)"
                                }
                              },
                              "id": 1465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2894:66:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1466,
                            "nodeType": "ExpressionStatement",
                            "src": "2894:66:8"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1427,
                    "nodeType": "StructuredDocumentation",
                    "src": "2312:192:8",
                    "text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
                  },
                  "id": 1469,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nameLocation": "2518:21:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1430,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2547:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1469,
                        "src": "2540:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1256",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1429,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1428,
                            "name": "IERC20",
                            "nameLocations": [
                              "2540:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1256,
                            "src": "2540:6:8"
                          },
                          "referencedDeclaration": 1256,
                          "src": "2540:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1256",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1432,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2562:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1469,
                        "src": "2554:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1431,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2554:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1434,
                        "mutability": "mutable",
                        "name": "requestedDecrease",
                        "nameLocation": "2579:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1469,
                        "src": "2571:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1433,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2571:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2539:58:8"
                  },
                  "returnParameters": {
                    "id": 1436,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2607:0:8"
                  },
                  "scope": 1608,
                  "src": "2509:468:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1515,
                    "nodeType": "Block",
                    "src": "3373:303:8",
                    "statements": [
                      {
                        "assignments": [
                          1481
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1481,
                            "mutability": "mutable",
                            "name": "approvalCall",
                            "nameLocation": "3396:12:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1515,
                            "src": "3383:25:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1480,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3383:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1490,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1484,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1473,
                                "src": "3426:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1256",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3432:7:8",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1243,
                              "src": "3426:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1486,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1475,
                                  "src": "3442:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1487,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1477,
                                  "src": "3451:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1488,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3441:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                "typeString": "tuple(address,uint256)"
                              }
                            ],
                            "expression": {
                              "id": 1482,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3411:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3415:10:8",
                            "memberName": "encodeCall",
                            "nodeType": "MemberAccess",
                            "src": "3411:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3411:47:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3383:75:8"
                      },
                      {
                        "condition": {
                          "id": 1495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3473:45:8",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 1492,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1473,
                                "src": "3498:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1256",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 1493,
                                "name": "approvalCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1481,
                                "src": "3505:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$1256",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1491,
                              "name": "_callOptionalReturnBool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1607,
                              "src": "3474:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (contract IERC20,bytes memory) returns (bool)"
                              }
                            },
                            "id": 1494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3474:44:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1514,
                        "nodeType": "IfStatement",
                        "src": "3469:201:8",
                        "trueBody": {
                          "id": 1513,
                          "nodeType": "Block",
                          "src": "3520:150:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1497,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1473,
                                    "src": "3554:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1256",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1500,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1473,
                                          "src": "3576:5:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1256",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 1501,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3582:7:8",
                                        "memberName": "approve",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1243,
                                        "src": "3576:13:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 1502,
                                            "name": "spender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1475,
                                            "src": "3592:7:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "hexValue": "30",
                                            "id": 1503,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3601:1:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          }
                                        ],
                                        "id": 1504,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "3591:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        },
                                        {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
                                          "typeString": "tuple(address,int_const 0)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1498,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "3561:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1499,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "3565:10:8",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "3561:14:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1505,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3561:43:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$1256",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1496,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1558,
                                  "src": "3534:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 1506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3534:71:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1507,
                              "nodeType": "ExpressionStatement",
                              "src": "3534:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1509,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1473,
                                    "src": "3639:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1256",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "id": 1510,
                                    "name": "approvalCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1481,
                                    "src": "3646:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$1256",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1508,
                                  "name": "_callOptionalReturn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1558,
                                  "src": "3619:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (contract IERC20,bytes memory)"
                                  }
                                },
                                "id": 1511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3619:40:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1512,
                              "nodeType": "ExpressionStatement",
                              "src": "3619:40:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1470,
                    "nodeType": "StructuredDocumentation",
                    "src": "2983:308:8",
                    "text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
                  },
                  "id": 1516,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forceApprove",
                  "nameLocation": "3305:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1478,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1473,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3325:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "3318:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1256",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1472,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1471,
                            "name": "IERC20",
                            "nameLocations": [
                              "3318:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1256,
                            "src": "3318:6:8"
                          },
                          "referencedDeclaration": 1256,
                          "src": "3318:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1256",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1475,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3340:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "3332:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1474,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3332:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1477,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3357:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "3349:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1476,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3349:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3317:46:8"
                  },
                  "returnParameters": {
                    "id": 1479,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3373:0:8"
                  },
                  "scope": 1608,
                  "src": "3296:380:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1557,
                    "nodeType": "Block",
                    "src": "4129:559:8",
                    "statements": [
                      {
                        "assignments": [
                          1526
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1526,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "4491:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1557,
                            "src": "4478:23:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1525,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4478:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1534,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1532,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1522,
                              "src": "4532:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1529,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1520,
                                  "src": "4512:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1256",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1256",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 1528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4504:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1527,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4504:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4504:14:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4519:12:8",
                            "memberName": "functionCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1682,
                            "src": "4504:27:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
                              "typeString": "function (address,bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 1533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4504:33:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4478:59:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1535,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1526,
                                "src": "4551:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4562:6:8",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4551:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4572:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4551:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 1546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4577:31:8",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 1541,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1526,
                                  "src": "4589:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1543,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4602:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bool_$",
                                        "typeString": "type(bool)"
                                      },
                                      "typeName": {
                                        "id": 1542,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4602:4:8",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "id": 1544,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4601:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                ],
                                "expression": {
                                  "id": 1539,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4578:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1540,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4582:6:8",
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "src": "4578:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4578:30:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4551:57:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1556,
                        "nodeType": "IfStatement",
                        "src": "4547:135:8",
                        "trueBody": {
                          "id": 1555,
                          "nodeType": "Block",
                          "src": "4610:72:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1551,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1520,
                                        "src": "4664:5:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1256",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$1256",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 1550,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4656:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1549,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4656:7:8",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1552,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4656:14:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1548,
                                  "name": "SafeERC20FailedOperation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1335,
                                  "src": "4631:24:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 1553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4631:40:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1554,
                              "nodeType": "RevertStatement",
                              "src": "4624:47:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1517,
                    "nodeType": "StructuredDocumentation",
                    "src": "3682:372:8",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
                  },
                  "id": 1558,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturn",
                  "nameLocation": "4068:19:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1523,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1520,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "4095:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1558,
                        "src": "4088:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1256",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1519,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1518,
                            "name": "IERC20",
                            "nameLocations": [
                              "4088:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1256,
                            "src": "4088:6:8"
                          },
                          "referencedDeclaration": 1256,
                          "src": "4088:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1256",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1522,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4115:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1558,
                        "src": "4102:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1521,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4102:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4087:33:8"
                  },
                  "returnParameters": {
                    "id": 1524,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4129:0:8"
                  },
                  "scope": 1608,
                  "src": "4059:629:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1606,
                    "nodeType": "Block",
                    "src": "5278:489:8",
                    "statements": [
                      {
                        "assignments": [
                          1570,
                          1572
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1570,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "5579:7:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1606,
                            "src": "5574:12:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1569,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5574:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1572,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "5601:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1606,
                            "src": "5588:23:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1571,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5588:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1580,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1578,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1564,
                              "src": "5635:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1575,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1562,
                                  "src": "5623:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1256",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1256",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 1574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5615:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1573,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5615:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5615:14:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5630:4:8",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "5615:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5615:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5573:67:8"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1581,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1570,
                              "src": "5657:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 1593,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1585,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1582,
                                        "name": "returndata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1572,
                                        "src": "5669:10:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 1583,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5680:6:8",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "5669:17:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1584,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5690:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "5669:22:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "id": 1588,
                                        "name": "returndata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1572,
                                        "src": "5706:10:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 1590,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "5719:4:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            },
                                            "typeName": {
                                              "id": 1589,
                                              "name": "bool",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "5719:4:8",
                                              "typeDescriptions": {}
                                            }
                                          }
                                        ],
                                        "id": 1591,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5718:6:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1586,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "5695:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1587,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "5699:6:8",
                                      "memberName": "decode",
                                      "nodeType": "MemberAccess",
                                      "src": "5695:10:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 1592,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5695:30:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5669:56:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 1594,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5668:58:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5657:69:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1598,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1562,
                                      "src": "5738:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1256",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$1256",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1597,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5730:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1596,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5730:7:8",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5730:14:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5745:4:8",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "5730:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5750:6:8",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "5730:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5759:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5730:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5657:103:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1568,
                        "id": 1605,
                        "nodeType": "Return",
                        "src": "5650:110:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1559,
                    "nodeType": "StructuredDocumentation",
                    "src": "4694:490:8",
                    "text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
                  },
                  "id": 1607,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callOptionalReturnBool",
                  "nameLocation": "5198:23:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1565,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1562,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "5229:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1607,
                        "src": "5222:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1256",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1561,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1560,
                            "name": "IERC20",
                            "nameLocations": [
                              "5222:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1256,
                            "src": "5222:6:8"
                          },
                          "referencedDeclaration": 1256,
                          "src": "5222:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1256",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1564,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5249:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1607,
                        "src": "5236:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1563,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5236:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5221:33:8"
                  },
                  "returnParameters": {
                    "id": 1568,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1567,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1607,
                        "src": "5272:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1566,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5272:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5271:6:8"
                  },
                  "scope": 1608,
                  "src": "5189:578:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1609,
              "src": "751:5018:8",
              "usedErrors": [
                1335,
                1344
              ],
              "usedEvents": []
            }
          ],
          "src": "115:5655:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
          "exportedSymbols": {
            "Address": [
              1861
            ]
          },
          "id": 1862,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1610,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Address",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1611,
                "nodeType": "StructuredDocumentation",
                "src": "127:67:9",
                "text": " @dev Collection of functions related to the address type"
              },
              "fullyImplemented": true,
              "id": 1861,
              "linearizedBaseContracts": [
                1861
              ],
              "name": "Address",
              "nameLocation": "203:7:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1612,
                    "nodeType": "StructuredDocumentation",
                    "src": "217:94:9",
                    "text": " @dev The ETH balance of the account is not enough to perform the operation."
                  },
                  "errorSelector": "cd786059",
                  "id": 1616,
                  "name": "AddressInsufficientBalance",
                  "nameLocation": "322:26:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1614,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "357:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1616,
                        "src": "349:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1613,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "349:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "348:17:9"
                  },
                  "src": "316:50:9"
                },
                {
                  "documentation": {
                    "id": 1617,
                    "nodeType": "StructuredDocumentation",
                    "src": "372:75:9",
                    "text": " @dev There's no code at `target` (it is not a contract)."
                  },
                  "errorSelector": "9996b315",
                  "id": 1621,
                  "name": "AddressEmptyCode",
                  "nameLocation": "458:16:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1620,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1619,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "483:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1621,
                        "src": "475:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "475:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "474:16:9"
                  },
                  "src": "452:39:9"
                },
                {
                  "documentation": {
                    "id": 1622,
                    "nodeType": "StructuredDocumentation",
                    "src": "497:89:9",
                    "text": " @dev A call to an address target failed. The target may have reverted."
                  },
                  "errorSelector": "1425ea42",
                  "id": 1624,
                  "name": "FailedInnerCall",
                  "nameLocation": "597:15:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1623,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "612:2:9"
                  },
                  "src": "591:24:9"
                },
                {
                  "body": {
                    "id": 1664,
                    "nodeType": "Block",
                    "src": "1602:260:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1634,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1624:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Address_$1861",
                                    "typeString": "library Address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Address_$1861",
                                    "typeString": "library Address"
                                  }
                                ],
                                "id": 1633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1616:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1632,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1616:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1616:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1630:7:9",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "1616:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1637,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1629,
                            "src": "1640:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1616:30:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1647,
                        "nodeType": "IfStatement",
                        "src": "1612:109:9",
                        "trueBody": {
                          "id": 1646,
                          "nodeType": "Block",
                          "src": "1648:73:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1642,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1704:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Address_$1861",
                                          "typeString": "library Address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Address_$1861",
                                          "typeString": "library Address"
                                        }
                                      ],
                                      "id": 1641,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1696:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1640,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1696:7:9",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1643,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1696:13:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1639,
                                  "name": "AddressInsufficientBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1616,
                                  "src": "1669:26:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 1644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1669:41:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1645,
                              "nodeType": "RevertStatement",
                              "src": "1662:48:9"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1649,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1649,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1737:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1664,
                            "src": "1732:12:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1648,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1732:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1656,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1780:2:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1650,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1627,
                                "src": "1750:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1760:4:9",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1750:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1652,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1629,
                                "src": "1772:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1750:29:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1750:33:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1731:52:9"
                      },
                      {
                        "condition": {
                          "id": 1658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1797:8:9",
                          "subExpression": {
                            "id": 1657,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1649,
                            "src": "1798:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1663,
                        "nodeType": "IfStatement",
                        "src": "1793:63:9",
                        "trueBody": {
                          "id": 1662,
                          "nodeType": "Block",
                          "src": "1807:49:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1659,
                                  "name": "FailedInnerCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1624,
                                  "src": "1828:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1828:17:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1661,
                              "nodeType": "RevertStatement",
                              "src": "1821:24:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1625,
                    "nodeType": "StructuredDocumentation",
                    "src": "621:905:9",
                    "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                  },
                  "id": 1665,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nameLocation": "1540:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1630,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1627,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1566:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "1550:25:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1550:15:9",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1629,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1585:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "1577:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1628,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1577:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1549:43:9"
                  },
                  "returnParameters": {
                    "id": 1631,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1602:0:9"
                  },
                  "scope": 1861,
                  "src": "1531:331:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1681,
                    "nodeType": "Block",
                    "src": "2794:62:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1676,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1668,
                              "src": "2833:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1677,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1670,
                              "src": "2841:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2847:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1675,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1728,
                            "src": "2811:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
                            }
                          },
                          "id": 1679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2811:38:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1674,
                        "id": 1680,
                        "nodeType": "Return",
                        "src": "2804:45:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1666,
                    "nodeType": "StructuredDocumentation",
                    "src": "1868:832:9",
                    "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
                  },
                  "id": 1682,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "2714:12:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1668,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "2735:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1682,
                        "src": "2727:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1670,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2756:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1682,
                        "src": "2743:17:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1669,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2743:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2726:35:9"
                  },
                  "returnParameters": {
                    "id": 1674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1673,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1682,
                        "src": "2780:12:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1672,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2780:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2779:14:9"
                  },
                  "scope": 1861,
                  "src": "2705:151:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1727,
                    "nodeType": "Block",
                    "src": "3293:279:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1696,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3315:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Address_$1861",
                                    "typeString": "library Address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Address_$1861",
                                    "typeString": "library Address"
                                  }
                                ],
                                "id": 1695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3307:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1694,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3307:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3307:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3321:7:9",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "3307:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1699,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1689,
                            "src": "3331:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3307:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1709,
                        "nodeType": "IfStatement",
                        "src": "3303:108:9",
                        "trueBody": {
                          "id": 1708,
                          "nodeType": "Block",
                          "src": "3338:73:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1704,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3394:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Address_$1861",
                                          "typeString": "library Address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Address_$1861",
                                          "typeString": "library Address"
                                        }
                                      ],
                                      "id": 1703,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3386:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1702,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3386:7:9",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1705,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3386:13:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1701,
                                  "name": "AddressInsufficientBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1616,
                                  "src": "3359:26:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 1706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3359:41:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1707,
                              "nodeType": "RevertStatement",
                              "src": "3352:48:9"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1711,
                          1713
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1711,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3426:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1727,
                            "src": "3421:12:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1710,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3421:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1713,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "3448:10:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1727,
                            "src": "3435:23:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1712,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3435:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1720,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1718,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1687,
                              "src": "3488:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 1714,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1685,
                                "src": "3462:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3469:4:9",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "3462:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1716,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1689,
                                "src": "3481:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3462:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3462:31:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3420:73:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1722,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1685,
                              "src": "3537:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1723,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1711,
                              "src": "3545:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1724,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1713,
                              "src": "3554:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1721,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1820,
                            "src": "3510:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                            }
                          },
                          "id": 1725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3510:55:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1693,
                        "id": 1726,
                        "nodeType": "Return",
                        "src": "3503:62:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1683,
                    "nodeType": "StructuredDocumentation",
                    "src": "2862:313:9",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
                  },
                  "id": 1728,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "3189:21:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1690,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1685,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3219:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1728,
                        "src": "3211:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1684,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3211:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1687,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3240:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1728,
                        "src": "3227:17:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1686,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3227:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1689,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3254:5:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1728,
                        "src": "3246:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1688,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3246:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3210:50:9"
                  },
                  "returnParameters": {
                    "id": 1693,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1692,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1728,
                        "src": "3279:12:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1691,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3279:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3278:14:9"
                  },
                  "scope": 1861,
                  "src": "3180:392:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1753,
                    "nodeType": "Block",
                    "src": "3811:154:9",
                    "statements": [
                      {
                        "assignments": [
                          1739,
                          1741
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1739,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3827:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1753,
                            "src": "3822:12:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1738,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3822:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1741,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "3849:10:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1753,
                            "src": "3836:23:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1740,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3836:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1746,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1744,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1733,
                              "src": "3881:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1742,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1731,
                              "src": "3863:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3870:10:9",
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "3863:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 1745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3863:23:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3821:65:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1748,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1731,
                              "src": "3930:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1749,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1739,
                              "src": "3938:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1750,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1741,
                              "src": "3947:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1747,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1820,
                            "src": "3903:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                            }
                          },
                          "id": 1751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3903:55:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1737,
                        "id": 1752,
                        "nodeType": "Return",
                        "src": "3896:62:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1729,
                    "nodeType": "StructuredDocumentation",
                    "src": "3578:128:9",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
                  },
                  "id": 1754,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nameLocation": "3720:18:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1731,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3747:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1754,
                        "src": "3739:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3739:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1733,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3768:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1754,
                        "src": "3755:17:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1732,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3755:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3738:35:9"
                  },
                  "returnParameters": {
                    "id": 1737,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1736,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1754,
                        "src": "3797:12:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1735,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3797:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3796:14:9"
                  },
                  "scope": 1861,
                  "src": "3711:254:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1779,
                    "nodeType": "Block",
                    "src": "4203:156:9",
                    "statements": [
                      {
                        "assignments": [
                          1765,
                          1767
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1765,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4219:7:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1779,
                            "src": "4214:12:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1764,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4214:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1767,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "4241:10:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1779,
                            "src": "4228:23:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1766,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4228:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1772,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1770,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1759,
                              "src": "4275:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1768,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1757,
                              "src": "4255:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4262:12:9",
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "4255:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4255:25:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4213:67:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1774,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1757,
                              "src": "4324:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1775,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1765,
                              "src": "4332:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1776,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1767,
                              "src": "4341:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1773,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1820,
                            "src": "4297:26:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                            }
                          },
                          "id": 1777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4297:55:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1763,
                        "id": 1778,
                        "nodeType": "Return",
                        "src": "4290:62:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1755,
                    "nodeType": "StructuredDocumentation",
                    "src": "3971:130:9",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
                  },
                  "id": 1780,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nameLocation": "4115:20:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1760,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1757,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4144:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1780,
                        "src": "4136:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4136:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1759,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4165:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1780,
                        "src": "4152:17:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1758,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4152:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4135:35:9"
                  },
                  "returnParameters": {
                    "id": 1763,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1762,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1780,
                        "src": "4189:12:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1761,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4189:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4188:14:9"
                  },
                  "scope": 1861,
                  "src": "4106:253:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1819,
                    "nodeType": "Block",
                    "src": "4783:424:9",
                    "statements": [
                      {
                        "condition": {
                          "id": 1793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4797:8:9",
                          "subExpression": {
                            "id": 1792,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "4798:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1817,
                          "nodeType": "Block",
                          "src": "4857:344:9",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1799,
                                      "name": "returndata",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1787,
                                      "src": "5045:10:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 1800,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5056:6:9",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "5045:17:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5066:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5045:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 1803,
                                        "name": "target",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1783,
                                        "src": "5071:6:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 1804,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5078:4:9",
                                      "memberName": "code",
                                      "nodeType": "MemberAccess",
                                      "src": "5071:11:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 1805,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5083:6:9",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "5071:18:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 1806,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5093:1:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5071:23:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5045:49:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1814,
                              "nodeType": "IfStatement",
                              "src": "5041:119:9",
                              "trueBody": {
                                "id": 1813,
                                "nodeType": "Block",
                                "src": "5096:64:9",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1810,
                                          "name": "target",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1783,
                                          "src": "5138:6:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1809,
                                        "name": "AddressEmptyCode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1621,
                                        "src": "5121:16:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                          "typeString": "function (address) pure"
                                        }
                                      },
                                      "id": 1811,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5121:24:9",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1812,
                                    "nodeType": "RevertStatement",
                                    "src": "5114:31:9"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 1815,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1787,
                                "src": "5180:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 1791,
                              "id": 1816,
                              "nodeType": "Return",
                              "src": "5173:17:9"
                            }
                          ]
                        },
                        "id": 1818,
                        "nodeType": "IfStatement",
                        "src": "4793:408:9",
                        "trueBody": {
                          "id": 1798,
                          "nodeType": "Block",
                          "src": "4807:44:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1795,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1787,
                                    "src": "4829:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1794,
                                  "name": "_revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1860,
                                  "src": "4821:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) pure"
                                  }
                                },
                                "id": 1796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4821:19:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1797,
                              "nodeType": "ExpressionStatement",
                              "src": "4821:19:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1781,
                    "nodeType": "StructuredDocumentation",
                    "src": "4365:255:9",
                    "text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
                  },
                  "id": 1820,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResultFromTarget",
                  "nameLocation": "4634:26:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1788,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1783,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4678:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1820,
                        "src": "4670:14:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1782,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4670:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1785,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "4699:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1820,
                        "src": "4694:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1784,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4694:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1787,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "4729:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1820,
                        "src": "4716:23:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1786,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4716:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4660:85:9"
                  },
                  "returnParameters": {
                    "id": 1791,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1790,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1820,
                        "src": "4769:12:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1789,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4769:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4768:14:9"
                  },
                  "scope": 1861,
                  "src": "4625:582:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1841,
                    "nodeType": "Block",
                    "src": "5509:122:9",
                    "statements": [
                      {
                        "condition": {
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5523:8:9",
                          "subExpression": {
                            "id": 1830,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1823,
                            "src": "5524:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1839,
                          "nodeType": "Block",
                          "src": "5583:42:9",
                          "statements": [
                            {
                              "expression": {
                                "id": 1837,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1825,
                                "src": "5604:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 1829,
                              "id": 1838,
                              "nodeType": "Return",
                              "src": "5597:17:9"
                            }
                          ]
                        },
                        "id": 1840,
                        "nodeType": "IfStatement",
                        "src": "5519:106:9",
                        "trueBody": {
                          "id": 1836,
                          "nodeType": "Block",
                          "src": "5533:44:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1833,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1825,
                                    "src": "5555:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1832,
                                  "name": "_revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1860,
                                  "src": "5547:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) pure"
                                  }
                                },
                                "id": 1834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5547:19:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1835,
                              "nodeType": "ExpressionStatement",
                              "src": "5547:19:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1821,
                    "nodeType": "StructuredDocumentation",
                    "src": "5213:189:9",
                    "text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
                  },
                  "id": 1842,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResult",
                  "nameLocation": "5416:16:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1823,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "5438:7:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "5433:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1822,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5433:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1825,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "5460:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "5447:23:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1824,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5447:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5432:39:9"
                  },
                  "returnParameters": {
                    "id": 1829,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1828,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "5495:12:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1827,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5495:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5494:14:9"
                  },
                  "scope": 1861,
                  "src": "5407:224:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1859,
                    "nodeType": "Block",
                    "src": "5798:461:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1848,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1845,
                              "src": "5874:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5885:6:9",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5874:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5894:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5874:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1857,
                          "nodeType": "Block",
                          "src": "6204:49:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1854,
                                  "name": "FailedInnerCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1624,
                                  "src": "6225:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6225:17:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1856,
                              "nodeType": "RevertStatement",
                              "src": "6218:24:9"
                            }
                          ]
                        },
                        "id": 1858,
                        "nodeType": "IfStatement",
                        "src": "5870:383:9",
                        "trueBody": {
                          "id": 1853,
                          "nodeType": "Block",
                          "src": "5897:301:9",
                          "statements": [
                            {
                              "AST": {
                                "nativeSrc": "6055:133:9",
                                "nodeType": "YulBlock",
                                "src": "6055:133:9",
                                "statements": [
                                  {
                                    "nativeSrc": "6073:40:9",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6073:40:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "returndata",
                                          "nativeSrc": "6102:10:9",
                                          "nodeType": "YulIdentifier",
                                          "src": "6102:10:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "6096:5:9",
                                        "nodeType": "YulIdentifier",
                                        "src": "6096:5:9"
                                      },
                                      "nativeSrc": "6096:17:9",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6096:17:9"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nativeSrc": "6077:15:9",
                                        "nodeType": "YulTypedName",
                                        "src": "6077:15:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6141:2:9",
                                              "nodeType": "YulLiteral",
                                              "src": "6141:2:9",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "returndata",
                                              "nativeSrc": "6145:10:9",
                                              "nodeType": "YulIdentifier",
                                              "src": "6145:10:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "6137:3:9",
                                            "nodeType": "YulIdentifier",
                                            "src": "6137:3:9"
                                          },
                                          "nativeSrc": "6137:19:9",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6137:19:9"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nativeSrc": "6158:15:9",
                                          "nodeType": "YulIdentifier",
                                          "src": "6158:15:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "6130:6:9",
                                        "nodeType": "YulIdentifier",
                                        "src": "6130:6:9"
                                      },
                                      "nativeSrc": "6130:44:9",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6130:44:9"
                                    },
                                    "nativeSrc": "6130:44:9",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6130:44:9"
                                  }
                                ]
                              },
                              "documentation": "@solidity memory-safe-assembly",
                              "evmVersion": "paris",
                              "externalReferences": [
                                {
                                  "declaration": 1845,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "6102:10:9",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1845,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "6145:10:9",
                                  "valueSize": 1
                                }
                              ],
                              "id": 1852,
                              "nodeType": "InlineAssembly",
                              "src": "6046:142:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1843,
                    "nodeType": "StructuredDocumentation",
                    "src": "5637:101:9",
                    "text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
                  },
                  "id": 1860,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revert",
                  "nameLocation": "5752:7:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1846,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1845,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "5773:10:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1860,
                        "src": "5760:23:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1844,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5760:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5759:25:9"
                  },
                  "returnParameters": {
                    "id": 1847,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5798:0:9"
                  },
                  "scope": 1861,
                  "src": "5743:516:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1862,
              "src": "195:6066:9",
              "usedErrors": [
                1616,
                1621,
                1624
              ],
              "usedEvents": []
            }
          ],
          "src": "101:6161:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1891
            ]
          },
          "id": 1892,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1863,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:10"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1864,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:10",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1891,
              "linearizedBaseContracts": [
                1891
              ],
              "name": "Context",
              "nameLocation": "642:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1872,
                    "nodeType": "Block",
                    "src": "718:34:10",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1869,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1868,
                        "id": 1871,
                        "nodeType": "Return",
                        "src": "728:17:10"
                      }
                    ]
                  },
                  "id": 1873,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1865,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:10"
                  },
                  "returnParameters": {
                    "id": 1868,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1867,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1873,
                        "src": "709:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:10"
                  },
                  "scope": 1891,
                  "src": "656:96:10",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1881,
                    "nodeType": "Block",
                    "src": "825:32:10",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1878,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:10",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1877,
                        "id": 1880,
                        "nodeType": "Return",
                        "src": "835:15:10"
                      }
                    ]
                  },
                  "id": 1882,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1874,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:10"
                  },
                  "returnParameters": {
                    "id": 1877,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1876,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1882,
                        "src": "809:14:10",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1875,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:10"
                  },
                  "scope": 1891,
                  "src": "758:99:10",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1889,
                    "nodeType": "Block",
                    "src": "935:25:10",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1886,
                        "id": 1888,
                        "nodeType": "Return",
                        "src": "945:8:10"
                      }
                    ]
                  },
                  "id": 1890,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1883,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:10"
                  },
                  "returnParameters": {
                    "id": 1886,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1885,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1890,
                        "src": "926:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1884,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:10"
                  },
                  "scope": 1891,
                  "src": "863:97:10",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1892,
              "src": "624:338:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:10"
        },
        "id": 10
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              1891
            ],
            "Pausable": [
              2008
            ]
          },
          "id": 2009,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1893,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1895,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2009,
              "sourceUnit": 1892,
              "src": "128:45:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1894,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1891,
                    "src": "136:7:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1897,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1891,
                    "src": "645:7:11"
                  },
                  "id": 1898,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:11"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1896,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:11",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 2008,
              "linearizedBaseContracts": [
                2008,
                1891
              ],
              "name": "Pausable",
              "nameLocation": "633:8:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1900,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 2008,
                  "src": "659:20:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1899,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1901,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:11",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 1905,
                  "name": "Paused",
                  "nameLocation": "770:6:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1904,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1903,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1905,
                        "src": "777:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1902,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:11"
                  },
                  "src": "764:30:11"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1906,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:11",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 1910,
                  "name": "Unpaused",
                  "nameLocation": "881:8:11",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1909,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1908,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1910,
                        "src": "890:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:11"
                  },
                  "src": "875:32:11"
                },
                {
                  "documentation": {
                    "id": 1911,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:11",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 1913,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:11"
                  },
                  "src": "994:22:11"
                },
                {
                  "documentation": {
                    "id": 1914,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:11",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 1916,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1915,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:11"
                  },
                  "src": "1107:22:11"
                },
                {
                  "body": {
                    "id": 1924,
                    "nodeType": "Block",
                    "src": "1221:32:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1920,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1900,
                            "src": "1231:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1241:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1231:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1923,
                        "nodeType": "ExpressionStatement",
                        "src": "1231:15:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1917,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:67:11",
                    "text": " @dev Initializes the contract in unpaused state."
                  },
                  "id": 1925,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1918,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1218:2:11"
                  },
                  "returnParameters": {
                    "id": 1919,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1221:0:11"
                  },
                  "scope": 2008,
                  "src": "1207:46:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1932,
                    "nodeType": "Block",
                    "src": "1464:47:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1928,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1962,
                            "src": "1474:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1474:19:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1930,
                        "nodeType": "ExpressionStatement",
                        "src": "1474:19:11"
                      },
                      {
                        "id": 1931,
                        "nodeType": "PlaceholderStatement",
                        "src": "1503:1:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1926,
                    "nodeType": "StructuredDocumentation",
                    "src": "1259:175:11",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1933,
                  "name": "whenNotPaused",
                  "nameLocation": "1448:13:11",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1927,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1461:2:11"
                  },
                  "src": "1439:72:11",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1940,
                    "nodeType": "Block",
                    "src": "1711:44:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1936,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1975,
                            "src": "1721:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1721:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1938,
                        "nodeType": "ExpressionStatement",
                        "src": "1721:16:11"
                      },
                      {
                        "id": 1939,
                        "nodeType": "PlaceholderStatement",
                        "src": "1747:1:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1934,
                    "nodeType": "StructuredDocumentation",
                    "src": "1517:167:11",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1941,
                  "name": "whenPaused",
                  "nameLocation": "1698:10:11",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1935,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1708:2:11"
                  },
                  "src": "1689:66:11",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1949,
                    "nodeType": "Block",
                    "src": "1903:31:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1947,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1900,
                          "src": "1920:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1946,
                        "id": 1948,
                        "nodeType": "Return",
                        "src": "1913:14:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1942,
                    "nodeType": "StructuredDocumentation",
                    "src": "1761:84:11",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 1950,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1859:6:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1943,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1865:2:11"
                  },
                  "returnParameters": {
                    "id": 1946,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1945,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1950,
                        "src": "1897:4:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1944,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1897:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1896:6:11"
                  },
                  "scope": 2008,
                  "src": "1850:84:11",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1961,
                    "nodeType": "Block",
                    "src": "2053:77:11",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1954,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1950,
                            "src": "2067:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2067:8:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1960,
                        "nodeType": "IfStatement",
                        "src": "2063:61:11",
                        "trueBody": {
                          "id": 1959,
                          "nodeType": "Block",
                          "src": "2077:47:11",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1956,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1913,
                                  "src": "2098:13:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2098:15:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1958,
                              "nodeType": "RevertStatement",
                              "src": "2091:22:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1951,
                    "nodeType": "StructuredDocumentation",
                    "src": "1940:57:11",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 1962,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "2011:17:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1952,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:11"
                  },
                  "returnParameters": {
                    "id": 1953,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2053:0:11"
                  },
                  "scope": 2008,
                  "src": "2002:128:11",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1974,
                    "nodeType": "Block",
                    "src": "2250:78:11",
                    "statements": [
                      {
                        "condition": {
                          "id": 1968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2264:9:11",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1966,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1950,
                              "src": "2265:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2265:8:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1973,
                        "nodeType": "IfStatement",
                        "src": "2260:62:11",
                        "trueBody": {
                          "id": 1972,
                          "nodeType": "Block",
                          "src": "2275:47:11",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1969,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1916,
                                  "src": "2296:13:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 1970,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2296:15:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1971,
                              "nodeType": "RevertStatement",
                              "src": "2289:22:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1963,
                    "nodeType": "StructuredDocumentation",
                    "src": "2136:61:11",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 1975,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2211:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1964,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2225:2:11"
                  },
                  "returnParameters": {
                    "id": 1965,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2250:0:11"
                  },
                  "scope": 2008,
                  "src": "2202:126:11",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1990,
                    "nodeType": "Block",
                    "src": "2512:66:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1981,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1900,
                            "src": "2522:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2532:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2522:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1984,
                        "nodeType": "ExpressionStatement",
                        "src": "2522:14:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1986,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "2558:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2558:12:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1985,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1905,
                            "src": "2551:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2551:20:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1989,
                        "nodeType": "EmitStatement",
                        "src": "2546:25:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1976,
                    "nodeType": "StructuredDocumentation",
                    "src": "2334:124:11",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1991,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1979,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1978,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2498:13:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1933,
                        "src": "2498:13:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2498:13:11"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2472:6:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1977,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2478:2:11"
                  },
                  "returnParameters": {
                    "id": 1980,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2512:0:11"
                  },
                  "scope": 2008,
                  "src": "2463:115:11",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2006,
                    "nodeType": "Block",
                    "src": "2758:69:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1997,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1900,
                            "src": "2768:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2778:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2768:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2000,
                        "nodeType": "ExpressionStatement",
                        "src": "2768:15:11"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2002,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "2807:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2807:12:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2001,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1910,
                            "src": "2798:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2798:22:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2005,
                        "nodeType": "EmitStatement",
                        "src": "2793:27:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1992,
                    "nodeType": "StructuredDocumentation",
                    "src": "2584:121:11",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 2007,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1995,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1994,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2747:10:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1941,
                        "src": "2747:10:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2747:10:11"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2719:8:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1993,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2727:2:11"
                  },
                  "returnParameters": {
                    "id": 1996,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2758:0:11"
                  },
                  "scope": 2008,
                  "src": "2710:117:11",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 2009,
              "src": "615:2214:11",
              "usedErrors": [
                1913,
                1916
              ],
              "usedEvents": [
                1905,
                1910
              ]
            }
          ],
          "src": "102:2728:11"
        },
        "id": 11
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
          "exportedSymbols": {
            "ERC165": [
              2032
            ],
            "IERC165": [
              2044
            ]
          },
          "id": 2033,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2010,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:12"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 2012,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2033,
              "sourceUnit": 2045,
              "src": "140:38:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2011,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2044,
                    "src": "148:7:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2014,
                    "name": "IERC165",
                    "nameLocations": [
                      "687:7:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2044,
                    "src": "687:7:12"
                  },
                  "id": 2015,
                  "nodeType": "InheritanceSpecifier",
                  "src": "687:7:12"
                }
              ],
              "canonicalName": "ERC165",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2013,
                "nodeType": "StructuredDocumentation",
                "src": "180:478:12",
                "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
              },
              "fullyImplemented": true,
              "id": 2032,
              "linearizedBaseContracts": [
                2032,
                2044
              ],
              "name": "ERC165",
              "nameLocation": "677:6:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    2043
                  ],
                  "body": {
                    "id": 2030,
                    "nodeType": "Block",
                    "src": "844:64:12",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2023,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2018,
                            "src": "861:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2025,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2044,
                                  "src": "881:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$2044_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$2044_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 2024,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "876:4:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "876:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2044",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 2027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "890:11:12",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "876:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "861:40:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2022,
                        "id": 2029,
                        "nodeType": "Return",
                        "src": "854:47:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2016,
                    "nodeType": "StructuredDocumentation",
                    "src": "701:56:12",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 2031,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "771:17:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2019,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2018,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "796:11:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2031,
                        "src": "789:18:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 2017,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "789:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "788:20:12"
                  },
                  "returnParameters": {
                    "id": 2022,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2021,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2031,
                        "src": "838:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2020,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "838:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "837:6:12"
                  },
                  "scope": 2032,
                  "src": "762:146:12",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 2033,
              "src": "659:251:12",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "114:797:12"
        },
        "id": 12
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              2044
            ]
          },
          "id": 2045,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2034,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2035,
                "nodeType": "StructuredDocumentation",
                "src": "141:279:13",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 2044,
              "linearizedBaseContracts": [
                2044
              ],
              "name": "IERC165",
              "nameLocation": "431:7:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2036,
                    "nodeType": "StructuredDocumentation",
                    "src": "445:340:13",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 2043,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "799:17:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2039,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2038,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "824:11:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2043,
                        "src": "817:18:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 2037,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "817:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "816:20:13"
                  },
                  "returnParameters": {
                    "id": 2042,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2041,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2043,
                        "src": "860:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2040,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "860:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "859:6:13"
                  },
                  "scope": 2044,
                  "src": "790:76:13",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2045,
              "src": "421:447:13",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:754:13"
        },
        "id": 13
      },
      "contracts/lib/EquitoApp.sol": {
        "ast": {
          "absolutePath": "contracts/lib/EquitoApp.sol",
          "exportedSymbols": {
            "EquitoApp": [
              2299
            ],
            "EquitoMessage": [
              2453
            ],
            "Errors": [
              2574
            ],
            "IEquitoReceiver": [
              2314
            ],
            "IRouter": [
              2423
            ],
            "Ownable": [
              526
            ],
            "bytes64": [
              2431
            ]
          },
          "id": 2300,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2046,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".23"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:24:14"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2048,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2300,
              "sourceUnit": 527,
              "src": "63:67:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2047,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 526,
                    "src": "71:7:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/interfaces/IRouter.sol",
              "file": "./interfaces/IRouter.sol",
              "id": 2050,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2300,
              "sourceUnit": 2424,
              "src": "132:49:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2049,
                    "name": "IRouter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2423,
                    "src": "140:7:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/interfaces/IEquitoReceiver.sol",
              "file": "./interfaces/IEquitoReceiver.sol",
              "id": 2052,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2300,
              "sourceUnit": 2315,
              "src": "183:65:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2051,
                    "name": "IEquitoReceiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2314,
                    "src": "191:15:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/libraries/EquitoMessageLibrary.sol",
              "file": "./libraries/EquitoMessageLibrary.sol",
              "id": 2055,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2300,
              "sourceUnit": 2505,
              "src": "250:76:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2053,
                    "name": "bytes64",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2431,
                    "src": "258:7:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 2054,
                    "name": "EquitoMessage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2453,
                    "src": "267:13:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/libraries/Errors.sol",
              "file": "./libraries/Errors.sol",
              "id": 2057,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2300,
              "sourceUnit": 2575,
              "src": "328:46:14",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2056,
                    "name": "Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2574,
                    "src": "336:6:14",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2059,
                    "name": "IEquitoReceiver",
                    "nameLocations": [
                      "616:15:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2314,
                    "src": "616:15:14"
                  },
                  "id": 2060,
                  "nodeType": "InheritanceSpecifier",
                  "src": "616:15:14"
                },
                {
                  "baseName": {
                    "id": 2061,
                    "name": "Ownable",
                    "nameLocations": [
                      "633:7:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 526,
                    "src": "633:7:14"
                  },
                  "id": 2062,
                  "nodeType": "InheritanceSpecifier",
                  "src": "633:7:14"
                }
              ],
              "canonicalName": "EquitoApp",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2058,
                "nodeType": "StructuredDocumentation",
                "src": "378:207:14",
                "text": "@title EquitoApp\n @notice This abstract contract is the base for all applications that want to leverage\n         the Equito cross-chain messaging protocol to communicate with other blockchains."
              },
              "fullyImplemented": true,
              "id": 2299,
              "linearizedBaseContracts": [
                2299,
                526,
                1891,
                2314
              ],
              "name": "EquitoApp",
              "nameLocation": "603:9:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 2063,
                    "nodeType": "StructuredDocumentation",
                    "src": "648:71:14",
                    "text": "@dev The Router Contract that is used to send and receive messages."
                  },
                  "id": 2066,
                  "mutability": "immutable",
                  "name": "router",
                  "nameLocation": "752:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2299,
                  "src": "725:33:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRouter_$2423",
                    "typeString": "contract IRouter"
                  },
                  "typeName": {
                    "id": 2065,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2064,
                      "name": "IRouter",
                      "nameLocations": [
                        "725:7:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2423,
                      "src": "725:7:14"
                    },
                    "referencedDeclaration": 2423,
                    "src": "725:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRouter_$2423",
                      "typeString": "contract IRouter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 2067,
                    "nodeType": "StructuredDocumentation",
                    "src": "767:71:14",
                    "text": "@dev Mapping to store peer addresses for different chain selectors."
                  },
                  "functionSelector": "be4f3e8f",
                  "id": 2072,
                  "mutability": "mutable",
                  "name": "peers",
                  "nameLocation": "879:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2299,
                  "src": "844:40:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bytes64_$2431_storage_$",
                    "typeString": "mapping(uint256 => struct bytes64)"
                  },
                  "typeName": {
                    "id": 2071,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2068,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "852:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "844:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bytes64_$2431_storage_$",
                      "typeString": "mapping(uint256 => struct bytes64)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2070,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2069,
                        "name": "bytes64",
                        "nameLocations": [
                          "863:7:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2431,
                        "src": "863:7:14"
                      },
                      "referencedDeclaration": 2431,
                      "src": "863:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                        "typeString": "struct bytes64"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2101,
                    "nodeType": "Block",
                    "src": "1082:149:14",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2082,
                            "name": "_router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2075,
                            "src": "1097:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1116:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1108:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2083,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1108:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1108:10:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1097:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2094,
                        "nodeType": "IfStatement",
                        "src": "1093:95:14",
                        "trueBody": {
                          "id": 2093,
                          "nodeType": "Block",
                          "src": "1120:68:14",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2088,
                                    "name": "Errors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2574,
                                    "src": "1142:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Errors_$2574_$",
                                      "typeString": "type(library Errors)"
                                    }
                                  },
                                  "id": 2090,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1149:25:14",
                                  "memberName": "RouterAddressCannotBeZero",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2515,
                                  "src": "1142:32:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 2091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1142:34:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2092,
                              "nodeType": "RevertStatement",
                              "src": "1135:41:14"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2095,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2066,
                            "src": "1198:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouter_$2423",
                              "typeString": "contract IRouter"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2097,
                                "name": "_router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2075,
                                "src": "1215:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2096,
                              "name": "IRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2423,
                              "src": "1207:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRouter_$2423_$",
                                "typeString": "type(contract IRouter)"
                              }
                            },
                            "id": 2098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1207:16:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRouter_$2423",
                              "typeString": "contract IRouter"
                            }
                          },
                          "src": "1198:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRouter_$2423",
                            "typeString": "contract IRouter"
                          }
                        },
                        "id": 2100,
                        "nodeType": "ExpressionStatement",
                        "src": "1198:25:14"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2073,
                    "nodeType": "StructuredDocumentation",
                    "src": "893:134:14",
                    "text": "@notice Initializes the EquitoApp contract and set the router address.\n @param _router The address of the router contract."
                  },
                  "id": 2102,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2078,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1070:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1074:6:14",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1070:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2080,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2077,
                        "name": "Ownable",
                        "nameLocations": [
                          "1062:7:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 526,
                        "src": "1062:7:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1062:19:14"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2075,
                        "mutability": "mutable",
                        "name": "_router",
                        "nameLocation": "1053:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2102,
                        "src": "1045:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2074,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1045:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1044:17:14"
                  },
                  "returnParameters": {
                    "id": 2081,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1082:0:14"
                  },
                  "scope": 2299,
                  "src": "1033:198:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2121,
                    "nodeType": "Block",
                    "src": "1335:118:14",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2105,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1350:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1354:6:14",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1350:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2109,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2066,
                                "src": "1372:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRouter_$2423",
                                  "typeString": "contract IRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IRouter_$2423",
                                  "typeString": "contract IRouter"
                                }
                              ],
                              "id": 2108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1364:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1364:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1364:15:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1350:29:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2119,
                        "nodeType": "IfStatement",
                        "src": "1346:87:14",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2115,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1422:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1426:6:14",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1422:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 2112,
                                "name": "Errors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2574,
                                "src": "1401:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Errors_$2574_$",
                                  "typeString": "type(library Errors)"
                                }
                              },
                              "id": 2114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1408:13:14",
                              "memberName": "InvalidRouter",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2512,
                              "src": "1401:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 2117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1401:32:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2118,
                          "nodeType": "RevertStatement",
                          "src": "1394:39:14"
                        }
                      },
                      {
                        "id": 2120,
                        "nodeType": "PlaceholderStatement",
                        "src": "1444:1:14"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2103,
                    "nodeType": "StructuredDocumentation",
                    "src": "1239:68:14",
                    "text": "@notice Modifier to restrict access to only the router contract."
                  },
                  "id": 2122,
                  "name": "onlyRouter",
                  "nameLocation": "1322:10:14",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2104,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1332:2:14"
                  },
                  "src": "1313:140:14",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2140,
                    "nodeType": "Block",
                    "src": "1825:55:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2136,
                              "name": "chainSelectors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2126,
                              "src": "1846:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            {
                              "id": 2137,
                              "name": "addresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2130,
                              "src": "1862:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_bytes64_$2431_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct bytes64 calldata[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_bytes64_$2431_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct bytes64 calldata[] calldata"
                              }
                            ],
                            "id": 2135,
                            "name": "_setPeers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2190,
                            "src": "1836:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_struct$_bytes64_$2431_calldata_ptr_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (uint256[] calldata,struct bytes64 calldata[] calldata)"
                            }
                          },
                          "id": 2138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1836:36:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2139,
                        "nodeType": "ExpressionStatement",
                        "src": "1836:36:14"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2123,
                    "nodeType": "StructuredDocumentation",
                    "src": "1461:231:14",
                    "text": "@notice Allows the owner to set the peer addresses for different chain selectors.\n @param chainSelectors The list of chain selectors.\n @param addresses The list of addresses corresponding to the chain selectors."
                  },
                  "functionSelector": "59a1aae1",
                  "id": 2141,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2133,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2132,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1815:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 437,
                        "src": "1815:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1815:9:14"
                    }
                  ],
                  "name": "setPeers",
                  "nameLocation": "1707:8:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2126,
                        "mutability": "mutable",
                        "name": "chainSelectors",
                        "nameLocation": "1745:14:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2141,
                        "src": "1726:33:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2124,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1726:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2125,
                          "nodeType": "ArrayTypeName",
                          "src": "1726:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2130,
                        "mutability": "mutable",
                        "name": "addresses",
                        "nameLocation": "1789:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2141,
                        "src": "1770:28:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_bytes64_$2431_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct bytes64[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2128,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2127,
                              "name": "bytes64",
                              "nameLocations": [
                                "1770:7:14"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2431,
                              "src": "1770:7:14"
                            },
                            "referencedDeclaration": 2431,
                            "src": "1770:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                              "typeString": "struct bytes64"
                            }
                          },
                          "id": 2129,
                          "nodeType": "ArrayTypeName",
                          "src": "1770:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_bytes64_$2431_storage_$dyn_storage_ptr",
                            "typeString": "struct bytes64[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1715:90:14"
                  },
                  "returnParameters": {
                    "id": 2134,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1825:0:14"
                  },
                  "scope": 2299,
                  "src": "1698:182:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2189,
                    "nodeType": "Block",
                    "src": "2451:299:14",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2154,
                              "name": "chainSelectors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2145,
                              "src": "2466:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 2155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2481:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2466:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 2156,
                              "name": "addresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2149,
                              "src": "2491:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_bytes64_$2431_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct bytes64 calldata[] calldata"
                              }
                            },
                            "id": 2157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2501:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2491:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2466:41:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2164,
                        "nodeType": "IfStatement",
                        "src": "2462:89:14",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2159,
                                "name": "Errors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2574,
                                "src": "2529:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Errors_$2574_$",
                                  "typeString": "type(library Errors)"
                                }
                              },
                              "id": 2161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2536:13:14",
                              "memberName": "InvalidLength",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2527,
                              "src": "2529:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2529:22:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2163,
                          "nodeType": "RevertStatement",
                          "src": "2522:29:14"
                        }
                      },
                      {
                        "body": {
                          "id": 2187,
                          "nodeType": "Block",
                          "src": "2613:130:14",
                          "statements": [
                            {
                              "expression": {
                                "id": 2181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2173,
                                    "name": "peers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2072,
                                    "src": "2628:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bytes64_$2431_storage_$",
                                      "typeString": "mapping(uint256 => struct bytes64 storage ref)"
                                    }
                                  },
                                  "id": 2177,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 2174,
                                      "name": "chainSelectors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2145,
                                      "src": "2634:14:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 2176,
                                    "indexExpression": {
                                      "id": 2175,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2166,
                                      "src": "2649:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2634:17:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2628:24:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_bytes64_$2431_storage",
                                    "typeString": "struct bytes64 storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 2178,
                                    "name": "addresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2149,
                                    "src": "2655:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_bytes64_$2431_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct bytes64 calldata[] calldata"
                                    }
                                  },
                                  "id": 2180,
                                  "indexExpression": {
                                    "id": 2179,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2166,
                                    "src": "2665:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2655:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_bytes64_$2431_calldata_ptr",
                                    "typeString": "struct bytes64 calldata"
                                  }
                                },
                                "src": "2628:39:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_bytes64_$2431_storage",
                                  "typeString": "struct bytes64 storage ref"
                                }
                              },
                              "id": 2182,
                              "nodeType": "ExpressionStatement",
                              "src": "2628:39:14"
                            },
                            {
                              "id": 2186,
                              "nodeType": "UncheckedBlock",
                              "src": "2684:48:14",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 2184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "2713:3:14",
                                    "subExpression": {
                                      "id": 2183,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2166,
                                      "src": "2715:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2185,
                                  "nodeType": "ExpressionStatement",
                                  "src": "2713:3:14"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2169,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2166,
                            "src": "2584:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 2170,
                              "name": "chainSelectors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2145,
                              "src": "2588:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 2171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2603:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2588:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2584:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2188,
                        "initializationExpression": {
                          "assignments": [
                            2166
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2166,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2577:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 2188,
                              "src": "2569:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2165,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2569:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2168,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2581:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2569:13:14"
                        },
                        "isSimpleCounterLoop": false,
                        "nodeType": "ForStatement",
                        "src": "2564:179:14"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2142,
                    "nodeType": "StructuredDocumentation",
                    "src": "1888:421:14",
                    "text": "@notice Internal function to set the peer addresses for different chain selectors.\n @param chainSelectors The list of chain selectors.\n @param addresses The list of addresses corresponding to the chain selectors.\n @dev This function is internal to allow for easier overriding and extension by derived contracts,\n      facilitating the reuse of peer-setting logic in different contexts."
                  },
                  "id": 2190,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2152,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2151,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2441:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 437,
                        "src": "2441:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2441:9:14"
                    }
                  ],
                  "name": "_setPeers",
                  "nameLocation": "2324:9:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2145,
                        "mutability": "mutable",
                        "name": "chainSelectors",
                        "nameLocation": "2363:14:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2190,
                        "src": "2344:33:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2143,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2344:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2144,
                          "nodeType": "ArrayTypeName",
                          "src": "2344:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2149,
                        "mutability": "mutable",
                        "name": "addresses",
                        "nameLocation": "2407:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2190,
                        "src": "2388:28:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_bytes64_$2431_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct bytes64[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2147,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2146,
                              "name": "bytes64",
                              "nameLocations": [
                                "2388:7:14"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2431,
                              "src": "2388:7:14"
                            },
                            "referencedDeclaration": 2431,
                            "src": "2388:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                              "typeString": "struct bytes64"
                            }
                          },
                          "id": 2148,
                          "nodeType": "ArrayTypeName",
                          "src": "2388:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_bytes64_$2431_storage_$dyn_storage_ptr",
                            "typeString": "struct bytes64[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2333:90:14"
                  },
                  "returnParameters": {
                    "id": 2153,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2451:0:14"
                  },
                  "scope": 2299,
                  "src": "2315:435:14",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2225,
                    "nodeType": "Block",
                    "src": "3156:234:14",
                    "statements": [
                      {
                        "assignments": [
                          2201
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2201,
                            "mutability": "mutable",
                            "name": "peerAddress",
                            "nameLocation": "3182:11:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2225,
                            "src": "3167:26:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                              "typeString": "struct bytes64"
                            },
                            "typeName": {
                              "id": 2200,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2199,
                                "name": "bytes64",
                                "nameLocations": [
                                  "3167:7:14"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2431,
                                "src": "3167:7:14"
                              },
                              "referencedDeclaration": 2431,
                              "src": "3167:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                                "typeString": "struct bytes64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2205,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2202,
                            "name": "peers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2072,
                            "src": "3196:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bytes64_$2431_storage_$",
                              "typeString": "mapping(uint256 => struct bytes64 storage ref)"
                            }
                          },
                          "id": 2204,
                          "indexExpression": {
                            "id": 2203,
                            "name": "chainSelector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2193,
                            "src": "3202:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3196:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_storage",
                            "typeString": "struct bytes64 storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3167:49:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 2209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2206,
                                "name": "peerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2201,
                                "src": "3231:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                                  "typeString": "struct bytes64 memory"
                                }
                              },
                              "id": 2207,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3243:5:14",
                              "memberName": "lower",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2428,
                              "src": "3231:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30783030",
                              "id": 2208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3252:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x00"
                            },
                            "src": "3231:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 2213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2210,
                                "name": "peerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2201,
                                "src": "3260:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                                  "typeString": "struct bytes64 memory"
                                }
                              },
                              "id": 2211,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3272:5:14",
                              "memberName": "upper",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2430,
                              "src": "3260:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30783030",
                              "id": 2212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3281:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x00"
                            },
                            "src": "3260:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3231:54:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2222,
                        "nodeType": "IfStatement",
                        "src": "3227:127:14",
                        "trueBody": {
                          "id": 2221,
                          "nodeType": "Block",
                          "src": "3287:67:14",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 2218,
                                    "name": "chainSelector",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2193,
                                    "src": "3328:13:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2215,
                                    "name": "Errors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2574,
                                    "src": "3309:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Errors_$2574_$",
                                      "typeString": "type(library Errors)"
                                    }
                                  },
                                  "id": 2217,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3316:11:14",
                                  "memberName": "InvalidPeer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2573,
                                  "src": "3309:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256) pure"
                                  }
                                },
                                "id": 2219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3309:33:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2220,
                              "nodeType": "RevertStatement",
                              "src": "3302:40:14"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2223,
                          "name": "peerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2201,
                          "src": "3371:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                            "typeString": "struct bytes64 memory"
                          }
                        },
                        "functionReturnParameters": 2198,
                        "id": 2224,
                        "nodeType": "Return",
                        "src": "3364:18:14"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2191,
                    "nodeType": "StructuredDocumentation",
                    "src": "2758:299:14",
                    "text": "@notice Returns the peer address for a given chain selector.\n @param chainSelector The chain selector for which the peer address is requested.\n @return The peer address for the given chain selector.\n @dev Throws an error if the chain selector is not found in the mapping."
                  },
                  "functionSelector": "67ebb6b2",
                  "id": 2226,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPeer",
                  "nameLocation": "3072:7:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2193,
                        "mutability": "mutable",
                        "name": "chainSelector",
                        "nameLocation": "3098:13:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2226,
                        "src": "3090:21:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2192,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3090:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3079:39:14"
                  },
                  "returnParameters": {
                    "id": 2198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2197,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2226,
                        "src": "3140:14:14",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                          "typeString": "struct bytes64"
                        },
                        "typeName": {
                          "id": 2196,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2195,
                            "name": "bytes64",
                            "nameLocations": [
                              "3140:7:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2431,
                            "src": "3140:7:14"
                          },
                          "referencedDeclaration": 2431,
                          "src": "3140:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                            "typeString": "struct bytes64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3139:16:14"
                  },
                  "scope": 2299,
                  "src": "3063:327:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2313
                  ],
                  "body": {
                    "id": 2272,
                    "nodeType": "Block",
                    "src": "3916:376:14",
                    "statements": [
                      {
                        "assignments": [
                          2240
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2240,
                            "mutability": "mutable",
                            "name": "peerAddress",
                            "nameLocation": "3942:11:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 2272,
                            "src": "3927:26:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                              "typeString": "struct bytes64"
                            },
                            "typeName": {
                              "id": 2239,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2238,
                                "name": "bytes64",
                                "nameLocations": [
                                  "3927:7:14"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2431,
                                "src": "3927:7:14"
                              },
                              "referencedDeclaration": 2431,
                              "src": "3927:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                                "typeString": "struct bytes64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2245,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2241,
                            "name": "peers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2072,
                            "src": "3956:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bytes64_$2431_storage_$",
                              "typeString": "mapping(uint256 => struct bytes64 storage ref)"
                            }
                          },
                          "id": 2244,
                          "indexExpression": {
                            "expression": {
                              "id": 2242,
                              "name": "message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2230,
                              "src": "3962:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                                "typeString": "struct EquitoMessage calldata"
                              }
                            },
                            "id": 2243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3970:19:14",
                            "memberName": "sourceChainSelector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2438,
                            "src": "3962:27:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3956:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_storage",
                            "typeString": "struct bytes64 storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3927:63:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 2251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2246,
                                "name": "peerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2240,
                                "src": "4021:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                                  "typeString": "struct bytes64 memory"
                                }
                              },
                              "id": 2247,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4033:5:14",
                              "memberName": "lower",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2428,
                              "src": "4021:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 2248,
                                  "name": "message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2230,
                                  "src": "4042:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                                    "typeString": "struct EquitoMessage calldata"
                                  }
                                },
                                "id": 2249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4050:6:14",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2442,
                                "src": "4042:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_bytes64_$2431_calldata_ptr",
                                  "typeString": "struct bytes64 calldata"
                                }
                              },
                              "id": 2250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4057:5:14",
                              "memberName": "lower",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2428,
                              "src": "4042:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "4021:41:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 2257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2252,
                                "name": "peerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2240,
                                "src": "4079:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                                  "typeString": "struct bytes64 memory"
                                }
                              },
                              "id": 2253,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4091:5:14",
                              "memberName": "upper",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2430,
                              "src": "4079:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "id": 2254,
                                  "name": "message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2230,
                                  "src": "4100:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                                    "typeString": "struct EquitoMessage calldata"
                                  }
                                },
                                "id": 2255,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4108:6:14",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2442,
                                "src": "4100:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_bytes64_$2431_calldata_ptr",
                                  "typeString": "struct bytes64 calldata"
                                }
                              },
                              "id": 2256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4115:5:14",
                              "memberName": "upper",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2430,
                              "src": "4100:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "4079:41:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4021:99:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2270,
                          "nodeType": "Block",
                          "src": "4213:72:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2266,
                                    "name": "message",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2230,
                                    "src": "4252:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                                      "typeString": "struct EquitoMessage calldata"
                                    }
                                  },
                                  {
                                    "id": 2267,
                                    "name": "messageData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2232,
                                    "src": "4261:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                                      "typeString": "struct EquitoMessage calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 2265,
                                  "name": "_receiveMessageFromPeer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2283,
                                  "src": "4228:23:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_EquitoMessage_$2453_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$",
                                    "typeString": "function (struct EquitoMessage calldata,bytes calldata)"
                                  }
                                },
                                "id": 2268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4228:45:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2269,
                              "nodeType": "ExpressionStatement",
                              "src": "4228:45:14"
                            }
                          ]
                        },
                        "id": 2271,
                        "nodeType": "IfStatement",
                        "src": "4003:282:14",
                        "trueBody": {
                          "id": 2264,
                          "nodeType": "Block",
                          "src": "4132:75:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2260,
                                    "name": "message",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2230,
                                    "src": "4174:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                                      "typeString": "struct EquitoMessage calldata"
                                    }
                                  },
                                  {
                                    "id": 2261,
                                    "name": "messageData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2232,
                                    "src": "4183:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                                      "typeString": "struct EquitoMessage calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 2259,
                                  "name": "_receiveMessageFromNonPeer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2298,
                                  "src": "4147:26:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_EquitoMessage_$2453_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$",
                                    "typeString": "function (struct EquitoMessage calldata,bytes calldata)"
                                  }
                                },
                                "id": 2262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4147:48:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2263,
                              "nodeType": "ExpressionStatement",
                              "src": "4147:48:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2227,
                    "nodeType": "StructuredDocumentation",
                    "src": "3398:366:14",
                    "text": "@notice Receives a cross-chain message from the Router Contract.\n         It is a wrapper function for the `_receiveMessage` functions, that need to be overridden.\n         Only the Router Contract is allowed to call this function.\n @param message The Equito message received.\n @param messageData The data of the message received."
                  },
                  "functionSelector": "879d182d",
                  "id": 2273,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2236,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2235,
                        "name": "onlyRouter",
                        "nameLocations": [
                          "3905:10:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2122,
                        "src": "3905:10:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3905:10:14"
                    }
                  ],
                  "name": "receiveMessage",
                  "nameLocation": "3779:14:14",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2234,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3896:8:14"
                  },
                  "parameters": {
                    "id": 2233,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2230,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "3827:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2273,
                        "src": "3804:30:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                          "typeString": "struct EquitoMessage"
                        },
                        "typeName": {
                          "id": 2229,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2228,
                            "name": "EquitoMessage",
                            "nameLocations": [
                              "3804:13:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2453,
                            "src": "3804:13:14"
                          },
                          "referencedDeclaration": 2453,
                          "src": "3804:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EquitoMessage_$2453_storage_ptr",
                            "typeString": "struct EquitoMessage"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2232,
                        "mutability": "mutable",
                        "name": "messageData",
                        "nameLocation": "3860:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2273,
                        "src": "3845:26:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2231,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3845:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3793:85:14"
                  },
                  "returnParameters": {
                    "id": 2237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3916:0:14"
                  },
                  "scope": 2299,
                  "src": "3770:522:14",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2282,
                    "nodeType": "Block",
                    "src": "4626:2:14",
                    "statements": []
                  },
                  "documentation": {
                    "id": 2274,
                    "nodeType": "StructuredDocumentation",
                    "src": "4300:185:14",
                    "text": "@notice The logic for receiving a cross-chain message from a peer.\n @param message The Equito message received.\n @param messageData The data of the message received."
                  },
                  "id": 2283,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_receiveMessageFromPeer",
                  "nameLocation": "4500:23:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2277,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "4557:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2283,
                        "src": "4534:30:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                          "typeString": "struct EquitoMessage"
                        },
                        "typeName": {
                          "id": 2276,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2275,
                            "name": "EquitoMessage",
                            "nameLocations": [
                              "4534:13:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2453,
                            "src": "4534:13:14"
                          },
                          "referencedDeclaration": 2453,
                          "src": "4534:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EquitoMessage_$2453_storage_ptr",
                            "typeString": "struct EquitoMessage"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2279,
                        "mutability": "mutable",
                        "name": "messageData",
                        "nameLocation": "4590:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2283,
                        "src": "4575:26:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2278,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4575:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4523:85:14"
                  },
                  "returnParameters": {
                    "id": 2281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4626:0:14"
                  },
                  "scope": 2299,
                  "src": "4491:137:14",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2297,
                    "nodeType": "Block",
                    "src": "5038:55:14",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2292,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2574,
                              "src": "5056:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$2574_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 2294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5063:20:14",
                            "memberName": "InvalidMessageSender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2530,
                            "src": "5056:27:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5056:29:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2296,
                        "nodeType": "RevertStatement",
                        "src": "5049:36:14"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2284,
                    "nodeType": "StructuredDocumentation",
                    "src": "4636:258:14",
                    "text": "@notice The logic for receiving a cross-chain message from a non-peer.\n         The default implementation reverts the transaction.\n @param message The Equito message received.\n @param messageData The data of the message received."
                  },
                  "id": 2298,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_receiveMessageFromNonPeer",
                  "nameLocation": "4909:26:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2287,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "4969:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2298,
                        "src": "4946:30:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                          "typeString": "struct EquitoMessage"
                        },
                        "typeName": {
                          "id": 2286,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2285,
                            "name": "EquitoMessage",
                            "nameLocations": [
                              "4946:13:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2453,
                            "src": "4946:13:14"
                          },
                          "referencedDeclaration": 2453,
                          "src": "4946:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EquitoMessage_$2453_storage_ptr",
                            "typeString": "struct EquitoMessage"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2289,
                        "mutability": "mutable",
                        "name": "messageData",
                        "nameLocation": "5002:11:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2298,
                        "src": "4987:26:14",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2288,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4987:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4935:85:14"
                  },
                  "returnParameters": {
                    "id": 2291,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5038:0:14"
                  },
                  "scope": 2299,
                  "src": "4900:193:14",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 2300,
              "src": "585:4511:14",
              "usedErrors": [
                392,
                397,
                2512,
                2515,
                2527,
                2530,
                2573
              ],
              "usedEvents": [
                403
              ]
            }
          ],
          "src": "35:5063:14"
        },
        "id": 14
      },
      "contracts/lib/interfaces/IEquitoReceiver.sol": {
        "ast": {
          "absolutePath": "contracts/lib/interfaces/IEquitoReceiver.sol",
          "exportedSymbols": {
            "EquitoMessage": [
              2453
            ],
            "IEquitoReceiver": [
              2314
            ]
          },
          "id": 2315,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2301,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".23"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:24:15"
            },
            {
              "absolutePath": "contracts/lib/libraries/EquitoMessageLibrary.sol",
              "file": "../libraries/EquitoMessageLibrary.sol",
              "id": 2303,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2315,
              "sourceUnit": 2505,
              "src": "63:68:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2302,
                    "name": "EquitoMessage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2453,
                    "src": "71:13:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IEquitoReceiver",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2304,
                "nodeType": "StructuredDocumentation",
                "src": "135:128:15",
                "text": "@title IEquitoReceiver\n @notice Interface for contracts that can receive cross-chain messages via the Router contract."
              },
              "fullyImplemented": false,
              "id": 2314,
              "linearizedBaseContracts": [
                2314
              ],
              "name": "IEquitoReceiver",
              "nameLocation": "273:15:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2305,
                    "nodeType": "StructuredDocumentation",
                    "src": "296:174:15",
                    "text": "@notice Receives a cross-chain message from the Router contract.\n @param message The Equito message received.\n @param messageData The data of the message."
                  },
                  "functionSelector": "879d182d",
                  "id": 2313,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "receiveMessage",
                  "nameLocation": "485:14:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2308,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "533:7:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2313,
                        "src": "510:30:15",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                          "typeString": "struct EquitoMessage"
                        },
                        "typeName": {
                          "id": 2307,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2306,
                            "name": "EquitoMessage",
                            "nameLocations": [
                              "510:13:15"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2453,
                            "src": "510:13:15"
                          },
                          "referencedDeclaration": 2453,
                          "src": "510:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EquitoMessage_$2453_storage_ptr",
                            "typeString": "struct EquitoMessage"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2310,
                        "mutability": "mutable",
                        "name": "messageData",
                        "nameLocation": "566:11:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2313,
                        "src": "551:26:15",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2309,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "551:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "499:85:15"
                  },
                  "returnParameters": {
                    "id": 2312,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "601:0:15"
                  },
                  "scope": 2314,
                  "src": "476:126:15",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2315,
              "src": "263:342:15",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "35:572:15"
        },
        "id": 15
      },
      "contracts/lib/interfaces/IRouter.sol": {
        "ast": {
          "absolutePath": "contracts/lib/interfaces/IRouter.sol",
          "exportedSymbols": {
            "EquitoMessage": [
              2453
            ],
            "IEquitoFees": [
              2329
            ],
            "IRouter": [
              2423
            ],
            "bytes64": [
              2431
            ]
          },
          "id": 2424,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2316,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".23"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:24:16"
            },
            {
              "absolutePath": "contracts/lib/libraries/EquitoMessageLibrary.sol",
              "file": "../libraries/EquitoMessageLibrary.sol",
              "id": 2319,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2424,
              "sourceUnit": 2505,
              "src": "63:77:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2317,
                    "name": "bytes64",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2431,
                    "src": "71:7:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                },
                {
                  "foreign": {
                    "id": 2318,
                    "name": "EquitoMessage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2453,
                    "src": "80:13:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IEquitoFees",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2320,
                "nodeType": "StructuredDocumentation",
                "src": "144:129:16",
                "text": "@title IEquitoFees\n @notice Interface for the IEquitoFees contract, used to collect fees for Message Send transactions."
              },
              "fullyImplemented": false,
              "id": 2329,
              "linearizedBaseContracts": [
                2329
              ],
              "name": "IEquitoFees",
              "nameLocation": "283:11:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2321,
                    "nodeType": "StructuredDocumentation",
                    "src": "302:196:16",
                    "text": "@notice Gets the current fee amount required to send a Message.\n @param sender The address of the Message Sender, usually an Equito App.\n @return The current fee amount in wei."
                  },
                  "functionSelector": "b88c9148",
                  "id": 2328,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFee",
                  "nameLocation": "513:6:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2324,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2323,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "528:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2328,
                        "src": "520:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "520:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "519:16:16"
                  },
                  "returnParameters": {
                    "id": 2327,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2326,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2328,
                        "src": "559:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2325,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "559:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "558:9:16"
                  },
                  "scope": 2329,
                  "src": "504:64:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2424,
              "src": "273:298:16",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2331,
                    "name": "IEquitoFees",
                    "nameLocations": [
                      "722:11:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2329,
                    "src": "722:11:16"
                  },
                  "id": 2332,
                  "nodeType": "InheritanceSpecifier",
                  "src": "722:11:16"
                }
              ],
              "canonicalName": "IRouter",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2330,
                "nodeType": "StructuredDocumentation",
                "src": "575:126:16",
                "text": "@title IRouter\n @notice Interface for the Router contract, used to interact with the cross-chain messaging protocol."
              },
              "fullyImplemented": false,
              "id": 2423,
              "linearizedBaseContracts": [
                2423,
                2329
              ],
              "name": "IRouter",
              "nameLocation": "711:7:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2333,
                    "nodeType": "StructuredDocumentation",
                    "src": "741:171:16",
                    "text": "@notice Emitted when a message send request is created.\n @param message The message being sent.\n @param messageData The data of the message being sent."
                  },
                  "eventSelector": "e8fb646086f78a901ffad273bf2f835a72e0d99bfc654a0a5f9eea873e6a0c32",
                  "id": 2340,
                  "name": "MessageSendRequested",
                  "nameLocation": "924:20:16",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2336,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "959:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2340,
                        "src": "945:21:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EquitoMessage_$2453_memory_ptr",
                          "typeString": "struct EquitoMessage"
                        },
                        "typeName": {
                          "id": 2335,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2334,
                            "name": "EquitoMessage",
                            "nameLocations": [
                              "945:13:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2453,
                            "src": "945:13:16"
                          },
                          "referencedDeclaration": 2453,
                          "src": "945:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EquitoMessage_$2453_storage_ptr",
                            "typeString": "struct EquitoMessage"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2338,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "messageData",
                        "nameLocation": "974:11:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2340,
                        "src": "968:17:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2337,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "968:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "944:42:16"
                  },
                  "src": "918:69:16"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2341,
                    "nodeType": "StructuredDocumentation",
                    "src": "995:107:16",
                    "text": "@notice Emitted when a new verifier is added.\n @param verifier The address of the new verifier."
                  },
                  "eventSelector": "6d05492139c5ea989514a5d2150c028041e5c087e2a39967f67dc7d2655adb81",
                  "id": 2345,
                  "name": "VerifierAdded",
                  "nameLocation": "1114:13:16",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2343,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "verifier",
                        "nameLocation": "1144:8:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2345,
                        "src": "1128:24:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1128:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1127:26:16"
                  },
                  "src": "1108:46:16"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1162:167:16",
                    "text": "@notice Emitted when a messages has successfully been delivered, ready to be executed.\n @param messageHash The hash of the message that has been delivered."
                  },
                  "eventSelector": "fa39010b12e169f2d7e9a76e381216416dbf5eb59db117ae979592ee9f323885",
                  "id": 2350,
                  "name": "MessageDelivered",
                  "nameLocation": "1341:16:16",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2348,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "messageHash",
                        "nameLocation": "1366:11:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2350,
                        "src": "1358:19:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2347,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1358:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1357:21:16"
                  },
                  "src": "1335:44:16"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2351,
                    "nodeType": "StructuredDocumentation",
                    "src": "1387:142:16",
                    "text": "@notice Emitted when a message has successfully been executed.\n @param messageHash The hash of the message that has been executed."
                  },
                  "eventSelector": "e7d1e1f435233f7a187624ac11afaf32ee0da368cef8a5625be394412f619254",
                  "id": 2355,
                  "name": "MessageExecuted",
                  "nameLocation": "1541:15:16",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2353,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "messageHash",
                        "nameLocation": "1565:11:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2355,
                        "src": "1557:19:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2352,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1557:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1556:21:16"
                  },
                  "src": "1535:43:16"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2356,
                    "nodeType": "StructuredDocumentation",
                    "src": "1586:49:16",
                    "text": "@notice Emitted when the Equito fees are set."
                  },
                  "eventSelector": "45a9541ef904ba2e22061113303f89a6349e3f1a58b8ac0f22dd605cc77c913d",
                  "id": 2358,
                  "name": "EquitoFeesSet",
                  "nameLocation": "1647:13:16",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2357,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1660:2:16"
                  },
                  "src": "1641:22:16"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2359,
                    "nodeType": "StructuredDocumentation",
                    "src": "1671:57:16",
                    "text": "@notice Event emitted when the equito address is set."
                  },
                  "eventSelector": "7f63ab2585aef72e130f0467fe44b74599ff1263eeb779e527ae4fbf6b5df442",
                  "id": 2361,
                  "name": "EquitoAddressSet",
                  "nameLocation": "1740:16:16",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1756:2:16"
                  },
                  "src": "1734:25:16"
                },
                {
                  "documentation": {
                    "id": 2362,
                    "nodeType": "StructuredDocumentation",
                    "src": "1767:274:16",
                    "text": "@notice Sends a cross-chain message using Equito.\n @param receiver The address of the receiver.\n @param destinationChainSelector The chain selector of the destination chain.\n @param data The message data.\n @return The hash of the message."
                  },
                  "functionSelector": "dc203137",
                  "id": 2374,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendMessage",
                  "nameLocation": "2056:11:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2365,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "2095:8:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2374,
                        "src": "2078:25:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bytes64_$2431_calldata_ptr",
                          "typeString": "struct bytes64"
                        },
                        "typeName": {
                          "id": 2364,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2363,
                            "name": "bytes64",
                            "nameLocations": [
                              "2078:7:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2431,
                            "src": "2078:7:16"
                          },
                          "referencedDeclaration": 2431,
                          "src": "2078:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                            "typeString": "struct bytes64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2367,
                        "mutability": "mutable",
                        "name": "destinationChainSelector",
                        "nameLocation": "2122:24:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2374,
                        "src": "2114:32:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2114:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2369,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2172:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2374,
                        "src": "2157:19:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2368,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2157:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2067:116:16"
                  },
                  "returnParameters": {
                    "id": 2373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2372,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2374,
                        "src": "2210:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2210:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2209:9:16"
                  },
                  "scope": 2423,
                  "src": "2047:172:16",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2375,
                    "nodeType": "StructuredDocumentation",
                    "src": "2227:344:16",
                    "text": "@notice Verify and execute a message with the appropriate receiver contract.\n @param message The message to be executed.\n @param messageData The data of the message to be executed.\n @param verifierIndex The index of the verifier used to verify the message.\n @param proof The proof to provide to the verifier."
                  },
                  "functionSelector": "f0a5704a",
                  "id": 2387,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deliverAndExecuteMessage",
                  "nameLocation": "2586:24:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2378,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "2644:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2387,
                        "src": "2621:30:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                          "typeString": "struct EquitoMessage"
                        },
                        "typeName": {
                          "id": 2377,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2376,
                            "name": "EquitoMessage",
                            "nameLocations": [
                              "2621:13:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2453,
                            "src": "2621:13:16"
                          },
                          "referencedDeclaration": 2453,
                          "src": "2621:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EquitoMessage_$2453_storage_ptr",
                            "typeString": "struct EquitoMessage"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2380,
                        "mutability": "mutable",
                        "name": "messageData",
                        "nameLocation": "2677:11:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2387,
                        "src": "2662:26:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2379,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2662:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2382,
                        "mutability": "mutable",
                        "name": "verifierIndex",
                        "nameLocation": "2707:13:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2387,
                        "src": "2699:21:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2381,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2699:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2384,
                        "mutability": "mutable",
                        "name": "proof",
                        "nameLocation": "2746:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2387,
                        "src": "2731:20:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2383,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2731:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2610:148:16"
                  },
                  "returnParameters": {
                    "id": 2386,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2775:0:16"
                  },
                  "scope": 2423,
                  "src": "2577:199:16",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2388,
                    "nodeType": "StructuredDocumentation",
                    "src": "2784:269:16",
                    "text": "@notice Delivers messages to be stored for later execution.\n @param messages The list of messages to be delivered.\n @param verifierIndex The index of the verifier used to verify the messages.\n @param proof The proof provided by the verifier."
                  },
                  "functionSelector": "71c67f3a",
                  "id": 2399,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deliverMessages",
                  "nameLocation": "3068:15:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2392,
                        "mutability": "mutable",
                        "name": "messages",
                        "nameLocation": "3119:8:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2399,
                        "src": "3094:33:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EquitoMessage_$2453_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct EquitoMessage[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2390,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2389,
                              "name": "EquitoMessage",
                              "nameLocations": [
                                "3094:13:16"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2453,
                              "src": "3094:13:16"
                            },
                            "referencedDeclaration": 2453,
                            "src": "3094:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EquitoMessage_$2453_storage_ptr",
                              "typeString": "struct EquitoMessage"
                            }
                          },
                          "id": 2391,
                          "nodeType": "ArrayTypeName",
                          "src": "3094:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_EquitoMessage_$2453_storage_$dyn_storage_ptr",
                            "typeString": "struct EquitoMessage[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2394,
                        "mutability": "mutable",
                        "name": "verifierIndex",
                        "nameLocation": "3146:13:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2399,
                        "src": "3138:21:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2393,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3138:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2396,
                        "mutability": "mutable",
                        "name": "proof",
                        "nameLocation": "3185:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2399,
                        "src": "3170:20:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2395,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3170:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3083:114:16"
                  },
                  "returnParameters": {
                    "id": 2398,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3206:0:16"
                  },
                  "scope": 2423,
                  "src": "3059:148:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2400,
                    "nodeType": "StructuredDocumentation",
                    "src": "3215:158:16",
                    "text": "@notice Executes a stored message.\n @param message The message to be executed.\n @param messageData The data of the message to be executed."
                  },
                  "functionSelector": "27d951e9",
                  "id": 2408,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeMessage",
                  "nameLocation": "3388:14:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2406,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2403,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "3436:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2408,
                        "src": "3413:30:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                          "typeString": "struct EquitoMessage"
                        },
                        "typeName": {
                          "id": 2402,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2401,
                            "name": "EquitoMessage",
                            "nameLocations": [
                              "3413:13:16"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2453,
                            "src": "3413:13:16"
                          },
                          "referencedDeclaration": 2453,
                          "src": "3413:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EquitoMessage_$2453_storage_ptr",
                            "typeString": "struct EquitoMessage"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2405,
                        "mutability": "mutable",
                        "name": "messageData",
                        "nameLocation": "3469:11:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2408,
                        "src": "3454:26:16",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2404,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3454:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3402:85:16"
                  },
                  "returnParameters": {
                    "id": 2407,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3504:0:16"
                  },
                  "scope": 2423,
                  "src": "3379:126:16",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2409,
                    "nodeType": "StructuredDocumentation",
                    "src": "3513:60:16",
                    "text": "@notice Returns the chain selector of the current chain."
                  },
                  "functionSelector": "4e4bc847",
                  "id": 2414,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "chainSelector",
                  "nameLocation": "3588:13:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2410,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3601:2:16"
                  },
                  "returnParameters": {
                    "id": 2413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2412,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2414,
                        "src": "3627:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2411,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3627:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3626:9:16"
                  },
                  "scope": 2423,
                  "src": "3579:57:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2415,
                    "nodeType": "StructuredDocumentation",
                    "src": "3644:39:16",
                    "text": "@notice Returns the equito address."
                  },
                  "functionSelector": "2ef5c989",
                  "id": 2422,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "equitoAddress",
                  "nameLocation": "3698:13:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2416,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3711:2:16"
                  },
                  "returnParameters": {
                    "id": 2421,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2418,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2422,
                        "src": "3737:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2417,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3737:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2420,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2422,
                        "src": "3746:7:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2419,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3746:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3736:18:16"
                  },
                  "scope": 2423,
                  "src": "3689:66:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2424,
              "src": "701:3057:16",
              "usedErrors": [],
              "usedEvents": [
                2340,
                2345,
                2350,
                2355,
                2358,
                2361
              ]
            }
          ],
          "src": "35:3725:16"
        },
        "id": 16
      },
      "contracts/lib/libraries/EquitoMessageLibrary.sol": {
        "ast": {
          "absolutePath": "contracts/lib/libraries/EquitoMessageLibrary.sol",
          "exportedSymbols": {
            "EquitoMessage": [
              2453
            ],
            "EquitoMessageLibrary": [
              2504
            ],
            "bytes64": [
              2431
            ]
          },
          "id": 2505,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2425,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".23"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:24:17"
            },
            {
              "canonicalName": "bytes64",
              "documentation": {
                "id": 2426,
                "nodeType": "StructuredDocumentation",
                "src": "63:215:17",
                "text": "@title bytes64\n @notice A struct that holds two bytes32 values, used to store a 64-byte value.\n @dev Used to store 64-byte long values for the sender and receiver addresses in the EquitoMessage struct."
              },
              "id": 2431,
              "members": [
                {
                  "constant": false,
                  "id": 2428,
                  "mutability": "mutable",
                  "name": "lower",
                  "nameLocation": "308:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2431,
                  "src": "300:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2427,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2430,
                  "mutability": "mutable",
                  "name": "upper",
                  "nameLocation": "328:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2431,
                  "src": "320:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2429,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "bytes64",
              "nameLocation": "285:7:17",
              "nodeType": "StructDefinition",
              "scope": 2505,
              "src": "278:59:17",
              "visibility": "public"
            },
            {
              "canonicalName": "EquitoMessage",
              "documentation": {
                "id": 2432,
                "nodeType": "StructuredDocumentation",
                "src": "341:241:17",
                "text": "@title EquitoMessage\n @notice The ubiquitous message structure for cross-chain communication, used by the Router contract to deliver and receive messages.\n @dev Designed to be used by any chain supported by the Equito protocol."
              },
              "id": 2453,
              "members": [
                {
                  "constant": false,
                  "id": 2435,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "681:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2453,
                  "src": "673:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2438,
                  "mutability": "mutable",
                  "name": "sourceChainSelector",
                  "nameLocation": "772:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2453,
                  "src": "764:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2442,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "846:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2453,
                  "src": "838:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                    "typeString": "struct bytes64"
                  },
                  "typeName": {
                    "id": 2441,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2440,
                      "name": "bytes64",
                      "nameLocations": [
                        "838:7:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2431,
                      "src": "838:7:17"
                    },
                    "referencedDeclaration": 2431,
                    "src": "838:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                      "typeString": "struct bytes64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2445,
                  "mutability": "mutable",
                  "name": "destinationChainSelector",
                  "nameLocation": "937:24:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2453,
                  "src": "929:32:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2449,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1018:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2453,
                  "src": "1010:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                    "typeString": "struct bytes64"
                  },
                  "typeName": {
                    "id": 2448,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2447,
                      "name": "bytes64",
                      "nameLocations": [
                        "1010:7:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2431,
                      "src": "1010:7:17"
                    },
                    "referencedDeclaration": 2431,
                    "src": "1010:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                      "typeString": "struct bytes64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2452,
                  "mutability": "mutable",
                  "name": "hashedData",
                  "nameLocation": "1110:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2453,
                  "src": "1102:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2451,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "EquitoMessage",
              "nameLocation": "589:13:17",
              "nodeType": "StructDefinition",
              "scope": 2505,
              "src": "582:542:17",
              "visibility": "public"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "EquitoMessageLibrary",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2454,
                "nodeType": "StructuredDocumentation",
                "src": "1128:162:17",
                "text": "@title EquitoMessageLibrary\n @notice Library providing helper functions for EquitoMessage struct.\n @dev Contains hashing function for EquitoMessage."
              },
              "fullyImplemented": true,
              "id": 2504,
              "linearizedBaseContracts": [
                2504
              ],
              "name": "EquitoMessageLibrary",
              "nameLocation": "1298:20:17",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2480,
                    "nodeType": "Block",
                    "src": "1663:78:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 2470,
                                          "name": "addr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2457,
                                          "src": "1713:4:17",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2469,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1705:7:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint160_$",
                                          "typeString": "type(uint160)"
                                        },
                                        "typeName": {
                                          "id": 2468,
                                          "name": "uint160",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1705:7:17",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2471,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1705:13:17",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint160",
                                        "typeString": "uint160"
                                      }
                                    ],
                                    "id": 2467,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1697:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 2466,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1697:7:17",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1697:22:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1689:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 2464,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1689:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1689:31:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1730:1:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1722:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 2474,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1722:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1722:10:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2463,
                            "name": "bytes64",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2431,
                            "src": "1681:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_bytes64_$2431_storage_ptr_$",
                              "typeString": "type(struct bytes64 storage pointer)"
                            }
                          },
                          "id": 2478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1681:52:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                            "typeString": "struct bytes64 memory"
                          }
                        },
                        "functionReturnParameters": 2462,
                        "id": 2479,
                        "nodeType": "Return",
                        "src": "1674:59:17"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2455,
                    "nodeType": "StructuredDocumentation",
                    "src": "1326:236:17",
                    "text": "@notice Converts an address to a bytes64 struct.\n @param addr The address to convert.\n @return The bytes64 struct containing the address.\n @dev The upper bytes32 value is set to 0. This operation cannot fail."
                  },
                  "id": 2481,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addressToBytes64",
                  "nameLocation": "1577:16:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2457,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "1612:4:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2481,
                        "src": "1604:12:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2456,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1604:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:30:17"
                  },
                  "returnParameters": {
                    "id": 2462,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2461,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2481,
                        "src": "1647:14:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                          "typeString": "struct bytes64"
                        },
                        "typeName": {
                          "id": 2460,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2459,
                            "name": "bytes64",
                            "nameLocations": [
                              "1647:7:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2431,
                            "src": "1647:7:17"
                          },
                          "referencedDeclaration": 2431,
                          "src": "1647:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                            "typeString": "struct bytes64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1646:16:17"
                  },
                  "scope": 2504,
                  "src": "1568:173:17",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2502,
                    "nodeType": "Block",
                    "src": "2108:62:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 2496,
                                        "name": "b64",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2485,
                                        "src": "2150:3:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                                          "typeString": "struct bytes64 memory"
                                        }
                                      },
                                      "id": 2497,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2154:5:17",
                                      "memberName": "lower",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2428,
                                      "src": "2150:9:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 2495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2142:7:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 2494,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2142:7:17",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2142:18:17",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2134:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": {
                                  "id": 2492,
                                  "name": "uint160",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2134:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2134:27:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 2491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2126:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2490,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2126:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2126:36:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2489,
                        "id": 2501,
                        "nodeType": "Return",
                        "src": "2119:43:17"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2482,
                    "nodeType": "StructuredDocumentation",
                    "src": "1749:259:17",
                    "text": "@notice Converts a bytes64 struct to an address.\n @param b64 The bytes64 struct to convert.\n @return The address contained in the bytes64 struct's lower bytes32.\n @dev The upper bytes32 value is ignored. This operation cannot fail."
                  },
                  "id": 2503,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "bytes64ToAddress",
                  "nameLocation": "2023:16:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2485,
                        "mutability": "mutable",
                        "name": "b64",
                        "nameLocation": "2065:3:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2503,
                        "src": "2050:18:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                          "typeString": "struct bytes64"
                        },
                        "typeName": {
                          "id": 2484,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2483,
                            "name": "bytes64",
                            "nameLocations": [
                              "2050:7:17"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2431,
                            "src": "2050:7:17"
                          },
                          "referencedDeclaration": 2431,
                          "src": "2050:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                            "typeString": "struct bytes64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2039:36:17"
                  },
                  "returnParameters": {
                    "id": 2489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2488,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2503,
                        "src": "2099:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2099:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2098:9:17"
                  },
                  "scope": 2504,
                  "src": "2014:156:17",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2505,
              "src": "1290:883:17",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "35:2140:17"
        },
        "id": 17
      },
      "contracts/lib/libraries/Errors.sol": {
        "ast": {
          "absolutePath": "contracts/lib/libraries/Errors.sol",
          "exportedSymbols": {
            "Errors": [
              2574
            ]
          },
          "id": 2575,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2506,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".23"
              ],
              "nodeType": "PragmaDirective",
              "src": "35:24:18"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Errors",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2507,
                "nodeType": "StructuredDocumentation",
                "src": "63:92:18",
                "text": "@title Errors\n @notice Defines all error messages used in the EquitoApp contracts."
              },
              "fullyImplemented": true,
              "id": 2574,
              "linearizedBaseContracts": [
                2574
              ],
              "name": "Errors",
              "nameLocation": "163:6:18",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2508,
                    "nodeType": "StructuredDocumentation",
                    "src": "177:126:18",
                    "text": "@notice Thrown when the router address is invalid.\n @param router The address of the router that caused the error."
                  },
                  "errorSelector": "d7f73334",
                  "id": 2512,
                  "name": "InvalidRouter",
                  "nameLocation": "315:13:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2511,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2510,
                        "mutability": "mutable",
                        "name": "router",
                        "nameLocation": "337:6:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2512,
                        "src": "329:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2509,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "329:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "328:16:18"
                  },
                  "src": "309:36:18"
                },
                {
                  "documentation": {
                    "id": 2513,
                    "nodeType": "StructuredDocumentation",
                    "src": "353:51:18",
                    "text": "@notice Thrown when the router address is zero."
                  },
                  "errorSelector": "50082683",
                  "id": 2515,
                  "name": "RouterAddressCannotBeZero",
                  "nameLocation": "416:25:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2514,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "441:2:18"
                  },
                  "src": "410:34:18"
                },
                {
                  "documentation": {
                    "id": 2516,
                    "nodeType": "StructuredDocumentation",
                    "src": "452:68:18",
                    "text": "@notice Thrown when the proof for verifying messages is invalid."
                  },
                  "errorSelector": "b64d2f31",
                  "id": 2518,
                  "name": "InvalidMessagesProof",
                  "nameLocation": "532:20:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2517,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "552:2:18"
                  },
                  "src": "526:29:18"
                },
                {
                  "documentation": {
                    "id": 2519,
                    "nodeType": "StructuredDocumentation",
                    "src": "563:69:18",
                    "text": "@notice Thrown when the verifier index provided is out of bounds."
                  },
                  "errorSelector": "04f7d7f1",
                  "id": 2521,
                  "name": "InvalidVerifierIndex",
                  "nameLocation": "644:20:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2520,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "664:2:18"
                  },
                  "src": "638:29:18"
                },
                {
                  "documentation": {
                    "id": 2522,
                    "nodeType": "StructuredDocumentation",
                    "src": "675:89:18",
                    "text": "@notice Thrown when the initial verifier address provided in the constructor is zero."
                  },
                  "errorSelector": "e6ecef12",
                  "id": 2524,
                  "name": "InitialVerifierZeroAddress",
                  "nameLocation": "776:26:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2523,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "802:2:18"
                  },
                  "src": "770:35:18"
                },
                {
                  "documentation": {
                    "id": 2525,
                    "nodeType": "StructuredDocumentation",
                    "src": "813:58:18",
                    "text": "@notice Thrown when the lengths of arrays are invalid."
                  },
                  "errorSelector": "947d5a84",
                  "id": 2527,
                  "name": "InvalidLength",
                  "nameLocation": "883:13:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2526,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "896:2:18"
                  },
                  "src": "877:22:18"
                },
                {
                  "documentation": {
                    "id": 2528,
                    "nodeType": "StructuredDocumentation",
                    "src": "907:59:18",
                    "text": "@notice Thrown when the sender of a message is invalid."
                  },
                  "errorSelector": "7fee69a1",
                  "id": 2530,
                  "name": "InvalidMessageSender",
                  "nameLocation": "978:20:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2529,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "998:2:18"
                  },
                  "src": "972:29:18"
                },
                {
                  "documentation": {
                    "id": 2531,
                    "nodeType": "StructuredDocumentation",
                    "src": "1009:84:18",
                    "text": "@notice Thrown when the provided fee is insufficient to cover the required cost."
                  },
                  "errorSelector": "025dbdd4",
                  "id": 2533,
                  "name": "InsufficientFee",
                  "nameLocation": "1105:15:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2532,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1120:2:18"
                  },
                  "src": "1099:24:18"
                },
                {
                  "documentation": {
                    "id": 2534,
                    "nodeType": "StructuredDocumentation",
                    "src": "1131:86:18",
                    "text": "@notice Thrown when the amount of ether sent with the transaction is insufficient."
                  },
                  "errorSelector": "a5fb6be9",
                  "id": 2536,
                  "name": "InsufficientValueSent",
                  "nameLocation": "1229:21:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2535,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1250:2:18"
                  },
                  "src": "1223:30:18"
                },
                {
                  "documentation": {
                    "id": 2537,
                    "nodeType": "StructuredDocumentation",
                    "src": "1261:67:18",
                    "text": "@notice Thrown when the provided cost is not greater than zero."
                  },
                  "errorSelector": "bf908dba",
                  "id": 2539,
                  "name": "CostMustBeGreaterThanZero",
                  "nameLocation": "1340:25:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1365:2:18"
                  },
                  "src": "1334:34:18"
                },
                {
                  "documentation": {
                    "id": 2540,
                    "nodeType": "StructuredDocumentation",
                    "src": "1376:85:18",
                    "text": "@notice Thrown when the token price retrieved from the oracle is invalid or zero."
                  },
                  "errorSelector": "bcf09f96",
                  "id": 2542,
                  "name": "InvalidTokenPriceFromOracle",
                  "nameLocation": "1473:27:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2541,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1500:2:18"
                  },
                  "src": "1467:36:18"
                },
                {
                  "documentation": {
                    "id": 2543,
                    "nodeType": "StructuredDocumentation",
                    "src": "1511:80:18",
                    "text": "@notice Thrown when a message is received from an invalid sovereign account."
                  },
                  "errorSelector": "b778be3a",
                  "id": 2545,
                  "name": "InvalidSovereign",
                  "nameLocation": "1603:16:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2544,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1619:2:18"
                  },
                  "src": "1597:25:18"
                },
                {
                  "documentation": {
                    "id": 2546,
                    "nodeType": "StructuredDocumentation",
                    "src": "1630:89:18",
                    "text": "@notice Thrown when an invalid operation code is encountered in the received message."
                  },
                  "errorSelector": "398d4d32",
                  "id": 2548,
                  "name": "InvalidOperation",
                  "nameLocation": "1731:16:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2547,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1747:2:18"
                  },
                  "src": "1725:25:18"
                },
                {
                  "documentation": {
                    "id": 2549,
                    "nodeType": "StructuredDocumentation",
                    "src": "1758:74:18",
                    "text": "@notice Thrown when an invalid liquidity provider address is provided."
                  },
                  "errorSelector": "02d12165",
                  "id": 2551,
                  "name": "InvalidLiquidityProvider",
                  "nameLocation": "1844:24:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2550,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1868:2:18"
                  },
                  "src": "1838:33:18"
                },
                {
                  "documentation": {
                    "id": 2552,
                    "nodeType": "StructuredDocumentation",
                    "src": "1879:75:18",
                    "text": "@notice Thrown when a transfer of fees to the liquidity provider fails."
                  },
                  "errorSelector": "90b8ec18",
                  "id": 2554,
                  "name": "TransferFailed",
                  "nameLocation": "1966:14:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2553,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1980:2:18"
                  },
                  "src": "1960:23:18"
                },
                {
                  "documentation": {
                    "id": 2555,
                    "nodeType": "StructuredDocumentation",
                    "src": "1991:77:18",
                    "text": "@notice Thrown when there is a mismatch in session IDs during validation."
                  },
                  "errorSelector": "ce2a8c60",
                  "id": 2557,
                  "name": "SessionIdMismatch",
                  "nameLocation": "2080:17:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2556,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2097:2:18"
                  },
                  "src": "2074:26:18"
                },
                {
                  "documentation": {
                    "id": 2558,
                    "nodeType": "StructuredDocumentation",
                    "src": "2108:84:18",
                    "text": "@notice Thrown when attempting to set the router, but the router is already set."
                  },
                  "errorSelector": "a9112be0",
                  "id": 2560,
                  "name": "RouterAlreadySet",
                  "nameLocation": "2204:16:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2559,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2220:2:18"
                  },
                  "src": "2198:25:18"
                },
                {
                  "documentation": {
                    "id": 2561,
                    "nodeType": "StructuredDocumentation",
                    "src": "2231:64:18",
                    "text": "@notice Thrown when an invalid sender is calling a function."
                  },
                  "errorSelector": "4c14f64c",
                  "id": 2565,
                  "name": "InvalidSender",
                  "nameLocation": "2307:13:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2563,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2329:6:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2565,
                        "src": "2321:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2562,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2321:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2320:16:18"
                  },
                  "src": "2301:36:18"
                },
                {
                  "documentation": {
                    "id": 2566,
                    "nodeType": "StructuredDocumentation",
                    "src": "2345:83:18",
                    "text": "@notice Thrown when the provided session ID does not match the current session."
                  },
                  "errorSelector": "2e4937ae",
                  "id": 2568,
                  "name": "InvalidSessionId",
                  "nameLocation": "2440:16:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2567,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2456:2:18"
                  },
                  "src": "2434:25:18"
                },
                {
                  "documentation": {
                    "id": 2569,
                    "nodeType": "StructuredDocumentation",
                    "src": "2467:181:18",
                    "text": "@notice Thrown when a Peer address is not found in the mapping, given a chain selector.\n @param chainSelector The chain selector for which the peer address is requested."
                  },
                  "errorSelector": "78d0dbfc",
                  "id": 2573,
                  "name": "InvalidPeer",
                  "nameLocation": "2660:11:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2571,
                        "mutability": "mutable",
                        "name": "chainSelector",
                        "nameLocation": "2680:13:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2573,
                        "src": "2672:21:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2570,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2672:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2671:23:18"
                  },
                  "src": "2654:41:18"
                }
              ],
              "scope": 2575,
              "src": "155:2543:18",
              "usedErrors": [
                2512,
                2515,
                2518,
                2521,
                2524,
                2527,
                2530,
                2533,
                2536,
                2539,
                2542,
                2545,
                2548,
                2551,
                2554,
                2557,
                2560,
                2565,
                2568,
                2573
              ],
              "usedEvents": []
            }
          ],
          "src": "35:2665:18"
        },
        "id": 18
      },
      "contracts/routers/BasicRouter.sol": {
        "ast": {
          "absolutePath": "contracts/routers/BasicRouter.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "BasicRouter": [
              2926
            ],
            "IBasicRouter": [
              3017
            ],
            "IERC20": [
              1256
            ],
            "SafeERC20": [
              1608
            ]
          },
          "id": 2927,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2576,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:19"
            },
            {
              "absolutePath": "contracts/routers/interfaces/IBasicRouter.sol",
              "file": "./interfaces/IBasicRouter.sol",
              "id": 2578,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2927,
              "sourceUnit": 3018,
              "src": "62:59:19",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2577,
                    "name": "IBasicRouter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3017,
                    "src": "70:12:19",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2580,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2927,
              "sourceUnit": 1257,
              "src": "123:70:19",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2579,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
                    "src": "131:6:19",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 2582,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2927,
              "sourceUnit": 296,
              "src": "195:79:19",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2581,
                    "name": "AccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 295,
                    "src": "203:13:19",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 2584,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2927,
              "sourceUnit": 1609,
              "src": "276:82:19",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2583,
                    "name": "SafeERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1608,
                    "src": "284:9:19",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2585,
                    "name": "IBasicRouter",
                    "nameLocations": [
                      "386:12:19"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3017,
                    "src": "386:12:19"
                  },
                  "id": 2586,
                  "nodeType": "InheritanceSpecifier",
                  "src": "386:12:19"
                },
                {
                  "baseName": {
                    "id": 2587,
                    "name": "AccessControl",
                    "nameLocations": [
                      "400:13:19"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "400:13:19"
                  },
                  "id": 2588,
                  "nodeType": "InheritanceSpecifier",
                  "src": "400:13:19"
                }
              ],
              "canonicalName": "BasicRouter",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2926,
              "linearizedBaseContracts": [
                2926,
                295,
                2032,
                2044,
                378,
                1891,
                3017
              ],
              "name": "BasicRouter",
              "nameLocation": "371:11:19",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 2592,
                  "libraryName": {
                    "id": 2589,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "427:9:19"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1608,
                    "src": "427:9:19"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "421:27:19",
                  "typeName": {
                    "id": 2591,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2590,
                      "name": "IERC20",
                      "nameLocations": [
                        "441:6:19"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1256,
                      "src": "441:6:19"
                    },
                    "referencedDeclaration": 1256,
                    "src": "441:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1256",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "constant": true,
                  "id": 2595,
                  "mutability": "constant",
                  "name": "WETH",
                  "nameLocation": "481:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2926,
                  "src": "456:74:19",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
                    "id": 2594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "488:42:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "19089a0d",
                  "id": 2599,
                  "mutability": "mutable",
                  "name": "tokenPricesUSD",
                  "nameLocation": "652:14:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2926,
                  "src": "617:49:19",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 2598,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2596,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "625:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "617:27:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2597,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "636:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2608,
                    "nodeType": "Block",
                    "src": "689:63:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2603,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "711:18:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2604,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "731:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "731:12:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2602,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "700:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 2606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "700:44:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2607,
                        "nodeType": "ExpressionStatement",
                        "src": "700:44:19"
                      }
                    ]
                  },
                  "id": 2609,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2600,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "686:2:19"
                  },
                  "returnParameters": {
                    "id": 2601,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "689:0:19"
                  },
                  "scope": 2926,
                  "src": "675:77:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2965
                  ],
                  "body": {
                    "id": 2617,
                    "nodeType": "Block",
                    "src": "817:30:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 2615,
                          "name": "WETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2595,
                          "src": "835:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2614,
                        "id": 2616,
                        "nodeType": "Return",
                        "src": "828:11:19"
                      }
                    ]
                  },
                  "functionSelector": "3fc8cef3",
                  "id": 2618,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "weth",
                  "nameLocation": "769:4:19",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2611,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "790:8:19"
                  },
                  "parameters": {
                    "id": 2610,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "773:2:19"
                  },
                  "returnParameters": {
                    "id": 2614,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2613,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2618,
                        "src": "808:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2612,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "807:9:19"
                  },
                  "scope": 2926,
                  "src": "760:87:19",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2972
                  ],
                  "body": {
                    "id": 2635,
                    "nodeType": "Block",
                    "src": "1060:51:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 2633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2629,
                              "name": "tokenPricesUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2599,
                              "src": "1071:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2631,
                            "indexExpression": {
                              "id": 2630,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2620,
                              "src": "1086:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1071:21:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2632,
                            "name": "priceUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2622,
                            "src": "1095:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1071:32:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2634,
                        "nodeType": "ExpressionStatement",
                        "src": "1071:32:19"
                      }
                    ]
                  },
                  "functionSelector": "431f63c9",
                  "id": 2636,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2626,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1040:18:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 2627,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2625,
                        "name": "onlyRole",
                        "nameLocations": [
                          "1031:8:19"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "1031:8:19"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1031:28:19"
                    }
                  ],
                  "name": "setTokenPrice",
                  "nameLocation": "941:13:19",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2624,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1022:8:19"
                  },
                  "parameters": {
                    "id": 2623,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2620,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "973:5:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2636,
                        "src": "965:13:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2619,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "965:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2622,
                        "mutability": "mutable",
                        "name": "priceUSD",
                        "nameLocation": "997:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2636,
                        "src": "989:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2621,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "989:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "954:58:19"
                  },
                  "returnParameters": {
                    "id": 2628,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1060:0:19"
                  },
                  "scope": 2926,
                  "src": "932:179:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2983
                  ],
                  "body": {
                    "id": 2677,
                    "nodeType": "Block",
                    "src": "1311:383:19",
                    "statements": [
                      {
                        "assignments": [
                          2648
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2648,
                            "mutability": "mutable",
                            "name": "priceIn",
                            "nameLocation": "1330:7:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 2677,
                            "src": "1322:15:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2647,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1322:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2652,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2649,
                            "name": "tokenPricesUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2599,
                            "src": "1340:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2651,
                          "indexExpression": {
                            "id": 2650,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2638,
                            "src": "1355:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1340:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1322:41:19"
                      },
                      {
                        "assignments": [
                          2654
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2654,
                            "mutability": "mutable",
                            "name": "priceOut",
                            "nameLocation": "1409:8:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 2677,
                            "src": "1401:16:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2653,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1401:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2658,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2655,
                            "name": "tokenPricesUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2599,
                            "src": "1420:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2657,
                          "indexExpression": {
                            "id": 2656,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2640,
                            "src": "1435:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1420:24:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1401:43:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2660,
                                  "name": "priceIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2648,
                                  "src": "1493:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2661,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1503:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1493:11:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2663,
                                  "name": "priceOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2654,
                                  "src": "1508:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2664,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1519:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1508:12:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1493:27:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e207072696365206e6f7420736574",
                              "id": 2667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1522:21:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9b321594b4a21254564f651214393981e7d9d9e69349e00c27b9dd240484f7dd",
                                "typeString": "literal_string \"Token price not set\""
                              },
                              "value": "Token price not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9b321594b4a21254564f651214393981e7d9d9e69349e00c27b9dd240484f7dd",
                                "typeString": "literal_string \"Token price not set\""
                              }
                            ],
                            "id": 2659,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1485:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1485:59:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2669,
                        "nodeType": "ExpressionStatement",
                        "src": "1485:59:19"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2670,
                                  "name": "amountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2642,
                                  "src": "1656:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2671,
                                  "name": "priceIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2648,
                                  "src": "1667:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1656:18:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2673,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1655:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2674,
                            "name": "priceOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2654,
                            "src": "1678:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1655:31:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2646,
                        "id": 2676,
                        "nodeType": "Return",
                        "src": "1648:38:19"
                      }
                    ]
                  },
                  "functionSelector": "4aa06652",
                  "id": 2678,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOut",
                  "nameLocation": "1181:12:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2643,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2638,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "1212:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2678,
                        "src": "1204:15:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2637,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1204:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2640,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "1238:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2678,
                        "src": "1230:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2639,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1230:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2642,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "1265:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2678,
                        "src": "1257:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2641,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1257:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1193:87:19"
                  },
                  "returnParameters": {
                    "id": 2646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2645,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2678,
                        "src": "1302:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2644,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1302:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1301:9:19"
                  },
                  "scope": 2926,
                  "src": "1172:522:19",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2996
                  ],
                  "body": {
                    "id": 2747,
                    "nodeType": "Block",
                    "src": "1935:643:19",
                    "statements": [
                      {
                        "assignments": [
                          2693
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2693,
                            "mutability": "mutable",
                            "name": "amountOut",
                            "nameLocation": "1954:9:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 2747,
                            "src": "1946:17:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2692,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1946:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2699,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2695,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2680,
                              "src": "1979:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2696,
                              "name": "tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2682,
                              "src": "1988:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2697,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2684,
                              "src": "1998:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2694,
                            "name": "getAmountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2678,
                            "src": "1966:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 2698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1966:41:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1946:61:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2704,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "2106:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2106:12:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2708,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2128:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BasicRouter_$2926",
                                    "typeString": "contract BasicRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BasicRouter_$2926",
                                    "typeString": "contract BasicRouter"
                                  }
                                ],
                                "id": 2707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2120:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2706,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2120:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2120:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2710,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2684,
                              "src": "2135:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2701,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2680,
                                  "src": "2080:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2700,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1256,
                                "src": "2073:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2073:15:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2089:16:19",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1395,
                            "src": "2073:32:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 2711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2073:71:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2712,
                        "nodeType": "ExpressionStatement",
                        "src": "2073:71:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2720,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "2277:4:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BasicRouter_$2926",
                                          "typeString": "contract BasicRouter"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BasicRouter_$2926",
                                          "typeString": "contract BasicRouter"
                                        }
                                      ],
                                      "id": 2719,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2269:7:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2718,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2269:7:19",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2721,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2269:13:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2715,
                                        "name": "tokenOut",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2682,
                                        "src": "2249:8:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2714,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1256,
                                      "src": "2242:6:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2716,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2242:16:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1256",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2259:9:19",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1213,
                                  "src": "2242:26:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 2722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2242:41:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2723,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2693,
                                "src": "2287:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2242:54:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e74206f757470757420746f6b656e2062616c616e6365",
                              "id": 2725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2311:35:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0a7e7949224c8357dec3b9a6394846f44f24f76c1ad254c8753eee79d1412368",
                                "typeString": "literal_string \"Insufficient output token balance\""
                              },
                              "value": "Insufficient output token balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0a7e7949224c8357dec3b9a6394846f44f24f76c1ad254c8753eee79d1412368",
                                "typeString": "literal_string \"Insufficient output token balance\""
                              }
                            ],
                            "id": 2713,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2220:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2220:137:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2727,
                        "nodeType": "ExpressionStatement",
                        "src": "2220:137:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2732,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2686,
                              "src": "2446:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2733,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2693,
                              "src": "2450:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2729,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2682,
                                  "src": "2423:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2728,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1256,
                                "src": "2416:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2416:16:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2433:12:19",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1368,
                            "src": "2416:29:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2416:44:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2735,
                        "nodeType": "ExpressionStatement",
                        "src": "2416:44:19"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2737,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "2488:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2488:12:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2739,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2680,
                              "src": "2502:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2740,
                              "name": "tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2682,
                              "src": "2511:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2741,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2684,
                              "src": "2521:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2742,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2693,
                              "src": "2531:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2736,
                            "name": "TokenSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2940,
                            "src": "2478:9:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256,uint256)"
                            }
                          },
                          "id": 2743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2478:63:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2744,
                        "nodeType": "EmitStatement",
                        "src": "2473:68:19"
                      },
                      {
                        "expression": {
                          "id": 2745,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2693,
                          "src": "2561:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2691,
                        "id": 2746,
                        "nodeType": "Return",
                        "src": "2554:16:19"
                      }
                    ]
                  },
                  "functionSelector": "3f3f80c3",
                  "id": 2748,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokenToToken",
                  "nameLocation": "1774:16:19",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2688,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1908:8:19"
                  },
                  "parameters": {
                    "id": 2687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2680,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "1809:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2748,
                        "src": "1801:15:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2679,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1801:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2682,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "1835:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2748,
                        "src": "1827:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2681,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1827:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2684,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "1862:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2748,
                        "src": "1854:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2683,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1854:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2686,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1889:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2748,
                        "src": "1881:10:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1881:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1790:108:19"
                  },
                  "returnParameters": {
                    "id": 2691,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2690,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2748,
                        "src": "1926:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2689,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1926:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1925:9:19"
                  },
                  "scope": 2926,
                  "src": "1765:813:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3005
                  ],
                  "body": {
                    "id": 2833,
                    "nodeType": "Block",
                    "src": "2760:844:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2759,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2779:3:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2783:5:19",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "2779:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2791:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2779:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d7573742073656e642045544820746f2073776170",
                              "id": 2763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2794:23:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b3d908f7580ae3fbe7f936e59337d6cb5e08a1cdca28469c58e566206c4e0751",
                                "typeString": "literal_string \"Must send ETH to swap\""
                              },
                              "value": "Must send ETH to swap"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b3d908f7580ae3fbe7f936e59337d6cb5e08a1cdca28469c58e566206c4e0751",
                                "typeString": "literal_string \"Must send ETH to swap\""
                              }
                            ],
                            "id": 2758,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2771:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2771:47:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2765,
                        "nodeType": "ExpressionStatement",
                        "src": "2771:47:19"
                      },
                      {
                        "assignments": [
                          2767
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2767,
                            "mutability": "mutable",
                            "name": "ethPriceUSD",
                            "nameLocation": "2839:11:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 2833,
                            "src": "2831:19:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2766,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2831:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2771,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2768,
                            "name": "tokenPricesUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2599,
                            "src": "2853:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2770,
                          "indexExpression": {
                            "id": 2769,
                            "name": "WETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2595,
                            "src": "2868:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2853:20:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2831:42:19"
                      },
                      {
                        "assignments": [
                          2773
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2773,
                            "mutability": "mutable",
                            "name": "tokenPriceUSD",
                            "nameLocation": "2917:13:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 2833,
                            "src": "2909:21:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2772,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2909:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2777,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2774,
                            "name": "tokenPricesUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2599,
                            "src": "2933:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2776,
                          "indexExpression": {
                            "id": 2775,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2750,
                            "src": "2948:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2933:24:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2909:48:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2779,
                                  "name": "ethPriceUSD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2767,
                                  "src": "3020:11:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2780,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3034:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3020:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2782,
                                  "name": "tokenPriceUSD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2773,
                                  "src": "3039:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3055:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3039:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3020:36:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455448206f7220546f6b656e207072696365206e6f7420736574",
                              "id": 2786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3071:28:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_094d25dbc93c8e9a38bfb641bcaac560facec86971aecf58fac1c76e1e29828d",
                                "typeString": "literal_string \"ETH or Token price not set\""
                              },
                              "value": "ETH or Token price not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_094d25dbc93c8e9a38bfb641bcaac560facec86971aecf58fac1c76e1e29828d",
                                "typeString": "literal_string \"ETH or Token price not set\""
                              }
                            ],
                            "id": 2778,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2998:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2998:112:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2788,
                        "nodeType": "ExpressionStatement",
                        "src": "2998:112:19"
                      },
                      {
                        "assignments": [
                          2790
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2790,
                            "mutability": "mutable",
                            "name": "amountOut",
                            "nameLocation": "3194:9:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 2833,
                            "src": "3186:17:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2789,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3186:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2798,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2791,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3207:3:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3211:5:19",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "3207:9:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2793,
                                  "name": "ethPriceUSD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2767,
                                  "src": "3219:11:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3207:23:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2795,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3206:25:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2796,
                            "name": "tokenPriceUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2773,
                            "src": "3234:13:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3206:41:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3186:61:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2806,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3317:4:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BasicRouter_$2926",
                                          "typeString": "contract BasicRouter"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BasicRouter_$2926",
                                          "typeString": "contract BasicRouter"
                                        }
                                      ],
                                      "id": 2805,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3309:7:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2804,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3309:7:19",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2807,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3309:13:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2801,
                                        "name": "tokenOut",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2750,
                                        "src": "3289:8:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 2800,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1256,
                                      "src": "3282:6:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 2802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3282:16:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1256",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2803,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3299:9:19",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1213,
                                  "src": "3282:26:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 2808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3282:41:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2809,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2790,
                                "src": "3327:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3282:54:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420746f6b656e2062616c616e6365",
                              "id": 2811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3351:28:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
                                "typeString": "literal_string \"Insufficient token balance\""
                              },
                              "value": "Insufficient token balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a7e5e4d46ea524835ea36125140e247d59a2bce707f2094f88605dba8157d192",
                                "typeString": "literal_string \"Insufficient token balance\""
                              }
                            ],
                            "id": 2799,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3260:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3260:130:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2813,
                        "nodeType": "ExpressionStatement",
                        "src": "3260:130:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2818,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2752,
                              "src": "3475:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2819,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2790,
                              "src": "3479:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2815,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2750,
                                  "src": "3452:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2814,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1256,
                                "src": "3445:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3445:16:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3462:12:19",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1368,
                            "src": "3445:29:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3445:44:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2821,
                        "nodeType": "ExpressionStatement",
                        "src": "3445:44:19"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2823,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "3522:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3522:12:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 2825,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3536:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3540:5:19",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "3536:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2827,
                              "name": "tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2750,
                              "src": "3547:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2828,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2790,
                              "src": "3557:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2822,
                            "name": "EthToTokenSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2950,
                            "src": "3507:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256)"
                            }
                          },
                          "id": 2829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3507:60:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2830,
                        "nodeType": "EmitStatement",
                        "src": "3502:65:19"
                      },
                      {
                        "expression": {
                          "id": 2831,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2790,
                          "src": "3587:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2757,
                        "id": 2832,
                        "nodeType": "Return",
                        "src": "3580:16:19"
                      }
                    ]
                  },
                  "functionSelector": "bed2d5e8",
                  "id": 2834,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapETHToTokens",
                  "nameLocation": "2645:15:19",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2754,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2733:8:19"
                  },
                  "parameters": {
                    "id": 2753,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2750,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "2679:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2834,
                        "src": "2671:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2749,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2671:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2752,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2706:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2834,
                        "src": "2698:10:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2751,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2698:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2660:55:19"
                  },
                  "returnParameters": {
                    "id": 2757,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2756,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2834,
                        "src": "2751:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2755,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2751:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2750:9:19"
                  },
                  "scope": 2926,
                  "src": "2636:968:19",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3016
                  ],
                  "body": {
                    "id": 2920,
                    "nodeType": "Block",
                    "src": "3804:828:19",
                    "statements": [
                      {
                        "assignments": [
                          2847
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2847,
                            "mutability": "mutable",
                            "name": "ethPriceUSD",
                            "nameLocation": "3823:11:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 2920,
                            "src": "3815:19:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2846,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3815:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2851,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2848,
                            "name": "tokenPricesUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2599,
                            "src": "3837:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2850,
                          "indexExpression": {
                            "id": 2849,
                            "name": "WETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2595,
                            "src": "3852:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3837:20:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3815:42:19"
                      },
                      {
                        "assignments": [
                          2853
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2853,
                            "mutability": "mutable",
                            "name": "tokenPriceUSD",
                            "nameLocation": "3901:13:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 2920,
                            "src": "3893:21:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2852,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3893:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2857,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2854,
                            "name": "tokenPricesUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2599,
                            "src": "3917:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2856,
                          "indexExpression": {
                            "id": 2855,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2836,
                            "src": "3932:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3917:23:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3893:47:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2859,
                                  "name": "ethPriceUSD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2847,
                                  "src": "4002:11:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2860,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4016:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4002:15:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2862,
                                  "name": "tokenPriceUSD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2853,
                                  "src": "4021:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4037:1:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4021:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4002:36:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455448206f7220546f6b656e207072696365206e6f7420736574",
                              "id": 2866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4053:28:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_094d25dbc93c8e9a38bfb641bcaac560facec86971aecf58fac1c76e1e29828d",
                                "typeString": "literal_string \"ETH or Token price not set\""
                              },
                              "value": "ETH or Token price not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_094d25dbc93c8e9a38bfb641bcaac560facec86971aecf58fac1c76e1e29828d",
                                "typeString": "literal_string \"ETH or Token price not set\""
                              }
                            ],
                            "id": 2858,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3980:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3980:112:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2868,
                        "nodeType": "ExpressionStatement",
                        "src": "3980:112:19"
                      },
                      {
                        "assignments": [
                          2870
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2870,
                            "mutability": "mutable",
                            "name": "amountOut",
                            "nameLocation": "4173:9:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 2920,
                            "src": "4165:17:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2869,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4165:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2877,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2871,
                                  "name": "amountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2838,
                                  "src": "4186:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2872,
                                  "name": "tokenPriceUSD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2853,
                                  "src": "4197:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4186:24:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2874,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4185:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2875,
                            "name": "ethPriceUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2847,
                            "src": "4214:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4185:40:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4165:60:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2882,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "4320:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4320:12:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2886,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4342:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BasicRouter_$2926",
                                    "typeString": "contract BasicRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BasicRouter_$2926",
                                    "typeString": "contract BasicRouter"
                                  }
                                ],
                                "id": 2885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4334:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2884,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4334:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4334:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2888,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2838,
                              "src": "4349:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2879,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2836,
                                  "src": "4298:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2878,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1256,
                                "src": "4291:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4291:15:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4307:12:19",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1255,
                            "src": "4291:28:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4291:67:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2890,
                        "nodeType": "ExpressionStatement",
                        "src": "4291:67:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2894,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4387:4:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BasicRouter_$2926",
                                        "typeString": "contract BasicRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BasicRouter_$2926",
                                        "typeString": "contract BasicRouter"
                                      }
                                    ],
                                    "id": 2893,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4379:7:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2892,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4379:7:19",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2895,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4379:13:19",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 2896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4393:7:19",
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "4379:21:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2897,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2870,
                                "src": "4404:9:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4379:34:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e74204554482062616c616e6365",
                              "id": 2899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4415:26:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e",
                                "typeString": "literal_string \"Insufficient ETH balance\""
                              },
                              "value": "Insufficient ETH balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70ee5ddf30f34aa4e2eb2bd0652d4a9466378abefb991f116e502fdb578d384e",
                                "typeString": "literal_string \"Insufficient ETH balance\""
                              }
                            ],
                            "id": 2891,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4371:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4371:71:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2901,
                        "nodeType": "ExpressionStatement",
                        "src": "4371:71:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2907,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2870,
                              "src": "4509:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2904,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2840,
                                  "src": "4496:2:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4488:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 2902,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4488:8:19",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4488:11:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4500:8:19",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "4488:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4488:31:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2909,
                        "nodeType": "ExpressionStatement",
                        "src": "4488:31:19"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2911,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "4552:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4552:12:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2913,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2836,
                              "src": "4566:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2914,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2838,
                              "src": "4575:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2915,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2870,
                              "src": "4585:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2910,
                            "name": "TokenToEthSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2960,
                            "src": "4537:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256)"
                            }
                          },
                          "id": 2916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4537:58:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2917,
                        "nodeType": "EmitStatement",
                        "src": "4532:63:19"
                      },
                      {
                        "expression": {
                          "id": 2918,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2870,
                          "src": "4615:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2845,
                        "id": 2919,
                        "nodeType": "Return",
                        "src": "4608:16:19"
                      }
                    ]
                  },
                  "functionSelector": "796449dd",
                  "id": 2921,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensToETH",
                  "nameLocation": "3671:15:19",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2842,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3777:8:19"
                  },
                  "parameters": {
                    "id": 2841,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2836,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "3705:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2921,
                        "src": "3697:15:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2835,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3697:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2838,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "3731:8:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2921,
                        "src": "3723:16:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2837,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3723:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2840,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3758:2:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2921,
                        "src": "3750:10:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2839,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3750:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3686:81:19"
                  },
                  "returnParameters": {
                    "id": 2845,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2844,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2921,
                        "src": "3795:7:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2843,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3795:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3794:9:19"
                  },
                  "scope": 2926,
                  "src": "3662:970:19",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2924,
                    "nodeType": "Block",
                    "src": "4708:2:19",
                    "statements": []
                  },
                  "id": 2925,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2922,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4688:2:19"
                  },
                  "returnParameters": {
                    "id": 2923,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4708:0:19"
                  },
                  "scope": 2926,
                  "src": "4681:29:19",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2927,
              "src": "362:4351:19",
              "usedErrors": [
                305,
                308,
                1335,
                1616,
                1621,
                1624
              ],
              "usedEvents": [
                317,
                326,
                335,
                2940,
                2950,
                2960
              ]
            }
          ],
          "src": "33:4682:19"
        },
        "id": 19
      },
      "contracts/routers/interfaces/IBasicRouter.sol": {
        "ast": {
          "absolutePath": "contracts/routers/interfaces/IBasicRouter.sol",
          "exportedSymbols": {
            "IBasicRouter": [
              3017
            ]
          },
          "id": 3018,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2928,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:20"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IBasicRouter",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 3017,
              "linearizedBaseContracts": [
                3017
              ],
              "name": "IBasicRouter",
              "nameLocation": "72:12:20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "2e05fc618ccc3aec7d710f137a131e0ab5b31af09fc6a0edb726dcd94b2e478f",
                  "id": 2940,
                  "name": "TokenSwap",
                  "nameLocation": "113:9:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2939,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2930,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "149:4:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2940,
                        "src": "133:20:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2929,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "133:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2932,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "180:7:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2940,
                        "src": "164:23:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2931,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "164:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2934,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "214:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2940,
                        "src": "198:24:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2933,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "198:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2936,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "241:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2940,
                        "src": "233:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2935,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "233:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2938,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "268:9:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2940,
                        "src": "260:17:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2937,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "260:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "122:162:20"
                  },
                  "src": "107:178:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "59a6c2d15a2ae3486483464c924ab1cb80dcfd000530f15c1f89f25f22e69853",
                  "id": 2950,
                  "name": "EthToTokenSwap",
                  "nameLocation": "297:14:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2949,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2942,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "338:4:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2950,
                        "src": "322:20:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2941,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "322:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2944,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "361:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2950,
                        "src": "353:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2943,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "353:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2946,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "396:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2950,
                        "src": "380:24:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2945,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "380:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2948,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "423:9:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2950,
                        "src": "415:17:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2947,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "415:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "311:128:20"
                  },
                  "src": "291:149:20"
                },
                {
                  "anonymous": false,
                  "eventSelector": "0de0de7715272cc074c6aa787cb38a0922f4f1eb76660f2ec9a2973a1e23ff86",
                  "id": 2960,
                  "name": "TokenToEthSwap",
                  "nameLocation": "452:14:20",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2959,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2952,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "493:4:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2960,
                        "src": "477:20:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2951,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "477:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2954,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "524:7:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2960,
                        "src": "508:23:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2953,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "508:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2956,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "550:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2960,
                        "src": "542:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2955,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "542:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2958,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "577:9:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2960,
                        "src": "569:17:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2957,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "569:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "466:127:20"
                  },
                  "src": "446:148:20"
                },
                {
                  "functionSelector": "3fc8cef3",
                  "id": 2965,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "weth",
                  "nameLocation": "611:4:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2961,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "615:2:20"
                  },
                  "returnParameters": {
                    "id": 2964,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2963,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2965,
                        "src": "641:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2962,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "641:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "640:9:20"
                  },
                  "scope": 3017,
                  "src": "602:48:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "431f63c9",
                  "id": 2972,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setTokenPrice",
                  "nameLocation": "744:13:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2970,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2967,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "766:5:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2972,
                        "src": "758:13:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2966,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "758:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2969,
                        "mutability": "mutable",
                        "name": "priceUSD",
                        "nameLocation": "781:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2972,
                        "src": "773:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2968,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "773:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "757:33:20"
                  },
                  "returnParameters": {
                    "id": 2971,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "799:0:20"
                  },
                  "scope": 3017,
                  "src": "735:65:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4aa06652",
                  "id": 2983,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAmountOut",
                  "nameLocation": "876:12:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2979,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2974,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "907:7:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2983,
                        "src": "899:15:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2973,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "899:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2976,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "933:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2983,
                        "src": "925:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2975,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "925:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2978,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "960:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2983,
                        "src": "952:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2977,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "952:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "888:87:20"
                  },
                  "returnParameters": {
                    "id": 2982,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2981,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2983,
                        "src": "999:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2980,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "999:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "998:9:20"
                  },
                  "scope": 3017,
                  "src": "867:141:20",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3f3f80c3",
                  "id": 2996,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokenToToken",
                  "nameLocation": "1088:16:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2992,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2985,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "1123:7:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2996,
                        "src": "1115:15:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2984,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1115:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2987,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "1149:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2996,
                        "src": "1141:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2986,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1141:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2989,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "1176:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2996,
                        "src": "1168:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2988,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1168:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2991,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1203:2:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2996,
                        "src": "1195:10:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2990,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1195:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1104:108:20"
                  },
                  "returnParameters": {
                    "id": 2995,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2994,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2996,
                        "src": "1231:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2993,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1231:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1230:9:20"
                  },
                  "scope": 3017,
                  "src": "1079:161:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bed2d5e8",
                  "id": 3005,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapETHToTokens",
                  "nameLocation": "1307:15:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3001,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2998,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "1341:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3005,
                        "src": "1333:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2997,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1333:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3000,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1368:2:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3005,
                        "src": "1360:10:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2999,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1360:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1322:55:20"
                  },
                  "returnParameters": {
                    "id": 3004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3003,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3005,
                        "src": "1404:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3002,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1404:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1403:9:20"
                  },
                  "scope": 3017,
                  "src": "1298:115:20",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "796449dd",
                  "id": 3016,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensToETH",
                  "nameLocation": "1480:15:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3012,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3007,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "1514:7:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3016,
                        "src": "1506:15:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3006,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1506:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3009,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "1540:8:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3016,
                        "src": "1532:16:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3008,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1532:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3011,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1567:2:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 3016,
                        "src": "1559:10:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3010,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1559:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1495:81:20"
                  },
                  "returnParameters": {
                    "id": 3015,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3014,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3016,
                        "src": "1595:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3013,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1595:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1594:9:20"
                  },
                  "scope": 3017,
                  "src": "1471:133:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 3018,
              "src": "62:1545:20",
              "usedErrors": [],
              "usedEvents": [
                2940,
                2950,
                2960
              ]
            }
          ],
          "src": "33:1576:20"
        },
        "id": 20
      },
      "contracts/src/HoneyErrors.sol": {
        "ast": {
          "absolutePath": "contracts/src/HoneyErrors.sol",
          "exportedSymbols": {
            "AddressIsZero": [
              3061
            ],
            "AlreadyExists": [
              3029
            ],
            "AmountInIsZero": [
              3059
            ],
            "AmountOutRequiredIsZero": [
              3073
            ],
            "ExecutorNotCheckedIn": [
              3075
            ],
            "IdenticalTokenAddresses": [
              3063
            ],
            "InsufficientInputAmount": [
              3053
            ],
            "InsufficientLiquidity": [
              3055
            ],
            "InsufficientMsgValue": [
              3057
            ],
            "InsufficientOutputAmount": [
              3047
            ],
            "InsufficientSwapInputValue": [
              3039
            ],
            "InsufficientWalletBalance": [
              3027
            ],
            "InvalidInputTokenForSwapPlacement": [
              3065
            ],
            "InvalidToAddressBits": [
              3077
            ],
            "NotCreated": [
              3031
            ],
            "SwapDoesNotExist": [
              3035
            ],
            "SwapNotEligibleForRefresh": [
              3069
            ],
            "SwapQuantityIsZero": [
              3037
            ],
            "TokenInIsTokenOut": [
              3041
            ],
            "V2SwapFailed": [
              3079
            ],
            "V3SwapFailed": [
              3081
            ]
          },
          "id": 3082,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3019,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:21"
            },
            {
              "errorSelector": "eaad70ab",
              "id": 3027,
              "name": "InsufficientWalletBalance",
              "nameLocation": "68:25:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3026,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3021,
                    "mutability": "mutable",
                    "name": "account",
                    "nameLocation": "108:7:21",
                    "nodeType": "VariableDeclaration",
                    "scope": 3027,
                    "src": "100:15:21",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 3020,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "100:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3023,
                    "mutability": "mutable",
                    "name": "balance",
                    "nameLocation": "130:7:21",
                    "nodeType": "VariableDeclaration",
                    "scope": 3027,
                    "src": "122:15:21",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 3022,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "122:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3025,
                    "mutability": "mutable",
                    "name": "balanceNeeded",
                    "nameLocation": "152:13:21",
                    "nodeType": "VariableDeclaration",
                    "scope": 3027,
                    "src": "144:21:21",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 3024,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "144:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "93:75:21"
              },
              "src": "62:107:21"
            },
            {
              "errorSelector": "23369fa6",
              "id": 3029,
              "name": "AlreadyExists",
              "nameLocation": "177:13:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3028,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "190:2:21"
              },
              "src": "171:22:21"
            },
            {
              "errorSelector": "8fead4d2",
              "id": 3031,
              "name": "NotCreated",
              "nameLocation": "201:10:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3030,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "211:2:21"
              },
              "src": "195:19:21"
            },
            {
              "errorSelector": "3ea876e6",
              "id": 3035,
              "name": "SwapDoesNotExist",
              "nameLocation": "222:16:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3034,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3033,
                    "mutability": "mutable",
                    "name": "orderId",
                    "nameLocation": "247:7:21",
                    "nodeType": "VariableDeclaration",
                    "scope": 3035,
                    "src": "239:15:21",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 3032,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "239:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "238:17:21"
              },
              "src": "216:40:21"
            },
            {
              "errorSelector": "1af77aa7",
              "id": 3037,
              "name": "SwapQuantityIsZero",
              "nameLocation": "264:18:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3036,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "282:2:21"
              },
              "src": "258:27:21"
            },
            {
              "errorSelector": "faf7a486",
              "id": 3039,
              "name": "InsufficientSwapInputValue",
              "nameLocation": "293:26:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3038,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "319:2:21"
              },
              "src": "287:35:21"
            },
            {
              "errorSelector": "15e359a7",
              "id": 3041,
              "name": "TokenInIsTokenOut",
              "nameLocation": "330:17:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3040,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "347:2:21"
              },
              "src": "324:26:21"
            },
            {
              "errorSelector": "d28d3eb5",
              "id": 3047,
              "name": "InsufficientOutputAmount",
              "nameLocation": "358:24:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3046,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3043,
                    "mutability": "mutable",
                    "name": "amountOut",
                    "nameLocation": "391:9:21",
                    "nodeType": "VariableDeclaration",
                    "scope": 3047,
                    "src": "383:17:21",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 3042,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "383:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3045,
                    "mutability": "mutable",
                    "name": "expectedAmountOut",
                    "nameLocation": "410:17:21",
                    "nodeType": "VariableDeclaration",
                    "scope": 3047,
                    "src": "402:25:21",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 3044,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "402:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "382:46:21"
              },
              "src": "352:77:21"
            },
            {
              "errorSelector": "ec3e79fb",
              "id": 3053,
              "name": "InsufficientInputAmount",
              "nameLocation": "437:23:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3052,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3049,
                    "mutability": "mutable",
                    "name": "amountIn",
                    "nameLocation": "469:8:21",
                    "nodeType": "VariableDeclaration",
                    "scope": 3053,
                    "src": "461:16:21",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 3048,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "461:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 3051,
                    "mutability": "mutable",
                    "name": "expectedAmountIn",
                    "nameLocation": "487:16:21",
                    "nodeType": "VariableDeclaration",
                    "scope": 3053,
                    "src": "479:24:21",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 3050,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "479:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "460:44:21"
              },
              "src": "431:74:21"
            },
            {
              "errorSelector": "bb55fd27",
              "id": 3055,
              "name": "InsufficientLiquidity",
              "nameLocation": "513:21:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3054,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "534:2:21"
              },
              "src": "507:30:21"
            },
            {
              "errorSelector": "78f38f76",
              "id": 3057,
              "name": "InsufficientMsgValue",
              "nameLocation": "545:20:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3056,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "565:2:21"
              },
              "src": "539:29:21"
            },
            {
              "errorSelector": "6067798b",
              "id": 3059,
              "name": "AmountInIsZero",
              "nameLocation": "576:14:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3058,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "590:2:21"
              },
              "src": "570:23:21"
            },
            {
              "errorSelector": "867915ab",
              "id": 3061,
              "name": "AddressIsZero",
              "nameLocation": "601:13:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3060,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "614:2:21"
              },
              "src": "595:22:21"
            },
            {
              "errorSelector": "e16fb023",
              "id": 3063,
              "name": "IdenticalTokenAddresses",
              "nameLocation": "625:23:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3062,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "648:2:21"
              },
              "src": "619:32:21"
            },
            {
              "errorSelector": "cf5d5391",
              "id": 3065,
              "name": "InvalidInputTokenForSwapPlacement",
              "nameLocation": "659:33:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3064,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "692:2:21"
              },
              "src": "653:42:21"
            },
            {
              "errorSelector": "9854669e",
              "id": 3069,
              "name": "SwapNotEligibleForRefresh",
              "nameLocation": "703:25:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3068,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3067,
                    "mutability": "mutable",
                    "name": "orderId",
                    "nameLocation": "737:7:21",
                    "nodeType": "VariableDeclaration",
                    "scope": 3069,
                    "src": "729:15:21",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 3066,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "729:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "728:17:21"
              },
              "src": "697:49:21"
            },
            {
              "errorSelector": "d56427c9",
              "id": 3073,
              "name": "AmountOutRequiredIsZero",
              "nameLocation": "754:23:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3072,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 3071,
                    "mutability": "mutable",
                    "name": "orderId",
                    "nameLocation": "786:7:21",
                    "nodeType": "VariableDeclaration",
                    "scope": 3073,
                    "src": "778:15:21",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 3070,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "778:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "777:17:21"
              },
              "src": "748:47:21"
            },
            {
              "errorSelector": "3f07759a",
              "id": 3075,
              "name": "ExecutorNotCheckedIn",
              "nameLocation": "803:20:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3074,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "823:2:21"
              },
              "src": "797:29:21"
            },
            {
              "errorSelector": "6f945886",
              "id": 3077,
              "name": "InvalidToAddressBits",
              "nameLocation": "834:20:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3076,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "854:2:21"
              },
              "src": "828:29:21"
            },
            {
              "errorSelector": "109b57e5",
              "id": 3079,
              "name": "V2SwapFailed",
              "nameLocation": "865:12:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3078,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "877:2:21"
              },
              "src": "859:21:21"
            },
            {
              "errorSelector": "e8985615",
              "id": 3081,
              "name": "V3SwapFailed",
              "nameLocation": "888:12:21",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 3080,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "900:2:21"
              },
              "src": "882:21:21"
            }
          ],
          "src": "33:872:21"
        },
        "id": 21
      },
      "contracts/src/HoneyFactory.sol": {
        "ast": {
          "absolutePath": "contracts/src/HoneyFactory.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "AddressIsZero": [
              3061
            ],
            "AlreadyExists": [
              3029
            ],
            "AmountInIsZero": [
              3059
            ],
            "AmountOutRequiredIsZero": [
              3073
            ],
            "EquitoApp": [
              2299
            ],
            "EquitoMessage": [
              2453
            ],
            "EquitoMessageLibrary": [
              2504
            ],
            "ExecutorNotCheckedIn": [
              3075
            ],
            "HoneyERC20Pool": [
              4597
            ],
            "HoneyETHPool": [
              4850
            ],
            "HoneyFactory": [
              3464
            ],
            "IHoneyETHPool": [
              4031
            ],
            "IHoneyFactory": [
              4164
            ],
            "IHoneyPool": [
              4191
            ],
            "ITokenMap": [
              4253
            ],
            "IdenticalTokenAddresses": [
              3063
            ],
            "InsufficientInputAmount": [
              3053
            ],
            "InsufficientLiquidity": [
              3055
            ],
            "InsufficientMsgValue": [
              3057
            ],
            "InsufficientOutputAmount": [
              3047
            ],
            "InsufficientSwapInputValue": [
              3039
            ],
            "InsufficientWalletBalance": [
              3027
            ],
            "InvalidInputTokenForSwapPlacement": [
              3065
            ],
            "InvalidToAddressBits": [
              3077
            ],
            "NotCreated": [
              3031
            ],
            "SwapDoesNotExist": [
              3035
            ],
            "SwapNotEligibleForRefresh": [
              3069
            ],
            "SwapQuantityIsZero": [
              3037
            ],
            "TokenInIsTokenOut": [
              3041
            ],
            "V2SwapFailed": [
              3079
            ],
            "V3SwapFailed": [
              3081
            ],
            "bytes64": [
              2431
            ]
          },
          "id": 3465,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3083,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:22"
            },
            {
              "absolutePath": "contracts/src/HoneyErrors.sol",
              "file": "./HoneyErrors.sol",
              "id": 3084,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3465,
              "sourceUnit": 3082,
              "src": "62:27:22",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/libraries/EquitoMessageLibrary.sol",
              "file": "../lib/libraries/EquitoMessageLibrary.sol",
              "id": 3085,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3465,
              "sourceUnit": 2505,
              "src": "91:51:22",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/EquitoApp.sol",
              "file": "../lib/EquitoApp.sol",
              "id": 3087,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3465,
              "sourceUnit": 2300,
              "src": "144:47:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3086,
                    "name": "EquitoApp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2299,
                    "src": "152:9:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/ITokenMap.sol",
              "file": "./interfaces/ITokenMap.sol",
              "id": 3089,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3465,
              "sourceUnit": 4254,
              "src": "193:53:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3088,
                    "name": "ITokenMap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4253,
                    "src": "201:9:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/IHoneyFactory.sol",
              "file": "./interfaces/IHoneyFactory.sol",
              "id": 3091,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3465,
              "sourceUnit": 4165,
              "src": "248:61:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3090,
                    "name": "IHoneyFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4164,
                    "src": "256:13:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/IHoneyETHPool.sol",
              "file": "./interfaces/IHoneyETHPool.sol",
              "id": 3093,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3465,
              "sourceUnit": 4032,
              "src": "311:61:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3092,
                    "name": "IHoneyETHPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4031,
                    "src": "319:13:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/IHoneyPool.sol",
              "file": "./interfaces/IHoneyPool.sol",
              "id": 3095,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3465,
              "sourceUnit": 4192,
              "src": "374:55:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3094,
                    "name": "IHoneyPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4191,
                    "src": "382:10:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/pools/HoneyETHPool.sol",
              "file": "./pools/HoneyETHPool.sol",
              "id": 3097,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3465,
              "sourceUnit": 4851,
              "src": "431:54:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3096,
                    "name": "HoneyETHPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4850,
                    "src": "439:12:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/pools/HoneyERC20Pool.sol",
              "file": "./pools/HoneyERC20Pool.sol",
              "id": 3099,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3465,
              "sourceUnit": 4598,
              "src": "487:58:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3098,
                    "name": "HoneyERC20Pool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4597,
                    "src": "495:14:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 3101,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 3465,
              "sourceUnit": 296,
              "src": "547:79:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3100,
                    "name": "AccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 295,
                    "src": "555:13:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3102,
                    "name": "EquitoApp",
                    "nameLocations": [
                      "655:9:22"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2299,
                    "src": "655:9:22"
                  },
                  "id": 3103,
                  "nodeType": "InheritanceSpecifier",
                  "src": "655:9:22"
                },
                {
                  "baseName": {
                    "id": 3104,
                    "name": "IHoneyFactory",
                    "nameLocations": [
                      "666:13:22"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4164,
                    "src": "666:13:22"
                  },
                  "id": 3105,
                  "nodeType": "InheritanceSpecifier",
                  "src": "666:13:22"
                },
                {
                  "baseName": {
                    "id": 3106,
                    "name": "AccessControl",
                    "nameLocations": [
                      "681:13:22"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "681:13:22"
                  },
                  "id": 3107,
                  "nodeType": "InheritanceSpecifier",
                  "src": "681:13:22"
                }
              ],
              "canonicalName": "HoneyFactory",
              "contractDependencies": [
                4597,
                4850
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 3464,
              "linearizedBaseContracts": [
                3464,
                295,
                2032,
                2044,
                378,
                4164,
                2299,
                526,
                1891,
                2314
              ],
              "name": "HoneyFactory",
              "nameLocation": "639:12:22",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "2ef3f1a5",
                  "id": 3112,
                  "mutability": "constant",
                  "name": "HONEY_ROUTER_ROLE",
                  "nameLocation": "726:17:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3464,
                  "src": "702:74:22",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3108,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "484f4e45595f524f555445525f524f4c45",
                        "id": 3110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "756:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a775b33f9a8a1bd7919099707cfe9320f63c8a6cd38fa171b61aacb968ce641",
                          "typeString": "literal_string \"HONEY_ROUTER_ROLE\""
                        },
                        "value": "HONEY_ROUTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0a775b33f9a8a1bd7919099707cfe9320f63c8a6cd38fa171b61aacb968ce641",
                          "typeString": "literal_string \"HONEY_ROUTER_ROLE\""
                        }
                      ],
                      "id": 3109,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "746:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "746:30:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 3115,
                  "mutability": "constant",
                  "name": "WETH",
                  "nameLocation": "810:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3464,
                  "src": "785:74:22",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
                    "id": 3114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "817:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 3119,
                  "mutability": "mutable",
                  "name": "_pools",
                  "nameLocation": "904:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3464,
                  "src": "868:42:22",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 3118,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 3116,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "876:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "868:27:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 3117,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "887:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 3122,
                  "mutability": "mutable",
                  "name": "tokenMap",
                  "nameLocation": "937:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3464,
                  "src": "919:26:22",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITokenMap_$4253",
                    "typeString": "contract ITokenMap"
                  },
                  "typeName": {
                    "id": 3121,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3120,
                      "name": "ITokenMap",
                      "nameLocations": [
                        "919:9:22"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4253,
                      "src": "919:9:22"
                    },
                    "referencedDeclaration": 4253,
                    "src": "919:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITokenMap_$4253",
                      "typeString": "contract ITokenMap"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3144,
                    "nodeType": "Block",
                    "src": "1021:105:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 3136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3132,
                            "name": "tokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3122,
                            "src": "1032:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITokenMap_$4253",
                              "typeString": "contract ITokenMap"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3134,
                                "name": "_tokenMap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3124,
                                "src": "1053:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3133,
                              "name": "ITokenMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4253,
                              "src": "1043:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ITokenMap_$4253_$",
                                "typeString": "type(contract ITokenMap)"
                              }
                            },
                            "id": 3135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1043:20:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITokenMap_$4253",
                              "typeString": "contract ITokenMap"
                            }
                          },
                          "src": "1032:31:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITokenMap_$4253",
                            "typeString": "contract ITokenMap"
                          }
                        },
                        "id": 3137,
                        "nodeType": "ExpressionStatement",
                        "src": "1032:31:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3139,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1085:18:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3140,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "1105:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1105:12:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3138,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1074:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 3142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1074:44:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3143,
                        "nodeType": "ExpressionStatement",
                        "src": "1074:44:22"
                      }
                    ]
                  },
                  "id": 3145,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3129,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3126,
                          "src": "1012:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3130,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 3128,
                        "name": "EquitoApp",
                        "nameLocations": [
                          "1002:9:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2299,
                        "src": "1002:9:22"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1002:18:22"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3124,
                        "mutability": "mutable",
                        "name": "_tokenMap",
                        "nameLocation": "974:9:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3145,
                        "src": "966:17:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "966:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3126,
                        "mutability": "mutable",
                        "name": "_router",
                        "nameLocation": "993:7:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3145,
                        "src": "985:15:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "985:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "965:36:22"
                  },
                  "returnParameters": {
                    "id": 3131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1021:0:22"
                  },
                  "scope": 3464,
                  "src": "954:172:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3158,
                    "nodeType": "Block",
                    "src": "1228:61:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3154,
                              "name": "HONEY_ROUTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3112,
                              "src": "1250:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 3155,
                              "name": "honeyRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3147,
                              "src": "1269:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3153,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1239:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 3156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1239:42:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3157,
                        "nodeType": "ExpressionStatement",
                        "src": "1239:42:22"
                      }
                    ]
                  },
                  "functionSelector": "24ca984e",
                  "id": 3159,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3150,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1208:18:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 3151,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3149,
                        "name": "onlyRole",
                        "nameLocations": [
                          "1199:8:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "1199:8:22"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1199:28:22"
                    }
                  ],
                  "name": "addRouter",
                  "nameLocation": "1143:9:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3147,
                        "mutability": "mutable",
                        "name": "honeyRouter",
                        "nameLocation": "1171:11:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3159,
                        "src": "1163:19:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1163:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1152:37:22"
                  },
                  "returnParameters": {
                    "id": 3152,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1228:0:22"
                  },
                  "scope": 3464,
                  "src": "1134:155:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3172,
                    "nodeType": "Block",
                    "src": "1394:62:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3168,
                              "name": "HONEY_ROUTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3112,
                              "src": "1417:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 3169,
                              "name": "honeyRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3161,
                              "src": "1436:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3167,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "1405:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 3170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1405:43:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3171,
                        "nodeType": "ExpressionStatement",
                        "src": "1405:43:22"
                      }
                    ]
                  },
                  "functionSelector": "6ae0b154",
                  "id": 3173,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3164,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1374:18:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 3165,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3163,
                        "name": "onlyRole",
                        "nameLocations": [
                          "1365:8:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "1365:8:22"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1365:28:22"
                    }
                  ],
                  "name": "removeRouter",
                  "nameLocation": "1306:12:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3161,
                        "mutability": "mutable",
                        "name": "honeyRouter",
                        "nameLocation": "1337:11:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3173,
                        "src": "1329:19:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1329:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1318:37:22"
                  },
                  "returnParameters": {
                    "id": 3166,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1394:0:22"
                  },
                  "scope": 3464,
                  "src": "1297:159:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4128
                  ],
                  "body": {
                    "id": 3223,
                    "nodeType": "Block",
                    "src": "1517:284:22",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 3179,
                              "name": "_pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3119,
                              "src": "1532:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 3181,
                            "indexExpression": {
                              "id": 3180,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3175,
                              "src": "1539:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1532:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1557:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1549:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3182,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1549:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1549:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1532:27:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3191,
                        "nodeType": "IfStatement",
                        "src": "1528:82:22",
                        "trueBody": {
                          "id": 3190,
                          "nodeType": "Block",
                          "src": "1561:49:22",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3187,
                                  "name": "AlreadyExists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3029,
                                  "src": "1583:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 3188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1583:15:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3189,
                              "nodeType": "RevertStatement",
                              "src": "1576:22:22"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3192,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3175,
                            "src": "1626:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3193,
                            "name": "WETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3115,
                            "src": "1635:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1626:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3221,
                          "nodeType": "Block",
                          "src": "1717:77:22",
                          "statements": [
                            {
                              "expression": {
                                "id": 3219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3208,
                                    "name": "_pools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3119,
                                    "src": "1732:6:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                      "typeString": "mapping(address => address)"
                                    }
                                  },
                                  "id": 3210,
                                  "indexExpression": {
                                    "id": 3209,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3175,
                                    "src": "1739:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1732:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 3216,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3175,
                                          "src": "1775:5:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 3215,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "1756:18:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_HoneyERC20Pool_$4597_$",
                                          "typeString": "function (address) returns (contract HoneyERC20Pool)"
                                        },
                                        "typeName": {
                                          "id": 3214,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 3213,
                                            "name": "HoneyERC20Pool",
                                            "nameLocations": [
                                              "1760:14:22"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 4597,
                                            "src": "1760:14:22"
                                          },
                                          "referencedDeclaration": 4597,
                                          "src": "1760:14:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_HoneyERC20Pool_$4597",
                                            "typeString": "contract HoneyERC20Pool"
                                          }
                                        }
                                      },
                                      "id": 3217,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1756:25:22",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_HoneyERC20Pool_$4597",
                                        "typeString": "contract HoneyERC20Pool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_HoneyERC20Pool_$4597",
                                        "typeString": "contract HoneyERC20Pool"
                                      }
                                    ],
                                    "id": 3212,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1748:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3211,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1748:7:22",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1748:34:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1732:50:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3220,
                              "nodeType": "ExpressionStatement",
                              "src": "1732:50:22"
                            }
                          ]
                        },
                        "id": 3222,
                        "nodeType": "IfStatement",
                        "src": "1622:172:22",
                        "trueBody": {
                          "id": 3207,
                          "nodeType": "Block",
                          "src": "1641:70:22",
                          "statements": [
                            {
                              "expression": {
                                "id": 3205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 3195,
                                    "name": "_pools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3119,
                                    "src": "1656:6:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                      "typeString": "mapping(address => address)"
                                    }
                                  },
                                  "id": 3197,
                                  "indexExpression": {
                                    "id": 3196,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3175,
                                    "src": "1663:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1656:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 3202,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "NewExpression",
                                        "src": "1680:16:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_HoneyETHPool_$4850_$",
                                          "typeString": "function () returns (contract HoneyETHPool)"
                                        },
                                        "typeName": {
                                          "id": 3201,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 3200,
                                            "name": "HoneyETHPool",
                                            "nameLocations": [
                                              "1684:12:22"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 4850,
                                            "src": "1684:12:22"
                                          },
                                          "referencedDeclaration": 4850,
                                          "src": "1684:12:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_HoneyETHPool_$4850",
                                            "typeString": "contract HoneyETHPool"
                                          }
                                        }
                                      },
                                      "id": 3203,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1680:18:22",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_HoneyETHPool_$4850",
                                        "typeString": "contract HoneyETHPool"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_HoneyETHPool_$4850",
                                        "typeString": "contract HoneyETHPool"
                                      }
                                    ],
                                    "id": 3199,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1672:7:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3198,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1672:7:22",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3204,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1672:27:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1656:43:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3206,
                              "nodeType": "ExpressionStatement",
                              "src": "1656:43:22"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "9049f9d2",
                  "id": 3224,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPool",
                  "nameLocation": "1473:10:22",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3177,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1508:8:22"
                  },
                  "parameters": {
                    "id": 3176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3175,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1492:5:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3224,
                        "src": "1484:13:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3174,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1484:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1483:15:22"
                  },
                  "returnParameters": {
                    "id": 3178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1517:0:22"
                  },
                  "scope": 3464,
                  "src": "1464:337:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4140
                  ],
                  "body": {
                    "id": 3231,
                    "nodeType": "Block",
                    "src": "1857:30:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 3229,
                          "name": "WETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3115,
                          "src": "1875:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 3228,
                        "id": 3230,
                        "nodeType": "Return",
                        "src": "1868:11:22"
                      }
                    ]
                  },
                  "functionSelector": "3fc8cef3",
                  "id": 3232,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "weth",
                  "nameLocation": "1818:4:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3225,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1822:2:22"
                  },
                  "returnParameters": {
                    "id": 3228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3227,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3232,
                        "src": "1848:7:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1848:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1847:9:22"
                  },
                  "scope": 3464,
                  "src": "1809:78:22",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4135
                  ],
                  "body": {
                    "id": 3244,
                    "nodeType": "Block",
                    "src": "1968:41:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3241,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3234,
                              "src": "1995:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3240,
                            "name": "_getPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3449,
                            "src": "1986:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) view returns (address)"
                            }
                          },
                          "id": 3242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1986:15:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 3239,
                        "id": 3243,
                        "nodeType": "Return",
                        "src": "1979:22:22"
                      }
                    ]
                  },
                  "functionSelector": "bbe4f6db",
                  "id": 3245,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPool",
                  "nameLocation": "1904:7:22",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3236,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1941:8:22"
                  },
                  "parameters": {
                    "id": 3235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3234,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1920:5:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3245,
                        "src": "1912:13:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1912:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1911:15:22"
                  },
                  "returnParameters": {
                    "id": 3239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3238,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3245,
                        "src": "1959:7:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1959:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1958:9:22"
                  },
                  "scope": 3464,
                  "src": "1895:114:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4145
                  ],
                  "body": {
                    "id": 3258,
                    "nodeType": "Block",
                    "src": "2073:54:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3254,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2113:4:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HoneyFactory_$3464",
                                    "typeString": "contract HoneyFactory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HoneyFactory_$3464",
                                    "typeString": "contract HoneyFactory"
                                  }
                                ],
                                "id": 3253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2105:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3252,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2105:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2105:13:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3250,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2066,
                              "src": "2091:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRouter_$2423",
                                "typeString": "contract IRouter"
                              }
                            },
                            "id": 3251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2098:6:22",
                            "memberName": "getFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2328,
                            "src": "2091:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2091:28:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3249,
                        "id": 3257,
                        "nodeType": "Return",
                        "src": "2084:35:22"
                      }
                    ]
                  },
                  "functionSelector": "5c42132e",
                  "id": 3259,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEquitoFee",
                  "nameLocation": "2026:12:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3246,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2038:2:22"
                  },
                  "returnParameters": {
                    "id": 3249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3248,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3259,
                        "src": "2064:7:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3247,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2064:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2063:9:22"
                  },
                  "scope": 3464,
                  "src": "2017:110:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4152
                  ],
                  "body": {
                    "id": 3300,
                    "nodeType": "Block",
                    "src": "2254:247:22",
                    "statements": [
                      {
                        "assignments": [
                          3270
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3270,
                            "mutability": "mutable",
                            "name": "receiver",
                            "nameLocation": "2273:8:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 3300,
                            "src": "2265:16:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3269,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2265:7:22",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3273,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3271,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "2284:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2284:12:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2265:31:22"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3274,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3261,
                            "src": "2313:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3275,
                            "name": "WETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3115,
                            "src": "2322:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2313:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3298,
                          "nodeType": "Block",
                          "src": "2415:79:22",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3294,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3263,
                                    "src": "2465:6:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3295,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3270,
                                    "src": "2473:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 3289,
                                          "name": "_pools",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3119,
                                          "src": "2441:6:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                            "typeString": "mapping(address => address)"
                                          }
                                        },
                                        "id": 3291,
                                        "indexExpression": {
                                          "id": 3290,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3261,
                                          "src": "2448:5:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2441:13:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3288,
                                      "name": "IHoneyPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4191,
                                      "src": "2430:10:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IHoneyPool_$4191_$",
                                        "typeString": "type(contract IHoneyPool)"
                                      }
                                    },
                                    "id": 3292,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2430:25:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IHoneyPool_$4191",
                                      "typeString": "contract IHoneyPool"
                                    }
                                  },
                                  "id": 3293,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2456:8:22",
                                  "memberName": "withdraw",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4190,
                                  "src": "2430:34:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address) external"
                                  }
                                },
                                "id": 3296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2430:52:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3297,
                              "nodeType": "ExpressionStatement",
                              "src": "2430:52:22"
                            }
                          ]
                        },
                        "id": 3299,
                        "nodeType": "IfStatement",
                        "src": "2309:185:22",
                        "trueBody": {
                          "id": 3287,
                          "nodeType": "Block",
                          "src": "2328:81:22",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3283,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3263,
                                    "src": "2380:6:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3284,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3270,
                                    "src": "2388:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 3278,
                                          "name": "_pools",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3119,
                                          "src": "2357:6:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                            "typeString": "mapping(address => address)"
                                          }
                                        },
                                        "id": 3280,
                                        "indexExpression": {
                                          "id": 3279,
                                          "name": "WETH",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3115,
                                          "src": "2364:4:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2357:12:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3277,
                                      "name": "IHoneyETHPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4031,
                                      "src": "2343:13:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IHoneyETHPool_$4031_$",
                                        "typeString": "type(contract IHoneyETHPool)"
                                      }
                                    },
                                    "id": 3281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2343:27:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IHoneyETHPool_$4031",
                                      "typeString": "contract IHoneyETHPool"
                                    }
                                  },
                                  "id": 3282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2371:8:22",
                                  "memberName": "withdraw",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4030,
                                  "src": "2343:36:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address) external"
                                  }
                                },
                                "id": 3285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2343:54:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3286,
                              "nodeType": "ExpressionStatement",
                              "src": "2343:54:22"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "c1bf9e58",
                  "id": 3301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3266,
                          "name": "HONEY_ROUTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3112,
                          "src": "2235:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 3267,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3265,
                        "name": "onlyRole",
                        "nameLocations": [
                          "2226:8:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "2226:8:22"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2226:27:22"
                    }
                  ],
                  "name": "withdrawFromPool",
                  "nameLocation": "2144:16:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3261,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "2179:5:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3301,
                        "src": "2171:13:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2171:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3263,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2203:6:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3301,
                        "src": "2195:14:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3262,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2195:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2160:56:22"
                  },
                  "returnParameters": {
                    "id": 3268,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2254:0:22"
                  },
                  "scope": 3464,
                  "src": "2135:366:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3352,
                    "nodeType": "Block",
                    "src": "2668:347:22",
                    "statements": [
                      {
                        "assignments": [
                          3313
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3313,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "2687:5:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 3352,
                            "src": "2679:13:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3312,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2679:7:22",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3319,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3316,
                              "name": "peerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3303,
                              "src": "2708:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3317,
                              "name": "sourceChainSelector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3305,
                              "src": "2719:19:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3314,
                              "name": "tokenMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3122,
                              "src": "2695:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITokenMap_$4253",
                                "typeString": "contract ITokenMap"
                              }
                            },
                            "id": 3315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2704:3:22",
                            "memberName": "get",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4252,
                            "src": "2695:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (address,uint256) view external returns (address)"
                            }
                          },
                          "id": 3318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2695:44:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2679:60:22"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3320,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3313,
                            "src": "2756:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3321,
                            "name": "WETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3115,
                            "src": "2765:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2756:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3344,
                          "nodeType": "Block",
                          "src": "2858:79:22",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3340,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3309,
                                    "src": "2908:6:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3341,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3307,
                                    "src": "2916:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 3335,
                                          "name": "_pools",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3119,
                                          "src": "2884:6:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                            "typeString": "mapping(address => address)"
                                          }
                                        },
                                        "id": 3337,
                                        "indexExpression": {
                                          "id": 3336,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3313,
                                          "src": "2891:5:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2884:13:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3334,
                                      "name": "IHoneyPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4191,
                                      "src": "2873:10:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IHoneyPool_$4191_$",
                                        "typeString": "type(contract IHoneyPool)"
                                      }
                                    },
                                    "id": 3338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2873:25:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IHoneyPool_$4191",
                                      "typeString": "contract IHoneyPool"
                                    }
                                  },
                                  "id": 3339,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2899:8:22",
                                  "memberName": "withdraw",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4190,
                                  "src": "2873:34:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address) external"
                                  }
                                },
                                "id": 3342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2873:52:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3343,
                              "nodeType": "ExpressionStatement",
                              "src": "2873:52:22"
                            }
                          ]
                        },
                        "id": 3345,
                        "nodeType": "IfStatement",
                        "src": "2752:185:22",
                        "trueBody": {
                          "id": 3333,
                          "nodeType": "Block",
                          "src": "2771:81:22",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3329,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3309,
                                    "src": "2823:6:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3330,
                                    "name": "receiver",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3307,
                                    "src": "2831:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 3324,
                                          "name": "_pools",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3119,
                                          "src": "2800:6:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                            "typeString": "mapping(address => address)"
                                          }
                                        },
                                        "id": 3326,
                                        "indexExpression": {
                                          "id": 3325,
                                          "name": "WETH",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3115,
                                          "src": "2807:4:22",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2800:12:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3323,
                                      "name": "IHoneyETHPool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4031,
                                      "src": "2786:13:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IHoneyETHPool_$4031_$",
                                        "typeString": "type(contract IHoneyETHPool)"
                                      }
                                    },
                                    "id": 3327,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2786:27:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IHoneyETHPool_$4031",
                                      "typeString": "contract IHoneyETHPool"
                                    }
                                  },
                                  "id": 3328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2814:8:22",
                                  "memberName": "withdraw",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4030,
                                  "src": "2786:36:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address) external"
                                  }
                                },
                                "id": 3331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2786:54:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3332,
                              "nodeType": "ExpressionStatement",
                              "src": "2786:54:22"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3347,
                              "name": "sourceChainSelector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3305,
                              "src": "2969:19:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3348,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3307,
                              "src": "2990:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3349,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3309,
                              "src": "3000:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3346,
                            "name": "ReleasedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4123,
                            "src": "2954:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 3350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2954:53:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3351,
                        "nodeType": "EmitStatement",
                        "src": "2949:58:22"
                      }
                    ]
                  },
                  "id": 3353,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_releasedTokens",
                  "nameLocation": "2518:15:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3303,
                        "mutability": "mutable",
                        "name": "peerToken",
                        "nameLocation": "2552:9:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3353,
                        "src": "2544:17:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3302,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2544:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3305,
                        "mutability": "mutable",
                        "name": "sourceChainSelector",
                        "nameLocation": "2580:19:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3353,
                        "src": "2572:27:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3304,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2572:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3307,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "2618:8:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3353,
                        "src": "2610:16:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3306,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2610:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3309,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2645:6:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3353,
                        "src": "2637:14:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2637:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2533:125:22"
                  },
                  "returnParameters": {
                    "id": 3311,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2668:0:22"
                  },
                  "scope": 3464,
                  "src": "2509:506:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    4163
                  ],
                  "body": {
                    "id": 3387,
                    "nodeType": "Block",
                    "src": "3199:238:22",
                    "statements": [
                      {
                        "assignments": [
                          3366
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3366,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "3223:4:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 3387,
                            "src": "3210:17:22",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 3365,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3210:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3373,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3369,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3359,
                              "src": "3241:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3370,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3355,
                              "src": "3248:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3371,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3361,
                              "src": "3258:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3367,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3230:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3234:6:22",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "3230:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3230:35:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3210:55:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3380,
                                "name": "peers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2072,
                                "src": "3329:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bytes64_$2431_storage_$",
                                  "typeString": "mapping(uint256 => struct bytes64 storage ref)"
                                }
                              },
                              "id": 3382,
                              "indexExpression": {
                                "id": 3381,
                                "name": "destinationChainSelector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3357,
                                "src": "3335:24:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3329:31:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_bytes64_$2431_storage",
                                "typeString": "struct bytes64 storage ref"
                              }
                            },
                            {
                              "id": 3383,
                              "name": "destinationChainSelector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3357,
                              "src": "3375:24:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3384,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3366,
                              "src": "3414:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_bytes64_$2431_storage",
                                "typeString": "struct bytes64 storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_bytes64_$2431_storage",
                                  "typeString": "struct bytes64 storage ref"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 3374,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2066,
                                "src": "3278:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRouter_$2423",
                                  "typeString": "contract IRouter"
                                }
                              },
                              "id": 3376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3285:11:22",
                              "memberName": "sendMessage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2374,
                              "src": "3278:18:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_struct$_bytes64_$2431_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct bytes64 memory,uint256,bytes memory) payable external returns (bytes32)"
                              }
                            },
                            "id": 3379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 3377,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3304:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3308:5:22",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "3304:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3278:36:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_struct$_bytes64_$2431_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$value",
                              "typeString": "function (struct bytes64 memory,uint256,bytes memory) payable external returns (bytes32)"
                            }
                          },
                          "id": 3385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3278:151:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 3386,
                        "nodeType": "ExpressionStatement",
                        "src": "3278:151:22"
                      }
                    ]
                  },
                  "functionSelector": "a628b47f",
                  "id": 3388,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "crossChainCall",
                  "nameLocation": "3032:14:22",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3363,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3190:8:22"
                  },
                  "parameters": {
                    "id": 3362,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3355,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3065:8:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3388,
                        "src": "3057:16:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3354,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3057:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3357,
                        "mutability": "mutable",
                        "name": "destinationChainSelector",
                        "nameLocation": "3092:24:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3388,
                        "src": "3084:32:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3084:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3359,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3135:5:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3388,
                        "src": "3127:13:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3358,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3127:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3361,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3159:6:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3388,
                        "src": "3151:14:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3360,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3151:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3046:126:22"
                  },
                  "returnParameters": {
                    "id": 3364,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3199:0:22"
                  },
                  "scope": 3464,
                  "src": "3023:414:22",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    2283
                  ],
                  "body": {
                    "id": 3423,
                    "nodeType": "Block",
                    "src": "3574:306:22",
                    "statements": [
                      {
                        "assignments": [
                          3398,
                          3400,
                          3402
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3398,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "3635:5:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 3423,
                            "src": "3627:13:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3397,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3627:7:22",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3400,
                            "mutability": "mutable",
                            "name": "receiver",
                            "nameLocation": "3650:8:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 3423,
                            "src": "3642:16:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3399,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3642:7:22",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3402,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "3668:6:22",
                            "nodeType": "VariableDeclaration",
                            "scope": 3423,
                            "src": "3660:14:22",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3401,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3660:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3414,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3405,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3393,
                              "src": "3703:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 3407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3723:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3406,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3723:7:22",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 3409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3732:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3408,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3732:7:22",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 3411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3741:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 3410,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3741:7:22",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 3412,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3722:27:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                                "typeString": "tuple(type(address),type(address),type(uint256))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                                "typeString": "tuple(type(address),type(address),type(uint256))"
                              }
                            ],
                            "expression": {
                              "id": 3403,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3678:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3682:6:22",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "3678:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3678:82:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3626:134:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3416,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3398,
                              "src": "3819:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3417,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3391,
                                "src": "3826:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                                  "typeString": "struct EquitoMessage calldata"
                                }
                              },
                              "id": 3418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3834:19:22",
                              "memberName": "sourceChainSelector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2438,
                              "src": "3826:27:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3419,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3400,
                              "src": "3855:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3420,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3402,
                              "src": "3865:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3415,
                            "name": "_releasedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3353,
                            "src": "3803:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256)"
                            }
                          },
                          "id": 3421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3803:69:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3422,
                        "nodeType": "ExpressionStatement",
                        "src": "3803:69:22"
                      }
                    ]
                  },
                  "id": 3424,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_receiveMessageFromPeer",
                  "nameLocation": "3454:23:22",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3395,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3565:8:22"
                  },
                  "parameters": {
                    "id": 3394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3391,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "3511:7:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3424,
                        "src": "3488:30:22",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                          "typeString": "struct EquitoMessage"
                        },
                        "typeName": {
                          "id": 3390,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3389,
                            "name": "EquitoMessage",
                            "nameLocations": [
                              "3488:13:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2453,
                            "src": "3488:13:22"
                          },
                          "referencedDeclaration": 2453,
                          "src": "3488:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EquitoMessage_$2453_storage_ptr",
                            "typeString": "struct EquitoMessage"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3393,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3544:4:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3424,
                        "src": "3529:19:22",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3392,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3529:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3477:78:22"
                  },
                  "returnParameters": {
                    "id": 3396,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3574:0:22"
                  },
                  "scope": 3464,
                  "src": "3445:435:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3448,
                    "nodeType": "Block",
                    "src": "3953:130:22",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 3431,
                              "name": "_pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3119,
                              "src": "3968:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 3433,
                            "indexExpression": {
                              "id": 3432,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3426,
                              "src": "3975:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3968:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3993:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3985:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3434,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3985:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3985:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3968:27:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3443,
                        "nodeType": "IfStatement",
                        "src": "3964:79:22",
                        "trueBody": {
                          "id": 3442,
                          "nodeType": "Block",
                          "src": "3997:46:22",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3439,
                                  "name": "NotCreated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3031,
                                  "src": "4019:10:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 3440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4019:12:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3441,
                              "nodeType": "RevertStatement",
                              "src": "4012:19:22"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 3444,
                            "name": "_pools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3119,
                            "src": "4062:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 3446,
                          "indexExpression": {
                            "id": 3445,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3426,
                            "src": "4069:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4062:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 3430,
                        "id": 3447,
                        "nodeType": "Return",
                        "src": "4055:20:22"
                      }
                    ]
                  },
                  "id": 3449,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getPool",
                  "nameLocation": "3897:8:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3427,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3426,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "3914:5:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3449,
                        "src": "3906:13:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3425,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3906:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3905:15:22"
                  },
                  "returnParameters": {
                    "id": 3430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3429,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3449,
                        "src": "3944:7:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3944:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3943:9:22"
                  },
                  "scope": 3464,
                  "src": "3888:195:22",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3462,
                    "nodeType": "Block",
                    "src": "4161:70:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3459,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3451,
                              "src": "4217:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3457,
                              "name": "EquitoMessageLibrary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2504,
                              "src": "4179:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_EquitoMessageLibrary_$2504_$",
                                "typeString": "type(library EquitoMessageLibrary)"
                              }
                            },
                            "id": 3458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4200:16:22",
                            "memberName": "addressToBytes64",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2481,
                            "src": "4179:37:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_struct$_bytes64_$2431_memory_ptr_$",
                              "typeString": "function (address) pure returns (struct bytes64 memory)"
                            }
                          },
                          "id": 3460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4179:44:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                            "typeString": "struct bytes64 memory"
                          }
                        },
                        "functionReturnParameters": 3456,
                        "id": 3461,
                        "nodeType": "Return",
                        "src": "4172:51:22"
                      }
                    ]
                  },
                  "functionSelector": "ef88e0e1",
                  "id": 3463,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toBase64",
                  "nameLocation": "4100:8:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3452,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3451,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4117:5:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 3463,
                        "src": "4109:13:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3450,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4109:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4108:15:22"
                  },
                  "returnParameters": {
                    "id": 3456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3455,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3463,
                        "src": "4145:14:22",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                          "typeString": "struct bytes64"
                        },
                        "typeName": {
                          "id": 3454,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3453,
                            "name": "bytes64",
                            "nameLocations": [
                              "4145:7:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2431,
                            "src": "4145:7:22"
                          },
                          "referencedDeclaration": 2431,
                          "src": "4145:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                            "typeString": "struct bytes64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4144:16:22"
                  },
                  "scope": 3464,
                  "src": "4091:140:22",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 3465,
              "src": "630:3604:22",
              "usedErrors": [
                305,
                308,
                392,
                397,
                2512,
                2515,
                2527,
                2530,
                2573,
                3029,
                3031
              ],
              "usedEvents": [
                317,
                326,
                335,
                403,
                4123
              ]
            }
          ],
          "src": "33:4203:22"
        },
        "id": 22
      },
      "contracts/src/HoneyRouter01.sol": {
        "ast": {
          "absolutePath": "contracts/src/HoneyRouter01.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "AddressIsZero": [
              3061
            ],
            "AlreadyExists": [
              3029
            ],
            "AmountInIsZero": [
              3059
            ],
            "AmountOutRequiredIsZero": [
              3073
            ],
            "EquitoApp": [
              2299
            ],
            "EquitoMessage": [
              2453
            ],
            "EquitoMessageLibrary": [
              2504
            ],
            "ExecutorNotCheckedIn": [
              3075
            ],
            "HoneyFactory": [
              3464
            ],
            "HoneyFeeMath": [
              4310
            ],
            "HoneyRouter01": [
              4008
            ],
            "IERC20": [
              1256
            ],
            "IHoneyExecutor": [
              4113
            ],
            "IHoneyFactory": [
              4164
            ],
            "IHoneyRouter01": [
              4232
            ],
            "ITokenMap": [
              4253
            ],
            "IdenticalTokenAddresses": [
              3063
            ],
            "InsufficientInputAmount": [
              3053
            ],
            "InsufficientLiquidity": [
              3055
            ],
            "InsufficientMsgValue": [
              3057
            ],
            "InsufficientOutputAmount": [
              3047
            ],
            "InsufficientSwapInputValue": [
              3039
            ],
            "InsufficientWalletBalance": [
              3027
            ],
            "InvalidInputTokenForSwapPlacement": [
              3065
            ],
            "InvalidToAddressBits": [
              3077
            ],
            "NotCreated": [
              3031
            ],
            "Pausable": [
              2008
            ],
            "SafeERC20": [
              1608
            ],
            "SwapDoesNotExist": [
              3035
            ],
            "SwapNotEligibleForRefresh": [
              3069
            ],
            "SwapQuantityIsZero": [
              3037
            ],
            "TokenInIsTokenOut": [
              3041
            ],
            "V2SwapFailed": [
              3079
            ],
            "V3SwapFailed": [
              3081
            ],
            "bytes64": [
              2431
            ]
          },
          "id": 4009,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 3466,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:23"
            },
            {
              "absolutePath": "contracts/src/HoneyErrors.sol",
              "file": "./HoneyErrors.sol",
              "id": 3467,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 3082,
              "src": "62:27:23",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/libraries/EquitoMessageLibrary.sol",
              "file": "../lib/libraries/EquitoMessageLibrary.sol",
              "id": 3468,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 2505,
              "src": "91:51:23",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/lib/HoneyFeeMath.sol",
              "file": "./lib/HoneyFeeMath.sol",
              "id": 3470,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 4311,
              "src": "144:52:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3469,
                    "name": "HoneyFeeMath",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4310,
                    "src": "152:12:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/IHoneyRouter01.sol",
              "file": "./interfaces/IHoneyRouter01.sol",
              "id": 3472,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 4233,
              "src": "198:63:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3471,
                    "name": "IHoneyRouter01",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4232,
                    "src": "206:14:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/ITokenMap.sol",
              "file": "./interfaces/ITokenMap.sol",
              "id": 3474,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 4254,
              "src": "263:53:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3473,
                    "name": "ITokenMap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4253,
                    "src": "271:9:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/HoneyFactory.sol",
              "file": "./HoneyFactory.sol",
              "id": 3476,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 3465,
              "src": "318:48:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3475,
                    "name": "HoneyFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3464,
                    "src": "326:12:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/IHoneyFactory.sol",
              "file": "./interfaces/IHoneyFactory.sol",
              "id": 3478,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 4165,
              "src": "368:61:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3477,
                    "name": "IHoneyFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4164,
                    "src": "376:13:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 3480,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 1257,
              "src": "431:70:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3479,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1256,
                    "src": "439:6:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 3482,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 1609,
              "src": "503:82:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3481,
                    "name": "SafeERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1608,
                    "src": "511:9:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 3484,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 2009,
              "src": "587:68:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3483,
                    "name": "Pausable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2008,
                    "src": "595:8:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 3486,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 296,
              "src": "657:79:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3485,
                    "name": "AccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 295,
                    "src": "665:13:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/lib/EquitoApp.sol",
              "file": "../lib/EquitoApp.sol",
              "id": 3488,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 2300,
              "src": "738:47:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3487,
                    "name": "EquitoApp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2299,
                    "src": "746:9:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/IHoneyExecutor.sol",
              "file": "./interfaces/IHoneyExecutor.sol",
              "id": 3490,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4009,
              "sourceUnit": 4114,
              "src": "787:63:23",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 3489,
                    "name": "IHoneyExecutor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4113,
                    "src": "795:14:23",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 3491,
                    "name": "IHoneyRouter01",
                    "nameLocations": [
                      "880:14:23"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4232,
                    "src": "880:14:23"
                  },
                  "id": 3492,
                  "nodeType": "InheritanceSpecifier",
                  "src": "880:14:23"
                },
                {
                  "baseName": {
                    "id": 3493,
                    "name": "AccessControl",
                    "nameLocations": [
                      "896:13:23"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "896:13:23"
                  },
                  "id": 3494,
                  "nodeType": "InheritanceSpecifier",
                  "src": "896:13:23"
                },
                {
                  "baseName": {
                    "id": 3495,
                    "name": "Pausable",
                    "nameLocations": [
                      "911:8:23"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2008,
                    "src": "911:8:23"
                  },
                  "id": 3496,
                  "nodeType": "InheritanceSpecifier",
                  "src": "911:8:23"
                },
                {
                  "baseName": {
                    "id": 3497,
                    "name": "EquitoApp",
                    "nameLocations": [
                      "921:9:23"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2299,
                    "src": "921:9:23"
                  },
                  "id": 3498,
                  "nodeType": "InheritanceSpecifier",
                  "src": "921:9:23"
                }
              ],
              "canonicalName": "HoneyRouter01",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 4008,
              "linearizedBaseContracts": [
                4008,
                2299,
                526,
                2008,
                295,
                2032,
                2044,
                378,
                1891,
                2314,
                4232
              ],
              "name": "HoneyRouter01",
              "nameLocation": "863:13:23",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 3502,
                  "libraryName": {
                    "id": 3499,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "944:9:23"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1608,
                    "src": "944:9:23"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "938:27:23",
                  "typeName": {
                    "id": 3501,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3500,
                      "name": "IERC20",
                      "nameLocations": [
                        "958:6:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1256,
                      "src": "958:6:23"
                    },
                    "referencedDeclaration": 1256,
                    "src": "958:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1256",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "constant": true,
                  "id": 3505,
                  "mutability": "constant",
                  "name": "WETH",
                  "nameLocation": "998:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4008,
                  "src": "973:74:23",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
                    "id": 3504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1005:42:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "2d2c5565",
                  "id": 3507,
                  "mutability": "mutable",
                  "name": "TREASURY",
                  "nameLocation": "1071:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4008,
                  "src": "1056:23:23",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 3510,
                  "mutability": "mutable",
                  "name": "tokenMap",
                  "nameLocation": "1106:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4008,
                  "src": "1088:26:23",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITokenMap_$4253",
                    "typeString": "contract ITokenMap"
                  },
                  "typeName": {
                    "id": 3509,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3508,
                      "name": "ITokenMap",
                      "nameLocations": [
                        "1088:9:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4253,
                      "src": "1088:9:23"
                    },
                    "referencedDeclaration": 4253,
                    "src": "1088:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITokenMap_$4253",
                      "typeString": "contract ITokenMap"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 3513,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "1143:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4008,
                  "src": "1121:29:23",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                    "typeString": "contract IHoneyFactory"
                  },
                  "typeName": {
                    "id": 3512,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3511,
                      "name": "IHoneyFactory",
                      "nameLocations": [
                        "1121:13:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4164,
                      "src": "1121:13:23"
                    },
                    "referencedDeclaration": 4164,
                    "src": "1121:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                      "typeString": "contract IHoneyFactory"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 3516,
                  "mutability": "mutable",
                  "name": "executor",
                  "nameLocation": "1180:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4008,
                  "src": "1157:31:23",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                    "typeString": "contract IHoneyExecutor"
                  },
                  "typeName": {
                    "id": 3515,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3514,
                      "name": "IHoneyExecutor",
                      "nameLocations": [
                        "1157:14:23"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4113,
                      "src": "1157:14:23"
                    },
                    "referencedDeclaration": 4113,
                    "src": "1157:14:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                      "typeString": "contract IHoneyExecutor"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3544,
                    "nodeType": "Block",
                    "src": "1317:140:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 3530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3528,
                            "name": "TREASURY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3507,
                            "src": "1328:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3529,
                            "name": "_treasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3522,
                            "src": "1339:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1328:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3531,
                        "nodeType": "ExpressionStatement",
                        "src": "1328:20:23"
                      },
                      {
                        "expression": {
                          "id": 3536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3532,
                            "name": "tokenMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3510,
                            "src": "1361:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITokenMap_$4253",
                              "typeString": "contract ITokenMap"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3534,
                                "name": "_tokenMap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3518,
                                "src": "1382:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3533,
                              "name": "ITokenMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4253,
                              "src": "1372:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ITokenMap_$4253_$",
                                "typeString": "type(contract ITokenMap)"
                              }
                            },
                            "id": 3535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1372:20:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITokenMap_$4253",
                              "typeString": "contract ITokenMap"
                            }
                          },
                          "src": "1361:31:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITokenMap_$4253",
                            "typeString": "contract ITokenMap"
                          }
                        },
                        "id": 3537,
                        "nodeType": "ExpressionStatement",
                        "src": "1361:31:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3539,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1416:18:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3540,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "1436:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1436:12:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3538,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1405:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 3542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1405:44:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3543,
                        "nodeType": "ExpressionStatement",
                        "src": "1405:44:23"
                      }
                    ]
                  },
                  "id": 3545,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3525,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3520,
                          "src": "1308:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 3526,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 3524,
                        "name": "EquitoApp",
                        "nameLocations": [
                          "1298:9:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2299,
                        "src": "1298:9:23"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1298:18:23"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3523,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3518,
                        "mutability": "mutable",
                        "name": "_tokenMap",
                        "nameLocation": "1227:9:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3545,
                        "src": "1219:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3517,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1219:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3520,
                        "mutability": "mutable",
                        "name": "_router",
                        "nameLocation": "1255:7:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3545,
                        "src": "1247:15:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3519,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1247:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3522,
                        "mutability": "mutable",
                        "name": "_treasury",
                        "nameLocation": "1281:9:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3545,
                        "src": "1273:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1273:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1208:89:23"
                  },
                  "returnParameters": {
                    "id": 3527,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1317:0:23"
                  },
                  "scope": 4008,
                  "src": "1197:260:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    4202
                  ],
                  "body": {
                    "id": 3633,
                    "nodeType": "Block",
                    "src": "1700:1004:23",
                    "statements": [
                      {
                        "assignments": [
                          3558
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3558,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "1719:6:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3633,
                            "src": "1711:14:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3557,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1711:7:23",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3561,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3559,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "1728:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1728:12:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1711:29:23"
                      },
                      {
                        "assignments": [
                          3563
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3563,
                            "mutability": "mutable",
                            "name": "amountIn",
                            "nameLocation": "1761:8:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3633,
                            "src": "1753:16:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3562,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1753:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3565,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1772:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1753:20:23"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3566,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2066,
                                "src": "1790:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRouter_$2423",
                                  "typeString": "contract IRouter"
                                }
                              },
                              "id": 3567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1797:13:23",
                              "memberName": "chainSelector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2414,
                              "src": "1790:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1790:22:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3569,
                            "name": "destinationChainSelector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3551,
                            "src": "1816:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1790:50:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3594,
                          "nodeType": "Block",
                          "src": "1895:155:23",
                          "statements": [
                            {
                              "assignments": [
                                3578
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3578,
                                  "mutability": "mutable",
                                  "name": "equitoFee",
                                  "nameLocation": "1951:9:23",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3594,
                                  "src": "1943:17:23",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 3577,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1943:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3586,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3583,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1985:4:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                          "typeString": "contract HoneyRouter01"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                          "typeString": "contract HoneyRouter01"
                                        }
                                      ],
                                      "id": 3582,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1977:7:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3581,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1977:7:23",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3584,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1977:13:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3579,
                                    "name": "router",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2066,
                                    "src": "1963:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IRouter_$2423",
                                      "typeString": "contract IRouter"
                                    }
                                  },
                                  "id": 3580,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1970:6:23",
                                  "memberName": "getFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2328,
                                  "src": "1963:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 3585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1963:28:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1943:48:23"
                            },
                            {
                              "expression": {
                                "id": 3592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3587,
                                  "name": "amountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3563,
                                  "src": "2006:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3591,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 3588,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2017:3:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3589,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2021:5:23",
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "2017:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 3590,
                                    "name": "equitoFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3578,
                                    "src": "2029:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2017:21:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2006:32:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3593,
                              "nodeType": "ExpressionStatement",
                              "src": "2006:32:23"
                            }
                          ]
                        },
                        "id": 3595,
                        "nodeType": "IfStatement",
                        "src": "1786:264:23",
                        "trueBody": {
                          "id": 3576,
                          "nodeType": "Block",
                          "src": "1842:47:23",
                          "statements": [
                            {
                              "expression": {
                                "id": 3574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3571,
                                  "name": "amountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3563,
                                  "src": "1857:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 3572,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1868:3:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3573,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1872:5:23",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "1868:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1857:20:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3575,
                              "nodeType": "ExpressionStatement",
                              "src": "1857:20:23"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3597
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3597,
                            "mutability": "mutable",
                            "name": "amountOut",
                            "nameLocation": "2070:9:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3633,
                            "src": "2062:17:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3596,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2062:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3609,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3602,
                              "name": "tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3547,
                              "src": "2138:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3603,
                              "name": "amountOutMin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3549,
                              "src": "2161:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3606,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2196:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                    "typeString": "contract HoneyRouter01"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                    "typeString": "contract HoneyRouter01"
                                  }
                                ],
                                "id": 3605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2188:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3604,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2188:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2188:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 3598,
                                "name": "executor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3516,
                                "src": "2082:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                                  "typeString": "contract IHoneyExecutor"
                                }
                              },
                              "id": 3599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2091:15:23",
                              "memberName": "swapETHToTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4049,
                              "src": "2082:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256,address) payable external returns (uint256)"
                              }
                            },
                            "id": 3601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 3600,
                                "name": "amountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3563,
                                "src": "2114:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2082:41:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$value",
                              "typeString": "function (address,uint256,address) payable external returns (uint256)"
                            }
                          },
                          "id": 3608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2082:130:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2062:150:23"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3610,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2066,
                                "src": "2229:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRouter_$2423",
                                  "typeString": "contract IRouter"
                                }
                              },
                              "id": 3611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2236:13:23",
                              "memberName": "chainSelector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2414,
                              "src": "2229:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2229:22:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3613,
                            "name": "destinationChainSelector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3551,
                            "src": "2255:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2229:50:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3631,
                          "nodeType": "Block",
                          "src": "2440:257:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3625,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3558,
                                    "src": "2566:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3626,
                                    "name": "destinationChainSelector",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3551,
                                    "src": "2591:24:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3627,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3547,
                                    "src": "2634:8:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3628,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3597,
                                    "src": "2661:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3624,
                                  "name": "_crossChainCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3971,
                                  "src": "2532:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,address,uint256)"
                                  }
                                },
                                "id": 3629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2532:153:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3630,
                              "nodeType": "ExpressionStatement",
                              "src": "2532:153:23"
                            }
                          ]
                        },
                        "id": 3632,
                        "nodeType": "IfStatement",
                        "src": "2225:472:23",
                        "trueBody": {
                          "id": 3623,
                          "nodeType": "Block",
                          "src": "2281:153:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3619,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3558,
                                    "src": "2404:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3620,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3597,
                                    "src": "2412:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3616,
                                        "name": "tokenOut",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3547,
                                        "src": "2381:8:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3615,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1256,
                                      "src": "2374:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 3617,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2374:16:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1256",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2391:12:23",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1368,
                                  "src": "2374:29:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 3621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2374:48:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3622,
                              "nodeType": "ExpressionStatement",
                              "src": "2374:48:23"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "a4c021e9",
                  "id": 3634,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3555,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3554,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1686:13:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1933,
                        "src": "1686:13:23"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1686:13:23"
                    }
                  ],
                  "name": "swapETHToTokens",
                  "nameLocation": "1536:15:23",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3553,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1677:8:23"
                  },
                  "parameters": {
                    "id": 3552,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3547,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "1570:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3634,
                        "src": "1562:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1562:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3549,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "1597:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3634,
                        "src": "1589:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3548,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1589:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3551,
                        "mutability": "mutable",
                        "name": "destinationChainSelector",
                        "nameLocation": "1628:24:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3634,
                        "src": "1620:32:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3550,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1620:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1551:108:23"
                  },
                  "returnParameters": {
                    "id": 3556,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1700:0:23"
                  },
                  "scope": 4008,
                  "src": "1527:1177:23",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4213
                  ],
                  "body": {
                    "id": 3701,
                    "nodeType": "Block",
                    "src": "2911:734:23",
                    "statements": [
                      {
                        "assignments": [
                          3649
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3649,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "2930:6:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3701,
                            "src": "2922:14:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3648,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2922:7:23",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3652,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3650,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "2939:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2939:12:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2922:29:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3657,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3649,
                              "src": "3049:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3660,
                                  "name": "executor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3516,
                                  "src": "3065:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                                    "typeString": "contract IHoneyExecutor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                                    "typeString": "contract IHoneyExecutor"
                                  }
                                ],
                                "id": 3659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3057:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3658,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3057:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3057:17:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3662,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3638,
                              "src": "3076:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3654,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3636,
                                  "src": "3023:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3653,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1256,
                                "src": "3016:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3016:15:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3032:16:23",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1395,
                            "src": "3016:32:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 3663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3016:69:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3664,
                        "nodeType": "ExpressionStatement",
                        "src": "3016:69:23"
                      },
                      {
                        "assignments": [
                          3666
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3666,
                            "mutability": "mutable",
                            "name": "amountOut",
                            "nameLocation": "3106:9:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3701,
                            "src": "3098:17:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3665,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3098:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3677,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3669,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3636,
                              "src": "3157:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3670,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3638,
                              "src": "3179:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3671,
                              "name": "amountOutMin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3640,
                              "src": "3202:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3674,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3237:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                    "typeString": "contract HoneyRouter01"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                    "typeString": "contract HoneyRouter01"
                                  }
                                ],
                                "id": 3673,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3229:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3672,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3229:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3229:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3667,
                              "name": "executor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3516,
                              "src": "3118:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                                "typeString": "contract IHoneyExecutor"
                              }
                            },
                            "id": 3668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3127:15:23",
                            "memberName": "swapTokensToETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4062,
                            "src": "3118:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256,uint256,address) payable external returns (uint256)"
                            }
                          },
                          "id": 3676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3118:135:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3098:155:23"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3678,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2066,
                                "src": "3270:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRouter_$2423",
                                  "typeString": "contract IRouter"
                                }
                              },
                              "id": 3679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3277:13:23",
                              "memberName": "chainSelector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2414,
                              "src": "3270:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3270:22:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3681,
                            "name": "destinationChainSelector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3642,
                            "src": "3296:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3270:50:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3699,
                          "nodeType": "Block",
                          "src": "3468:170:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3693,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3649,
                                    "src": "3576:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3694,
                                    "name": "destinationChainSelector",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3642,
                                    "src": "3584:24:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3695,
                                    "name": "WETH",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3505,
                                    "src": "3610:4:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3696,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3666,
                                    "src": "3616:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3692,
                                  "name": "_crossChainCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3971,
                                  "src": "3560:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,address,uint256)"
                                  }
                                },
                                "id": 3697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3560:66:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3698,
                              "nodeType": "ExpressionStatement",
                              "src": "3560:66:23"
                            }
                          ]
                        },
                        "id": 3700,
                        "nodeType": "IfStatement",
                        "src": "3266:372:23",
                        "trueBody": {
                          "id": 3691,
                          "nodeType": "Block",
                          "src": "3322:140:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3688,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3666,
                                    "src": "3440:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3685,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3649,
                                        "src": "3423:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3684,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3415:8:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 3683,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3415:8:23",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3686,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3415:15:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 3687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3431:8:23",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "3415:24:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 3689,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3415:35:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3690,
                              "nodeType": "ExpressionStatement",
                              "src": "3415:35:23"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "4cbb4505",
                  "id": 3702,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3646,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3645,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2897:13:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1933,
                        "src": "2897:13:23"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2897:13:23"
                    }
                  ],
                  "name": "swapTokensToETH",
                  "nameLocation": "2721:15:23",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3644,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2888:8:23"
                  },
                  "parameters": {
                    "id": 3643,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3636,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "2755:7:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3702,
                        "src": "2747:15:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2747:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3638,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "2781:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3702,
                        "src": "2773:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3637,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2773:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3640,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "2808:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3702,
                        "src": "2800:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3639,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2800:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3642,
                        "mutability": "mutable",
                        "name": "destinationChainSelector",
                        "nameLocation": "2839:24:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3702,
                        "src": "2831:32:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3641,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2831:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:134:23"
                  },
                  "returnParameters": {
                    "id": 3647,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2911:0:23"
                  },
                  "scope": 4008,
                  "src": "2712:933:23",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4226
                  ],
                  "body": {
                    "id": 3772,
                    "nodeType": "Block",
                    "src": "3882:860:23",
                    "statements": [
                      {
                        "assignments": [
                          3719
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3719,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "3901:6:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3772,
                            "src": "3893:14:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3718,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3893:7:23",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3722,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3720,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "3910:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3910:12:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3893:29:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3727,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3719,
                              "src": "4020:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3730,
                                  "name": "executor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3516,
                                  "src": "4036:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                                    "typeString": "contract IHoneyExecutor"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                                    "typeString": "contract IHoneyExecutor"
                                  }
                                ],
                                "id": 3729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4028:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3728,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4028:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4028:17:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3732,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3706,
                              "src": "4047:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3724,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3704,
                                  "src": "3994:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3723,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1256,
                                "src": "3987:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3987:15:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4003:16:23",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1395,
                            "src": "3987:32:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 3733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3987:69:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3734,
                        "nodeType": "ExpressionStatement",
                        "src": "3987:69:23"
                      },
                      {
                        "assignments": [
                          3736
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3736,
                            "mutability": "mutable",
                            "name": "amountOut",
                            "nameLocation": "4077:9:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3772,
                            "src": "4069:17:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3735,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4069:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3748,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3739,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3704,
                              "src": "4131:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3740,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3706,
                              "src": "4153:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3741,
                              "name": "tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3708,
                              "src": "4176:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3742,
                              "name": "amountOutMin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3710,
                              "src": "4199:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3745,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4234:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                    "typeString": "contract HoneyRouter01"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                    "typeString": "contract HoneyRouter01"
                                  }
                                ],
                                "id": 3744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4226:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3743,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4226:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4226:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3737,
                              "name": "executor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3516,
                              "src": "4089:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                                "typeString": "contract IHoneyExecutor"
                              }
                            },
                            "id": 3738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4098:18:23",
                            "memberName": "swapTokensToTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4077,
                            "src": "4089:27:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256,address,uint256,address) payable external returns (uint256)"
                            }
                          },
                          "id": 3747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4089:161:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4069:181:23"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3749,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2066,
                                "src": "4267:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRouter_$2423",
                                  "typeString": "contract IRouter"
                                }
                              },
                              "id": 3750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4274:13:23",
                              "memberName": "chainSelector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2414,
                              "src": "4267:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 3751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4267:22:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3752,
                            "name": "destinationChainSelector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3712,
                            "src": "4293:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4267:50:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3770,
                          "nodeType": "Block",
                          "src": "4478:257:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3764,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3719,
                                    "src": "4604:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3765,
                                    "name": "destinationChainSelector",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3712,
                                    "src": "4629:24:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 3766,
                                    "name": "tokenOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3708,
                                    "src": "4672:8:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3767,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3736,
                                    "src": "4699:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 3763,
                                  "name": "_crossChainCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3971,
                                  "src": "4570:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,address,uint256)"
                                  }
                                },
                                "id": 3768,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4570:153:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3769,
                              "nodeType": "ExpressionStatement",
                              "src": "4570:153:23"
                            }
                          ]
                        },
                        "id": 3771,
                        "nodeType": "IfStatement",
                        "src": "4263:472:23",
                        "trueBody": {
                          "id": 3762,
                          "nodeType": "Block",
                          "src": "4319:153:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3758,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3719,
                                    "src": "4442:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3759,
                                    "name": "amountOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3736,
                                    "src": "4450:9:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 3755,
                                        "name": "tokenOut",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3708,
                                        "src": "4419:8:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3754,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1256,
                                      "src": "4412:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 3756,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4412:16:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1256",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3757,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4429:12:23",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1368,
                                  "src": "4412:29:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 3760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4412:48:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3761,
                              "nodeType": "ExpressionStatement",
                              "src": "4412:48:23"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "a1e83209",
                  "id": 3773,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3716,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3715,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "3868:13:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1933,
                        "src": "3868:13:23"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3868:13:23"
                    }
                  ],
                  "name": "swapTokensToTokens",
                  "nameLocation": "3662:18:23",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3714,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3859:8:23"
                  },
                  "parameters": {
                    "id": 3713,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3704,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "3699:7:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3773,
                        "src": "3691:15:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3703,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3691:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3706,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "3725:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3773,
                        "src": "3717:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3705,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3717:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3708,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "3752:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3773,
                        "src": "3744:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3707,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3744:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3710,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "3779:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3773,
                        "src": "3771:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3709,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3771:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3712,
                        "mutability": "mutable",
                        "name": "destinationChainSelector",
                        "nameLocation": "3810:24:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3773,
                        "src": "3802:32:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3711,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3802:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3680:161:23"
                  },
                  "returnParameters": {
                    "id": 3717,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3882:0:23"
                  },
                  "scope": 4008,
                  "src": "3653:1089:23",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3786,
                    "nodeType": "Block",
                    "src": "4888:70:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3783,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3775,
                              "src": "4944:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3781,
                              "name": "EquitoMessageLibrary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2504,
                              "src": "4906:20:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_EquitoMessageLibrary_$2504_$",
                                "typeString": "type(library EquitoMessageLibrary)"
                              }
                            },
                            "id": 3782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4927:16:23",
                            "memberName": "addressToBytes64",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2481,
                            "src": "4906:37:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_struct$_bytes64_$2431_memory_ptr_$",
                              "typeString": "function (address) pure returns (struct bytes64 memory)"
                            }
                          },
                          "id": 3784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4906:44:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                            "typeString": "struct bytes64 memory"
                          }
                        },
                        "functionReturnParameters": 3780,
                        "id": 3785,
                        "nodeType": "Return",
                        "src": "4899:51:23"
                      }
                    ]
                  },
                  "functionSelector": "ef88e0e1",
                  "id": 3787,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toBase64",
                  "nameLocation": "4827:8:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3776,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3775,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4844:5:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3787,
                        "src": "4836:13:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3774,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4836:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4835:15:23"
                  },
                  "returnParameters": {
                    "id": 3780,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3779,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3787,
                        "src": "4872:14:23",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_bytes64_$2431_memory_ptr",
                          "typeString": "struct bytes64"
                        },
                        "typeName": {
                          "id": 3778,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3777,
                            "name": "bytes64",
                            "nameLocations": [
                              "4872:7:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2431,
                            "src": "4872:7:23"
                          },
                          "referencedDeclaration": 2431,
                          "src": "4872:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_bytes64_$2431_storage_ptr",
                            "typeString": "struct bytes64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4871:16:23"
                  },
                  "scope": 4008,
                  "src": "4818:140:23",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    4231
                  ],
                  "body": {
                    "id": 3801,
                    "nodeType": "Block",
                    "src": "5031:54:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3797,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5071:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                    "typeString": "contract HoneyRouter01"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                    "typeString": "contract HoneyRouter01"
                                  }
                                ],
                                "id": 3796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5063:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3795,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5063:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5063:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3793,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2066,
                              "src": "5049:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRouter_$2423",
                                "typeString": "contract IRouter"
                              }
                            },
                            "id": 3794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5056:6:23",
                            "memberName": "getFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2328,
                            "src": "5049:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5049:28:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 3792,
                        "id": 3800,
                        "nodeType": "Return",
                        "src": "5042:35:23"
                      }
                    ]
                  },
                  "functionSelector": "5c42132e",
                  "id": 3802,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEquitoFee",
                  "nameLocation": "4975:12:23",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3789,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5004:8:23"
                  },
                  "parameters": {
                    "id": 3788,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4987:2:23"
                  },
                  "returnParameters": {
                    "id": 3792,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3791,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3802,
                        "src": "5022:7:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3790,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5022:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5021:9:23"
                  },
                  "scope": 4008,
                  "src": "4966:119:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3825,
                    "nodeType": "Block",
                    "src": "5271:74:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3820,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3804,
                              "src": "5309:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3821,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3806,
                              "src": "5319:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3822,
                              "name": "tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3808,
                              "src": "5328:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3818,
                              "name": "executor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3516,
                              "src": "5289:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                                "typeString": "contract IHoneyExecutor"
                              }
                            },
                            "id": 3819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5298:10:23",
                            "memberName": "bestRouter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4093,
                            "src": "5289:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$_t_address_$_t_struct$_Router_$4038_memory_ptr_$",
                              "typeString": "function (uint256,address,address) view external returns (uint256,address,struct IHoneyExecutor.Router memory)"
                            }
                          },
                          "id": 3823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5289:48:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_struct$_Router_$4038_memory_ptr_$",
                            "typeString": "tuple(uint256,address,struct IHoneyExecutor.Router memory)"
                          }
                        },
                        "functionReturnParameters": 3817,
                        "id": 3824,
                        "nodeType": "Return",
                        "src": "5282:55:23"
                      }
                    ]
                  },
                  "functionSelector": "61ee1031",
                  "id": 3826,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "bestRouter",
                  "nameLocation": "5102:10:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3804,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "5131:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3826,
                        "src": "5123:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3803,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5123:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3806,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "5158:7:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3826,
                        "src": "5150:15:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5150:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3808,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "5184:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3826,
                        "src": "5176:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3807,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5176:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5112:87:23"
                  },
                  "returnParameters": {
                    "id": 3817,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3811,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3826,
                        "src": "5223:7:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3810,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5223:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3813,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3826,
                        "src": "5232:7:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3812,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5232:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3816,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3826,
                        "src": "5241:28:23",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Router_$4038_memory_ptr",
                          "typeString": "struct IHoneyExecutor.Router"
                        },
                        "typeName": {
                          "id": 3815,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3814,
                            "name": "IHoneyExecutor.Router",
                            "nameLocations": [
                              "5241:14:23",
                              "5256:6:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4038,
                            "src": "5241:21:23"
                          },
                          "referencedDeclaration": 4038,
                          "src": "5241:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Router_$4038_storage_ptr",
                            "typeString": "struct IHoneyExecutor.Router"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5222:48:23"
                  },
                  "scope": 4008,
                  "src": "5093:252:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3840,
                    "nodeType": "Block",
                    "src": "5519:54:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 3838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3834,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3513,
                            "src": "5530:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                              "typeString": "contract IHoneyFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3836,
                                "name": "newFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3828,
                                "src": "5554:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3835,
                              "name": "IHoneyFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4164,
                              "src": "5540:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHoneyFactory_$4164_$",
                                "typeString": "type(contract IHoneyFactory)"
                              }
                            },
                            "id": 3837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5540:25:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                              "typeString": "contract IHoneyFactory"
                            }
                          },
                          "src": "5530:35:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                            "typeString": "contract IHoneyFactory"
                          }
                        },
                        "id": 3839,
                        "nodeType": "ExpressionStatement",
                        "src": "5530:35:23"
                      }
                    ]
                  },
                  "functionSelector": "d9f165dc",
                  "id": 3841,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3831,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "5499:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 3832,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3830,
                        "name": "onlyRole",
                        "nameLocations": [
                          "5490:8:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "5490:8:23"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5490:28:23"
                    }
                  ],
                  "name": "updateFactory",
                  "nameLocation": "5431:13:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3829,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3828,
                        "mutability": "mutable",
                        "name": "newFactory",
                        "nameLocation": "5463:10:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3841,
                        "src": "5455:18:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3827,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5455:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5444:36:23"
                  },
                  "returnParameters": {
                    "id": 3833,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5519:0:23"
                  },
                  "scope": 4008,
                  "src": "5422:151:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3855,
                    "nodeType": "Block",
                    "src": "5680:57:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 3853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3849,
                            "name": "executor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3516,
                            "src": "5691:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                              "typeString": "contract IHoneyExecutor"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3851,
                                "name": "newExecutor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3843,
                                "src": "5717:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3850,
                              "name": "IHoneyExecutor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4113,
                              "src": "5702:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHoneyExecutor_$4113_$",
                                "typeString": "type(contract IHoneyExecutor)"
                              }
                            },
                            "id": 3852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5702:27:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                              "typeString": "contract IHoneyExecutor"
                            }
                          },
                          "src": "5691:38:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IHoneyExecutor_$4113",
                            "typeString": "contract IHoneyExecutor"
                          }
                        },
                        "id": 3854,
                        "nodeType": "ExpressionStatement",
                        "src": "5691:38:23"
                      }
                    ]
                  },
                  "functionSelector": "74936c16",
                  "id": 3856,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3846,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "5660:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 3847,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3845,
                        "name": "onlyRole",
                        "nameLocations": [
                          "5651:8:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "5651:8:23"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5651:28:23"
                    }
                  ],
                  "name": "updateExecutor",
                  "nameLocation": "5590:14:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3844,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3843,
                        "mutability": "mutable",
                        "name": "newExecutor",
                        "nameLocation": "5623:11:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3856,
                        "src": "5615:19:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3842,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5615:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5604:37:23"
                  },
                  "returnParameters": {
                    "id": 3848,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5680:0:23"
                  },
                  "scope": 4008,
                  "src": "5581:156:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3865,
                    "nodeType": "Block",
                    "src": "5800:27:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3862,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1991,
                            "src": "5811:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5811:8:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3864,
                        "nodeType": "ExpressionStatement",
                        "src": "5811:8:23"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 3866,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3859,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "5780:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 3860,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3858,
                        "name": "onlyRole",
                        "nameLocations": [
                          "5771:8:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "5771:8:23"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5771:28:23"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "5754:5:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3857,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5759:2:23"
                  },
                  "returnParameters": {
                    "id": 3861,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5800:0:23"
                  },
                  "scope": 4008,
                  "src": "5745:82:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3875,
                    "nodeType": "Block",
                    "src": "5892:29:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3872,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2007,
                            "src": "5903:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5903:10:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3874,
                        "nodeType": "ExpressionStatement",
                        "src": "5903:10:23"
                      }
                    ]
                  },
                  "functionSelector": "f7b188a5",
                  "id": 3876,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 3869,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "5872:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 3870,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3868,
                        "name": "onlyRole",
                        "nameLocations": [
                          "5863:8:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "5863:8:23"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5863:28:23"
                    }
                  ],
                  "name": "unPause",
                  "nameLocation": "5844:7:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3867,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5851:2:23"
                  },
                  "returnParameters": {
                    "id": 3871,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5892:0:23"
                  },
                  "scope": 4008,
                  "src": "5835:86:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3927,
                    "nodeType": "Block",
                    "src": "6153:532:23",
                    "statements": [
                      {
                        "assignments": [
                          3888
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3888,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "6172:5:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3927,
                            "src": "6164:13:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3887,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6164:7:23",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3894,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3891,
                              "name": "peerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3880,
                              "src": "6193:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3892,
                              "name": "sourceChainSelector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3878,
                              "src": "6204:19:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3889,
                              "name": "tokenMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3510,
                              "src": "6180:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITokenMap_$4253",
                                "typeString": "contract ITokenMap"
                              }
                            },
                            "id": 3890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6189:3:23",
                            "memberName": "get",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4252,
                            "src": "6180:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (address,uint256) view external returns (address)"
                            }
                          },
                          "id": 3893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6180:44:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6164:60:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3898,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3888,
                              "src": "6305:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3899,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3884,
                              "src": "6312:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3895,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3513,
                              "src": "6280:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                                "typeString": "contract IHoneyFactory"
                              }
                            },
                            "id": 3897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6288:16:23",
                            "memberName": "withdrawFromPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4152,
                            "src": "6280:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 3900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6280:42:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3901,
                        "nodeType": "ExpressionStatement",
                        "src": "6280:42:23"
                      },
                      {
                        "assignments": [
                          3903,
                          3905
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3903,
                            "mutability": "mutable",
                            "name": "finalAmountOut",
                            "nameLocation": "6344:14:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3927,
                            "src": "6336:22:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3902,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6336:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3905,
                            "mutability": "mutable",
                            "name": "honeyFeeAmount",
                            "nameLocation": "6368:14:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3927,
                            "src": "6360:22:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3904,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6360:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3910,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3908,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3884,
                              "src": "6419:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3906,
                              "name": "HoneyFeeMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4310,
                              "src": "6386:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_HoneyFeeMath_$4310_$",
                                "typeString": "type(library HoneyFeeMath)"
                              }
                            },
                            "id": 3907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6399:5:23",
                            "memberName": "split",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4285,
                            "src": "6386:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint256,uint256)"
                            }
                          },
                          "id": 3909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6386:53:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6335:104:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3915,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3882,
                              "src": "6530:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3916,
                              "name": "finalAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3903,
                              "src": "6540:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3912,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3888,
                                  "src": "6510:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3911,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1256,
                                "src": "6503:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6503:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6517:12:23",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1368,
                            "src": "6503:26:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6503:52:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3918,
                        "nodeType": "ExpressionStatement",
                        "src": "6503:52:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3923,
                              "name": "TREASURY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3507,
                              "src": "6652:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3924,
                              "name": "honeyFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3905,
                              "src": "6662:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3920,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3888,
                                  "src": "6632:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3919,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1256,
                                "src": "6625:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1256_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 3921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6625:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1256",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6639:12:23",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1368,
                            "src": "6625:26:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6625:52:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3926,
                        "nodeType": "ExpressionStatement",
                        "src": "6625:52:23"
                      }
                    ]
                  },
                  "id": 3928,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_releasedTokens",
                  "nameLocation": "6000:15:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3885,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3878,
                        "mutability": "mutable",
                        "name": "sourceChainSelector",
                        "nameLocation": "6034:19:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3928,
                        "src": "6026:27:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3877,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6026:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3880,
                        "mutability": "mutable",
                        "name": "peerToken",
                        "nameLocation": "6072:9:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3928,
                        "src": "6064:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3879,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6064:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3882,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "6100:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3928,
                        "src": "6092:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3881,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6092:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3884,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "6127:9:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3928,
                        "src": "6119:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3883,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6119:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6015:128:23"
                  },
                  "returnParameters": {
                    "id": 3886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6153:0:23"
                  },
                  "scope": 4008,
                  "src": "5991:694:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3970,
                    "nodeType": "Block",
                    "src": "6924:305:23",
                    "statements": [
                      {
                        "assignments": [
                          3940
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3940,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "6948:4:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3970,
                            "src": "6935:17:23",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 3939,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6935:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3947,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3943,
                              "name": "tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3934,
                              "src": "6966:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3944,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3930,
                              "src": "6976:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3945,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3936,
                              "src": "6986:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3941,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6955:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6959:6:23",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "6955:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 3946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6955:41:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6935:61:23"
                      },
                      {
                        "assignments": [
                          3949
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3949,
                            "mutability": "mutable",
                            "name": "equitoFee",
                            "nameLocation": "7017:9:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 3970,
                            "src": "7009:17:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3948,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7009:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3957,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3954,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7051:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                    "typeString": "contract HoneyRouter01"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HoneyRouter01_$4008",
                                    "typeString": "contract HoneyRouter01"
                                  }
                                ],
                                "id": 3953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7043:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3952,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7043:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7043:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3950,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2066,
                              "src": "7029:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRouter_$2423",
                                "typeString": "contract IRouter"
                              }
                            },
                            "id": 3951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7036:6:23",
                            "memberName": "getFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2328,
                            "src": "7029:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 3956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7029:28:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7009:48:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 3963,
                                "name": "peers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2072,
                                "src": "7121:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_bytes64_$2431_storage_$",
                                  "typeString": "mapping(uint256 => struct bytes64 storage ref)"
                                }
                              },
                              "id": 3965,
                              "indexExpression": {
                                "id": 3964,
                                "name": "destinationChainSelector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3932,
                                "src": "7127:24:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7121:31:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_bytes64_$2431_storage",
                                "typeString": "struct bytes64 storage ref"
                              }
                            },
                            {
                              "id": 3966,
                              "name": "destinationChainSelector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3932,
                              "src": "7167:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3967,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3940,
                              "src": "7206:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_bytes64_$2431_storage",
                                "typeString": "struct bytes64 storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_bytes64_$2431_storage",
                                  "typeString": "struct bytes64 storage ref"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 3958,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2066,
                                "src": "7070:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRouter_$2423",
                                  "typeString": "contract IRouter"
                                }
                              },
                              "id": 3960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7077:11:23",
                              "memberName": "sendMessage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2374,
                              "src": "7070:18:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_struct$_bytes64_$2431_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct bytes64 memory,uint256,bytes memory) payable external returns (bytes32)"
                              }
                            },
                            "id": 3962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 3961,
                                "name": "equitoFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3949,
                                "src": "7096:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "7070:36:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_struct$_bytes64_$2431_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$value",
                              "typeString": "function (struct bytes64 memory,uint256,bytes memory) payable external returns (bytes32)"
                            }
                          },
                          "id": 3968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7070:151:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 3969,
                        "nodeType": "ExpressionStatement",
                        "src": "7070:151:23"
                      }
                    ]
                  },
                  "id": 3971,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_crossChainCall",
                  "nameLocation": "6767:15:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3937,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3930,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "6801:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3971,
                        "src": "6793:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3929,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6793:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3932,
                        "mutability": "mutable",
                        "name": "destinationChainSelector",
                        "nameLocation": "6828:24:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3971,
                        "src": "6820:32:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3931,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6820:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3934,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "6871:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3971,
                        "src": "6863:16:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3933,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6863:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3936,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "6898:9:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 3971,
                        "src": "6890:17:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3935,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6890:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6782:132:23"
                  },
                  "returnParameters": {
                    "id": 3938,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6924:0:23"
                  },
                  "scope": 4008,
                  "src": "6758:471:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    2283
                  ],
                  "body": {
                    "id": 4006,
                    "nodeType": "Block",
                    "src": "7366:381:23",
                    "statements": [
                      {
                        "assignments": [
                          3981,
                          3983,
                          3985
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3981,
                            "mutability": "mutable",
                            "name": "tokenOut",
                            "nameLocation": "7427:8:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 4006,
                            "src": "7419:16:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3980,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7419:7:23",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3983,
                            "mutability": "mutable",
                            "name": "receiver",
                            "nameLocation": "7445:8:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 4006,
                            "src": "7437:16:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3982,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7437:7:23",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3985,
                            "mutability": "mutable",
                            "name": "amountOut",
                            "nameLocation": "7463:9:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 4006,
                            "src": "7455:17:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3984,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7455:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3997,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3988,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3976,
                              "src": "7501:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 3990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7521:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3989,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7521:7:23",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 3992,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7530:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3991,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7530:7:23",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 3994,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7539:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 3993,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7539:7:23",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 3995,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7520:27:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                                "typeString": "tuple(type(address),type(address),type(uint256))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                                "typeString": "tuple(type(address),type(address),type(uint256))"
                              }
                            ],
                            "expression": {
                              "id": 3986,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "7476:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 3987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7480:6:23",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "7476:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7476:82:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                            "typeString": "tuple(address payable,address payable,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7418:140:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3999,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3974,
                                "src": "7631:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                                  "typeString": "struct EquitoMessage calldata"
                                }
                              },
                              "id": 4000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7639:19:23",
                              "memberName": "sourceChainSelector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2438,
                              "src": "7631:27:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4001,
                              "name": "tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3981,
                              "src": "7673:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4002,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3983,
                              "src": "7696:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4003,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3985,
                              "src": "7719:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3998,
                            "name": "_releasedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3928,
                            "src": "7601:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,address,uint256)"
                            }
                          },
                          "id": 4004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7601:138:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4005,
                        "nodeType": "ExpressionStatement",
                        "src": "7601:138:23"
                      }
                    ]
                  },
                  "id": 4007,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_receiveMessageFromPeer",
                  "nameLocation": "7246:23:23",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 3978,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7357:8:23"
                  },
                  "parameters": {
                    "id": 3977,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3974,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "7303:7:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4007,
                        "src": "7280:30:23",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EquitoMessage_$2453_calldata_ptr",
                          "typeString": "struct EquitoMessage"
                        },
                        "typeName": {
                          "id": 3973,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3972,
                            "name": "EquitoMessage",
                            "nameLocations": [
                              "7280:13:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2453,
                            "src": "7280:13:23"
                          },
                          "referencedDeclaration": 2453,
                          "src": "7280:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EquitoMessage_$2453_storage_ptr",
                            "typeString": "struct EquitoMessage"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3976,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7336:4:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 4007,
                        "src": "7321:19:23",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 3975,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7321:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7269:78:23"
                  },
                  "returnParameters": {
                    "id": 3979,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7366:0:23"
                  },
                  "scope": 4008,
                  "src": "7237:510:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 4009,
              "src": "854:6896:23",
              "usedErrors": [
                305,
                308,
                392,
                397,
                1335,
                1616,
                1621,
                1624,
                1913,
                1916,
                2512,
                2515,
                2527,
                2530,
                2573
              ],
              "usedEvents": [
                317,
                326,
                335,
                403,
                1905,
                1910
              ]
            }
          ],
          "src": "33:7719:23"
        },
        "id": 23
      },
      "contracts/src/interfaces/IHoneyETHPool.sol": {
        "ast": {
          "absolutePath": "contracts/src/interfaces/IHoneyETHPool.sol",
          "exportedSymbols": {
            "IHoneyETHPool": [
              4031
            ]
          },
          "id": 4032,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4010,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:24"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IHoneyETHPool",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 4031,
              "linearizedBaseContracts": [
                4031
              ],
              "name": "IHoneyETHPool",
              "nameLocation": "72:13:24",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "e8078d94",
                  "id": 4013,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidity",
                  "nameLocation": "102:12:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4011,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "114:2:24"
                  },
                  "returnParameters": {
                    "id": 4012,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "133:0:24"
                  },
                  "scope": 4031,
                  "src": "93:41:24",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9d7de6b3",
                  "id": 4020,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidity",
                  "nameLocation": "151:15:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4018,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4015,
                        "mutability": "mutable",
                        "name": "lpTokens",
                        "nameLocation": "185:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4020,
                        "src": "177:16:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4014,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "177:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4017,
                        "mutability": "mutable",
                        "name": "secondaryChainSelector",
                        "nameLocation": "212:22:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4020,
                        "src": "204:30:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4016,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "204:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "166:75:24"
                  },
                  "returnParameters": {
                    "id": 4019,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "258:0:24"
                  },
                  "scope": 4031,
                  "src": "142:117:24",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d0e30db0",
                  "id": 4023,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "276:7:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4021,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "283:2:24"
                  },
                  "returnParameters": {
                    "id": 4022,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "302:0:24"
                  },
                  "scope": 4031,
                  "src": "267:36:24",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "00f714ce",
                  "id": 4030,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "320:8:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4028,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4025,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "337:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4030,
                        "src": "329:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4024,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "329:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4027,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "353:2:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4030,
                        "src": "345:10:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4026,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "345:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "328:28:24"
                  },
                  "returnParameters": {
                    "id": 4029,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "365:0:24"
                  },
                  "scope": 4031,
                  "src": "311:55:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4032,
              "src": "62:307:24",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "33:338:24"
        },
        "id": 24
      },
      "contracts/src/interfaces/IHoneyExecutor.sol": {
        "ast": {
          "absolutePath": "contracts/src/interfaces/IHoneyExecutor.sol",
          "exportedSymbols": {
            "IHoneyExecutor": [
              4113
            ]
          },
          "id": 4114,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4033,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:25"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IHoneyExecutor",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 4113,
              "linearizedBaseContracts": [
                4113
              ],
              "name": "IHoneyExecutor",
              "nameLocation": "72:14:25",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IHoneyExecutor.Router",
                  "id": 4038,
                  "members": [
                    {
                      "constant": false,
                      "id": 4035,
                      "mutability": "mutable",
                      "name": "name",
                      "nameLocation": "169:4:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 4038,
                      "src": "162:11:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 4034,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "162:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4037,
                      "mutability": "mutable",
                      "name": "routerURI",
                      "nameLocation": "191:9:25",
                      "nodeType": "VariableDeclaration",
                      "scope": 4038,
                      "src": "184:16:25",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 4036,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "184:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Router",
                  "nameLocation": "144:6:25",
                  "nodeType": "StructDefinition",
                  "scope": 4113,
                  "src": "137:71:25",
                  "visibility": "public"
                },
                {
                  "functionSelector": "d219d1f3",
                  "id": 4049,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapETHToTokens",
                  "nameLocation": "225:15:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4045,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4040,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "259:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4049,
                        "src": "251:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4039,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "251:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4042,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "286:12:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4049,
                        "src": "278:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4041,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "278:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4044,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "317:2:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4049,
                        "src": "309:10:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4043,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "240:86:25"
                  },
                  "returnParameters": {
                    "id": 4048,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4047,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4049,
                        "src": "353:7:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4046,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "353:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "352:9:25"
                  },
                  "scope": 4113,
                  "src": "216:146:25",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "95eb0870",
                  "id": 4062,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensToETH",
                  "nameLocation": "379:15:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4058,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4051,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "413:7:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4062,
                        "src": "405:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4050,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4053,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "439:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4062,
                        "src": "431:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4052,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "431:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4055,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "466:12:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4062,
                        "src": "458:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "458:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4057,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "497:2:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4062,
                        "src": "489:10:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4056,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "489:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "394:112:25"
                  },
                  "returnParameters": {
                    "id": 4061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4060,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4062,
                        "src": "533:7:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4059,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "533:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "532:9:25"
                  },
                  "scope": 4113,
                  "src": "370:172:25",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fc7a6a23",
                  "id": 4077,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensToTokens",
                  "nameLocation": "559:18:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4073,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4064,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "596:7:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4077,
                        "src": "588:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4063,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "588:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4066,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "622:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4077,
                        "src": "614:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4065,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "614:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4068,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "649:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4077,
                        "src": "641:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "641:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4070,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "676:12:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4077,
                        "src": "668:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "668:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4072,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "707:2:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4077,
                        "src": "699:10:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4071,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "699:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "577:139:25"
                  },
                  "returnParameters": {
                    "id": 4076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4075,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4077,
                        "src": "743:7:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4074,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "743:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "742:9:25"
                  },
                  "scope": 4113,
                  "src": "550:202:25",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "61ee1031",
                  "id": 4093,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "bestRouter",
                  "nameLocation": "769:10:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4079,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "798:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "790:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4078,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4081,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "825:7:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "817:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4080,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "817:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4083,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "851:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "843:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4082,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "843:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "779:87:25"
                  },
                  "returnParameters": {
                    "id": 4092,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4086,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "890:7:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4085,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4088,
                        "mutability": "mutable",
                        "name": "routerId",
                        "nameLocation": "907:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "899:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4087,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "899:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4091,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "917:13:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Router_$4038_memory_ptr",
                          "typeString": "struct IHoneyExecutor.Router"
                        },
                        "typeName": {
                          "id": 4090,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4089,
                            "name": "Router",
                            "nameLocations": [
                              "917:6:25"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4038,
                            "src": "917:6:25"
                          },
                          "referencedDeclaration": 4038,
                          "src": "917:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Router_$4038_storage_ptr",
                            "typeString": "struct IHoneyExecutor.Router"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:42:25"
                  },
                  "scope": 4113,
                  "src": "760:172:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b89eb11d",
                  "id": 4102,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addRouter",
                  "nameLocation": "949:9:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4095,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "985:4:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4102,
                        "src": "969:20:25",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 4094,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "969:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4097,
                        "mutability": "mutable",
                        "name": "routerURI",
                        "nameLocation": "1016:9:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4102,
                        "src": "1000:25:25",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 4096,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1000:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4099,
                        "mutability": "mutable",
                        "name": "routerId",
                        "nameLocation": "1044:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4102,
                        "src": "1036:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4098,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1036:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "958:101:25"
                  },
                  "returnParameters": {
                    "id": 4101,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1068:0:25"
                  },
                  "scope": 4113,
                  "src": "940:129:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6ae0b154",
                  "id": 4107,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeRouter",
                  "nameLocation": "1086:12:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4104,
                        "mutability": "mutable",
                        "name": "routerId",
                        "nameLocation": "1107:8:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4107,
                        "src": "1099:16:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1099:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1098:18:25"
                  },
                  "returnParameters": {
                    "id": 4106,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1125:0:25"
                  },
                  "scope": 4113,
                  "src": "1077:49:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a5be5f7a",
                  "id": 4112,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRouterCount",
                  "nameLocation": "1143:14:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1157:2:25"
                  },
                  "returnParameters": {
                    "id": 4111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4110,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4112,
                        "src": "1183:7:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4109,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1183:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1182:9:25"
                  },
                  "scope": 4113,
                  "src": "1134:58:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4114,
              "src": "62:1133:25",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "33:1164:25"
        },
        "id": 25
      },
      "contracts/src/interfaces/IHoneyFactory.sol": {
        "ast": {
          "absolutePath": "contracts/src/interfaces/IHoneyFactory.sol",
          "exportedSymbols": {
            "IHoneyFactory": [
              4164
            ]
          },
          "id": 4165,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4115,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:26"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IHoneyFactory",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 4164,
              "linearizedBaseContracts": [
                4164
              ],
              "name": "IHoneyFactory",
              "nameLocation": "72:13:26",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "40627f7438e2974529d03c9b047342d738a7a1759fed232175525a8c048c9444",
                  "id": 4123,
                  "name": "ReleasedTokens",
                  "nameLocation": "99:14:26",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4117,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sourceChainSelector",
                        "nameLocation": "132:19:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4123,
                        "src": "124:27:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4116,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "124:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4119,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "170:8:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4123,
                        "src": "162:16:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4118,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "162:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4121,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "197:6:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4123,
                        "src": "189:14:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "189:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "113:97:26"
                  },
                  "src": "93:118:26"
                },
                {
                  "functionSelector": "9049f9d2",
                  "id": 4128,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPool",
                  "nameLocation": "228:10:26",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4125,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "247:5:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4128,
                        "src": "239:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4124,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "239:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "238:15:26"
                  },
                  "returnParameters": {
                    "id": 4127,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "262:0:26"
                  },
                  "scope": 4164,
                  "src": "219:44:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bbe4f6db",
                  "id": 4135,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPool",
                  "nameLocation": "280:7:26",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4130,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "296:5:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4135,
                        "src": "288:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4129,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "288:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "287:15:26"
                  },
                  "returnParameters": {
                    "id": 4134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4133,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4135,
                        "src": "326:7:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "326:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "325:9:26"
                  },
                  "scope": 4164,
                  "src": "271:64:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3fc8cef3",
                  "id": 4140,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "weth",
                  "nameLocation": "352:4:26",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4136,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "356:2:26"
                  },
                  "returnParameters": {
                    "id": 4139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4138,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4140,
                        "src": "382:7:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4137,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "382:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "381:9:26"
                  },
                  "scope": 4164,
                  "src": "343:48:26",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5c42132e",
                  "id": 4145,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEquitoFee",
                  "nameLocation": "408:12:26",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4141,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "420:2:26"
                  },
                  "returnParameters": {
                    "id": 4144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4143,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4145,
                        "src": "446:7:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4142,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "445:9:26"
                  },
                  "scope": 4164,
                  "src": "399:56:26",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c1bf9e58",
                  "id": 4152,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawFromPool",
                  "nameLocation": "472:16:26",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4147,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "497:5:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4152,
                        "src": "489:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "489:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4149,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "512:6:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4152,
                        "src": "504:14:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "504:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "488:31:26"
                  },
                  "returnParameters": {
                    "id": 4151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "528:0:26"
                  },
                  "scope": 4164,
                  "src": "463:66:26",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a628b47f",
                  "id": 4163,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "crossChainCall",
                  "nameLocation": "546:14:26",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4154,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "579:8:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4163,
                        "src": "571:16:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4153,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "571:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4156,
                        "mutability": "mutable",
                        "name": "destinationChainSelector",
                        "nameLocation": "606:24:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4163,
                        "src": "598:32:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4155,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "598:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4158,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "649:5:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4163,
                        "src": "641:13:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4157,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "641:7:26",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4160,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "673:6:26",
                        "nodeType": "VariableDeclaration",
                        "scope": 4163,
                        "src": "665:14:26",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4159,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "665:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "560:126:26"
                  },
                  "returnParameters": {
                    "id": 4162,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "703:0:26"
                  },
                  "scope": 4164,
                  "src": "537:167:26",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4165,
              "src": "62:645:26",
              "usedErrors": [],
              "usedEvents": [
                4123
              ]
            }
          ],
          "src": "33:676:26"
        },
        "id": 26
      },
      "contracts/src/interfaces/IHoneyPool.sol": {
        "ast": {
          "absolutePath": "contracts/src/interfaces/IHoneyPool.sol",
          "exportedSymbols": {
            "IHoneyPool": [
              4191
            ]
          },
          "id": 4192,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4166,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:27"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IHoneyPool",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 4191,
              "linearizedBaseContracts": [
                4191
              ],
              "name": "IHoneyPool",
              "nameLocation": "72:10:27",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "51c6590a",
                  "id": 4171,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidity",
                  "nameLocation": "99:12:27",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4168,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "120:6:27",
                        "nodeType": "VariableDeclaration",
                        "scope": 4171,
                        "src": "112:14:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4167,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "112:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "111:16:27"
                  },
                  "returnParameters": {
                    "id": 4170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "136:0:27"
                  },
                  "scope": 4191,
                  "src": "90:47:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "9d7de6b3",
                  "id": 4178,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidity",
                  "nameLocation": "154:15:27",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4173,
                        "mutability": "mutable",
                        "name": "lpTokens",
                        "nameLocation": "188:8:27",
                        "nodeType": "VariableDeclaration",
                        "scope": 4178,
                        "src": "180:16:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4172,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "180:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4175,
                        "mutability": "mutable",
                        "name": "secondaryChainSelector",
                        "nameLocation": "215:22:27",
                        "nodeType": "VariableDeclaration",
                        "scope": 4178,
                        "src": "207:30:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4174,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "207:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "169:75:27"
                  },
                  "returnParameters": {
                    "id": 4177,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "261:0:27"
                  },
                  "scope": 4191,
                  "src": "145:117:27",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b6b55f25",
                  "id": 4183,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "279:7:27",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4180,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "295:6:27",
                        "nodeType": "VariableDeclaration",
                        "scope": 4183,
                        "src": "287:14:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4179,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "287:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "286:16:27"
                  },
                  "returnParameters": {
                    "id": 4182,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "311:0:27"
                  },
                  "scope": 4191,
                  "src": "270:42:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "00f714ce",
                  "id": 4190,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "329:8:27",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4185,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "346:6:27",
                        "nodeType": "VariableDeclaration",
                        "scope": 4190,
                        "src": "338:14:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4184,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "338:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4187,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "362:2:27",
                        "nodeType": "VariableDeclaration",
                        "scope": 4190,
                        "src": "354:10:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4186,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "354:7:27",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "337:28:27"
                  },
                  "returnParameters": {
                    "id": 4189,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "374:0:27"
                  },
                  "scope": 4191,
                  "src": "320:55:27",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4192,
              "src": "62:316:27",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "33:347:27"
        },
        "id": 27
      },
      "contracts/src/interfaces/IHoneyRouter01.sol": {
        "ast": {
          "absolutePath": "contracts/src/interfaces/IHoneyRouter01.sol",
          "exportedSymbols": {
            "IHoneyRouter01": [
              4232
            ]
          },
          "id": 4233,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4193,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:28"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IHoneyRouter01",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 4232,
              "linearizedBaseContracts": [
                4232
              ],
              "name": "IHoneyRouter01",
              "nameLocation": "72:14:28",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "a4c021e9",
                  "id": 4202,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapETHToTokens",
                  "nameLocation": "103:15:28",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4195,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "137:8:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4202,
                        "src": "129:16:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "129:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4197,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "164:12:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4202,
                        "src": "156:20:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4196,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "156:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4199,
                        "mutability": "mutable",
                        "name": "destinationChainSelector",
                        "nameLocation": "195:24:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4202,
                        "src": "187:32:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "187:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "118:108:28"
                  },
                  "returnParameters": {
                    "id": 4201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:0:28"
                  },
                  "scope": 4232,
                  "src": "94:150:28",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "4cbb4505",
                  "id": 4213,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensToETH",
                  "nameLocation": "261:15:28",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4204,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "295:7:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4213,
                        "src": "287:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4203,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "287:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4206,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "321:8:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4213,
                        "src": "313:16:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "313:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4208,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "348:12:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4213,
                        "src": "340:20:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4207,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "340:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4210,
                        "mutability": "mutable",
                        "name": "destinationChainSelector",
                        "nameLocation": "379:24:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4213,
                        "src": "371:32:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4209,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "371:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "276:134:28"
                  },
                  "returnParameters": {
                    "id": 4212,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "427:0:28"
                  },
                  "scope": 4232,
                  "src": "252:176:28",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a1e83209",
                  "id": 4226,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapTokensToTokens",
                  "nameLocation": "445:18:28",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4215,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "482:7:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4226,
                        "src": "474:15:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "474:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4217,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "508:8:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4226,
                        "src": "500:16:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4216,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "500:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4219,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "535:8:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4226,
                        "src": "527:16:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "527:7:28",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4221,
                        "mutability": "mutable",
                        "name": "amountOutMin",
                        "nameLocation": "562:12:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4226,
                        "src": "554:20:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "554:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4223,
                        "mutability": "mutable",
                        "name": "destinationChainSelector",
                        "nameLocation": "593:24:28",
                        "nodeType": "VariableDeclaration",
                        "scope": 4226,
                        "src": "585:32:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4222,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "585:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "463:161:28"
                  },
                  "returnParameters": {
                    "id": 4225,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "641:0:28"
                  },
                  "scope": 4232,
                  "src": "436:206:28",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5c42132e",
                  "id": 4231,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEquitoFee",
                  "nameLocation": "659:12:28",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4227,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "671:2:28"
                  },
                  "returnParameters": {
                    "id": 4230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4229,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4231,
                        "src": "697:7:28",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4228,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "697:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "696:9:28"
                  },
                  "scope": 4232,
                  "src": "650:56:28",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4233,
              "src": "62:647:28",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "33:678:28"
        },
        "id": 28
      },
      "contracts/src/interfaces/ITokenMap.sol": {
        "ast": {
          "absolutePath": "contracts/src/interfaces/ITokenMap.sol",
          "exportedSymbols": {
            "ITokenMap": [
              4253
            ]
          },
          "id": 4254,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4234,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:29"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ITokenMap",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 4253,
              "linearizedBaseContracts": [
                4253
              ],
              "name": "ITokenMap",
              "nameLocation": "72:9:29",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c9365cd5",
                  "id": 4243,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "set",
                  "nameLocation": "98:3:29",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4236,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "110:5:29",
                        "nodeType": "VariableDeclaration",
                        "scope": 4243,
                        "src": "102:13:29",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "102:7:29",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4238,
                        "mutability": "mutable",
                        "name": "chainId",
                        "nameLocation": "125:7:29",
                        "nodeType": "VariableDeclaration",
                        "scope": 4243,
                        "src": "117:15:29",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4237,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "117:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4240,
                        "mutability": "mutable",
                        "name": "mappedToken",
                        "nameLocation": "142:11:29",
                        "nodeType": "VariableDeclaration",
                        "scope": 4243,
                        "src": "134:19:29",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "134:7:29",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "101:53:29"
                  },
                  "returnParameters": {
                    "id": 4242,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "163:0:29"
                  },
                  "scope": 4253,
                  "src": "89:75:29",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "b464631b",
                  "id": 4252,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "get",
                  "nameLocation": "181:3:29",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4245,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "203:5:29",
                        "nodeType": "VariableDeclaration",
                        "scope": 4252,
                        "src": "195:13:29",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "195:7:29",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4247,
                        "mutability": "mutable",
                        "name": "chainId",
                        "nameLocation": "227:7:29",
                        "nodeType": "VariableDeclaration",
                        "scope": 4252,
                        "src": "219:15:29",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "219:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "184:57:29"
                  },
                  "returnParameters": {
                    "id": 4251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4250,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4252,
                        "src": "265:7:29",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4249,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "265:7:29",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "264:9:29"
                  },
                  "scope": 4253,
                  "src": "172:102:29",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4254,
              "src": "62:215:29",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "33:246:29"
        },
        "id": 29
      },
      "contracts/src/lib/HoneyFeeMath.sol": {
        "ast": {
          "absolutePath": "contracts/src/lib/HoneyFeeMath.sol",
          "exportedSymbols": {
            "HoneyFeeMath": [
              4310
            ]
          },
          "id": 4311,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4255,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:30"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "HoneyFeeMath",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 4310,
              "linearizedBaseContracts": [
                4310
              ],
              "name": "HoneyFeeMath",
              "nameLocation": "70:12:30",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "918f8674",
                  "id": 4258,
                  "mutability": "constant",
                  "name": "DENOMINATOR",
                  "nameLocation": "114:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 4310,
                  "src": "90:47:30",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "90:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "315f3030305f303030",
                    "id": 4257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "128:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "value": "1_000_000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "79686697",
                  "id": 4261,
                  "mutability": "constant",
                  "name": "HONEY_FEE_PERCENTAGE",
                  "nameLocation": "168:20:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 4310,
                  "src": "144:52:30",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "144:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "315f303030",
                    "id": 4260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "191:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1_000"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 4284,
                    "nodeType": "Block",
                    "src": "364:124:30",
                    "statements": [
                      {
                        "assignments": [
                          4271
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4271,
                            "mutability": "mutable",
                            "name": "honeyFee",
                            "nameLocation": "383:8:30",
                            "nodeType": "VariableDeclaration",
                            "scope": 4284,
                            "src": "375:16:30",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4270,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "375:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4276,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 4273,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4263,
                              "src": "402:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4274,
                              "name": "HONEY_FEE_PERCENTAGE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4261,
                              "src": "410:20:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4272,
                            "name": "extract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4309,
                            "src": "394:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "394:37:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "375:56:30"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4277,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4263,
                                    "src": "451:6:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 4278,
                                    "name": "honeyFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4271,
                                    "src": "460:8:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "451:17:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 4280,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "450:19:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4281,
                              "name": "honeyFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4271,
                              "src": "471:8:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4282,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "449:31:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 4269,
                        "id": 4283,
                        "nodeType": "Return",
                        "src": "442:38:30"
                      }
                    ]
                  },
                  "functionSelector": "dbceb005",
                  "id": 4285,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "split",
                  "nameLocation": "303:5:30",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4263,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "317:6:30",
                        "nodeType": "VariableDeclaration",
                        "scope": 4285,
                        "src": "309:14:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4262,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "308:16:30"
                  },
                  "returnParameters": {
                    "id": 4269,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4266,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4285,
                        "src": "346:7:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "346:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4268,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4285,
                        "src": "355:7:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4267,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "355:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "345:18:30"
                  },
                  "scope": 4310,
                  "src": "294:194:30",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 4308,
                    "nodeType": "Block",
                    "src": "741:138:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4295,
                                "name": "percentage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4289,
                                "src": "760:10:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 4296,
                                "name": "DENOMINATOR",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4258,
                                "src": "774:11:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "760:25:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50657263656e746167652063616e6e6f74206578636565642031303025",
                              "id": 4298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "787:31:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0822d438e7ff02d04e33a3b237e81701c1bd3a6e2907a292cc8ad1069147f0b1",
                                "typeString": "literal_string \"Percentage cannot exceed 100%\""
                              },
                              "value": "Percentage cannot exceed 100%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0822d438e7ff02d04e33a3b237e81701c1bd3a6e2907a292cc8ad1069147f0b1",
                                "typeString": "literal_string \"Percentage cannot exceed 100%\""
                              }
                            ],
                            "id": 4294,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "752:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "752:67:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4300,
                        "nodeType": "ExpressionStatement",
                        "src": "752:67:30"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4301,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4287,
                                  "src": "838:5:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 4302,
                                  "name": "percentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4289,
                                  "src": "846:10:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "838:18:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4304,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "837:20:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 4305,
                            "name": "DENOMINATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4258,
                            "src": "860:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "837:34:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4293,
                        "id": 4307,
                        "nodeType": "Return",
                        "src": "830:41:30"
                      }
                    ]
                  },
                  "functionSelector": "8139e0f6",
                  "id": 4309,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "extract",
                  "nameLocation": "643:7:30",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4287,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "669:5:30",
                        "nodeType": "VariableDeclaration",
                        "scope": 4309,
                        "src": "661:13:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4286,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "661:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4289,
                        "mutability": "mutable",
                        "name": "percentage",
                        "nameLocation": "693:10:30",
                        "nodeType": "VariableDeclaration",
                        "scope": 4309,
                        "src": "685:18:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4288,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "650:60:30"
                  },
                  "returnParameters": {
                    "id": 4293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4292,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4309,
                        "src": "732:7:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4291,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "732:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "731:9:30"
                  },
                  "scope": 4310,
                  "src": "634:245:30",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 4311,
              "src": "62:820:30",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "33:851:30"
        },
        "id": 30
      },
      "contracts/src/pools/HoneyERC20Pool.sol": {
        "ast": {
          "absolutePath": "contracts/src/pools/HoneyERC20Pool.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "AddressIsZero": [
              3061
            ],
            "AlreadyExists": [
              3029
            ],
            "AmountInIsZero": [
              3059
            ],
            "AmountOutRequiredIsZero": [
              3073
            ],
            "ERC20": [
              1178
            ],
            "ExecutorNotCheckedIn": [
              3075
            ],
            "HoneyERC20Pool": [
              4597
            ],
            "IHoneyFactory": [
              4164
            ],
            "IHoneyPool": [
              4191
            ],
            "IdenticalTokenAddresses": [
              3063
            ],
            "InsufficientInputAmount": [
              3053
            ],
            "InsufficientLiquidity": [
              3055
            ],
            "InsufficientMsgValue": [
              3057
            ],
            "InsufficientOutputAmount": [
              3047
            ],
            "InsufficientSwapInputValue": [
              3039
            ],
            "InsufficientWalletBalance": [
              3027
            ],
            "InvalidInputTokenForSwapPlacement": [
              3065
            ],
            "InvalidToAddressBits": [
              3077
            ],
            "NotCreated": [
              3031
            ],
            "SafeERC20": [
              1608
            ],
            "SwapDoesNotExist": [
              3035
            ],
            "SwapNotEligibleForRefresh": [
              3069
            ],
            "SwapQuantityIsZero": [
              3037
            ],
            "TokenInIsTokenOut": [
              3041
            ],
            "V2SwapFailed": [
              3079
            ],
            "V3SwapFailed": [
              3081
            ]
          },
          "id": 4598,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4312,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:31"
            },
            {
              "absolutePath": "contracts/src/HoneyErrors.sol",
              "file": "../HoneyErrors.sol",
              "id": 4313,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4598,
              "sourceUnit": 3082,
              "src": "62:28:31",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/IHoneyPool.sol",
              "file": "../interfaces/IHoneyPool.sol",
              "id": 4315,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4598,
              "sourceUnit": 4192,
              "src": "92:56:31",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4314,
                    "name": "IHoneyPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4191,
                    "src": "100:10:31",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/IHoneyFactory.sol",
              "file": "../interfaces/IHoneyFactory.sol",
              "id": 4317,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4598,
              "sourceUnit": 4165,
              "src": "150:62:31",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4316,
                    "name": "IHoneyFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4164,
                    "src": "158:13:31",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 4319,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4598,
              "sourceUnit": 1179,
              "src": "214:68:31",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4318,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1178,
                    "src": "222:5:31",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 4321,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4598,
              "sourceUnit": 1609,
              "src": "284:82:31",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4320,
                    "name": "SafeERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1608,
                    "src": "292:9:31",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 4323,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4598,
              "sourceUnit": 296,
              "src": "368:79:31",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4322,
                    "name": "AccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 295,
                    "src": "376:13:31",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4324,
                    "name": "IHoneyPool",
                    "nameLocations": [
                      "478:10:31"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4191,
                    "src": "478:10:31"
                  },
                  "id": 4325,
                  "nodeType": "InheritanceSpecifier",
                  "src": "478:10:31"
                },
                {
                  "baseName": {
                    "id": 4326,
                    "name": "ERC20",
                    "nameLocations": [
                      "490:5:31"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1178,
                    "src": "490:5:31"
                  },
                  "id": 4327,
                  "nodeType": "InheritanceSpecifier",
                  "src": "490:5:31"
                },
                {
                  "baseName": {
                    "id": 4328,
                    "name": "AccessControl",
                    "nameLocations": [
                      "497:13:31"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "497:13:31"
                  },
                  "id": 4329,
                  "nodeType": "InheritanceSpecifier",
                  "src": "497:13:31"
                }
              ],
              "canonicalName": "HoneyERC20Pool",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 4597,
              "linearizedBaseContracts": [
                4597,
                295,
                2032,
                2044,
                378,
                1178,
                568,
                1282,
                1256,
                1891,
                4191
              ],
              "name": "HoneyERC20Pool",
              "nameLocation": "460:14:31",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 4333,
                  "libraryName": {
                    "id": 4330,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "524:9:31"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1608,
                    "src": "524:9:31"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "518:26:31",
                  "typeName": {
                    "id": 4332,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4331,
                      "name": "ERC20",
                      "nameLocations": [
                        "538:5:31"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1178,
                      "src": "538:5:31"
                    },
                    "referencedDeclaration": 1178,
                    "src": "538:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1178",
                      "typeString": "contract ERC20"
                    }
                  }
                },
                {
                  "constant": true,
                  "id": 4338,
                  "mutability": "constant",
                  "name": "MINIMAL_LIQUIDITY",
                  "nameLocation": "577:17:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4597,
                  "src": "552:58:31",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000000"
                    },
                    "id": 4337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31305f303030",
                      "id": 4335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "597:6:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 4336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "606:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "597:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000000"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "fc0c546a",
                  "id": 4340,
                  "mutability": "immutable",
                  "name": "token",
                  "nameLocation": "702:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4597,
                  "src": "677:30:31",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8f840ddd",
                  "id": 4342,
                  "mutability": "mutable",
                  "name": "totalReserves",
                  "nameLocation": "779:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4597,
                  "src": "764:28:31",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 4345,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "823:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4597,
                  "src": "801:30:31",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                    "typeString": "contract IHoneyFactory"
                  },
                  "typeName": {
                    "id": 4344,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4343,
                      "name": "IHoneyFactory",
                      "nameLocations": [
                        "801:13:31"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4164,
                      "src": "801:13:31"
                    },
                    "referencedDeclaration": 4164,
                    "src": "801:13:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                      "typeString": "contract IHoneyFactory"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 4371,
                    "nodeType": "Block",
                    "src": "903:141:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 4356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4354,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4340,
                            "src": "914:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4355,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4347,
                            "src": "922:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "914:14:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4357,
                        "nodeType": "ExpressionStatement",
                        "src": "914:14:31"
                      },
                      {
                        "expression": {
                          "id": 4363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4358,
                            "name": "_factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4345,
                            "src": "941:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                              "typeString": "contract IHoneyFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4360,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1873,
                                  "src": "966:10:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 4361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "966:12:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4359,
                              "name": "IHoneyFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4164,
                              "src": "952:13:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHoneyFactory_$4164_$",
                                "typeString": "type(contract IHoneyFactory)"
                              }
                            },
                            "id": 4362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "952:27:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                              "typeString": "contract IHoneyFactory"
                            }
                          },
                          "src": "941:38:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                            "typeString": "contract IHoneyFactory"
                          }
                        },
                        "id": 4364,
                        "nodeType": "ExpressionStatement",
                        "src": "941:38:31"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4366,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1003:18:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4367,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "1023:10:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1023:12:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4365,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "992:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 4369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "992:44:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4370,
                        "nodeType": "ExpressionStatement",
                        "src": "992:44:31"
                      }
                    ]
                  },
                  "id": 4372,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "486f6e6579506f6f6c204c5020546f6b656e",
                          "id": 4350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "874:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c550b5f06e79fa9036f7eed3f54071560ce99a0146ee4ab2e6fc4ad3924d976c",
                            "typeString": "literal_string \"HoneyPool LP Token\""
                          },
                          "value": "HoneyPool LP Token"
                        },
                        {
                          "hexValue": "484c50",
                          "id": 4351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "896:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_86295aedd2d9cf74ca07f7b0e02fd19b761598c36ffcee5e5bad6b6b730a08db",
                            "typeString": "literal_string \"HLP\""
                          },
                          "value": "HLP"
                        }
                      ],
                      "id": 4352,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 4349,
                        "name": "ERC20",
                        "nameLocations": [
                          "868:5:31"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1178,
                        "src": "868:5:31"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "868:34:31"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4347,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "860:6:31",
                        "nodeType": "VariableDeclaration",
                        "scope": 4372,
                        "src": "852:14:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4346,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "852:7:31",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "851:16:31"
                  },
                  "returnParameters": {
                    "id": 4353,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "903:0:31"
                  },
                  "scope": 4597,
                  "src": "840:204:31",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    4171
                  ],
                  "body": {
                    "id": 4435,
                    "nodeType": "Block",
                    "src": "1178:798:31",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4378,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4374,
                            "src": "1193:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1203:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1193:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4385,
                        "nodeType": "IfStatement",
                        "src": "1189:67:31",
                        "trueBody": {
                          "id": 4384,
                          "nodeType": "Block",
                          "src": "1206:50:31",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4381,
                                  "name": "AmountInIsZero",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3059,
                                  "src": "1228:14:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 4382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1228:16:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4383,
                              "nodeType": "RevertStatement",
                              "src": "1221:23:31"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4387
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4387,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "1276:6:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 4435,
                            "src": "1268:14:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 4386,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1268:7:31",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4390,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4388,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "1285:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1285:12:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1268:29:31"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4395,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4387,
                              "src": "1398:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 4398,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1414:4:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HoneyERC20Pool_$4597",
                                    "typeString": "contract HoneyERC20Pool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HoneyERC20Pool_$4597",
                                    "typeString": "contract HoneyERC20Pool"
                                  }
                                ],
                                "id": 4397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1406:7:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4396,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1406:7:31",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1406:13:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4400,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4374,
                              "src": "1421:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4392,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4340,
                                  "src": "1374:5:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4391,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1178,
                                "src": "1368:5:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$1178_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 4393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1368:12:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1178",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 4394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1381:16:31",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1395,
                            "src": "1368:29:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 4401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1368:60:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4402,
                        "nodeType": "ExpressionStatement",
                        "src": "1368:60:31"
                      },
                      {
                        "assignments": [
                          4404
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4404,
                            "mutability": "mutable",
                            "name": "lpTokensToMint",
                            "nameLocation": "1449:14:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 4435,
                            "src": "1441:22:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4403,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1441:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4405,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1441:22:31"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4406,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4342,
                            "src": "1565:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1582:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1565:18:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4424,
                          "nodeType": "Block",
                          "src": "1652:166:31",
                          "statements": [
                            {
                              "expression": {
                                "id": 4422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4414,
                                  "name": "lpTokensToMint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4404,
                                  "src": "1749:14:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 4418,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 4415,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4374,
                                          "src": "1767:6:31",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 4416,
                                            "name": "totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 751,
                                            "src": "1776:11:31",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view returns (uint256)"
                                            }
                                          },
                                          "id": 4417,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1776:13:31",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "1767:22:31",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 4419,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1766:24:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 4420,
                                    "name": "totalReserves",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4342,
                                    "src": "1793:13:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1766:40:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1749:57:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4423,
                              "nodeType": "ExpressionStatement",
                              "src": "1749:57:31"
                            }
                          ]
                        },
                        "id": 4425,
                        "nodeType": "IfStatement",
                        "src": "1561:257:31",
                        "trueBody": {
                          "id": 4413,
                          "nodeType": "Block",
                          "src": "1585:61:31",
                          "statements": [
                            {
                              "expression": {
                                "id": 4411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4409,
                                  "name": "lpTokensToMint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4404,
                                  "src": "1600:14:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 4410,
                                  "name": "MINIMAL_LIQUIDITY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4338,
                                  "src": "1617:17:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1600:34:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4412,
                              "nodeType": "ExpressionStatement",
                              "src": "1600:34:31"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4427,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4387,
                              "src": "1875:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4428,
                              "name": "lpTokensToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4404,
                              "src": "1883:14:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4426,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1018,
                            "src": "1869:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1869:29:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4430,
                        "nodeType": "ExpressionStatement",
                        "src": "1869:29:31"
                      },
                      {
                        "expression": {
                          "id": 4433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4431,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4342,
                            "src": "1945:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4432,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4374,
                            "src": "1962:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1945:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4434,
                        "nodeType": "ExpressionStatement",
                        "src": "1945:23:31"
                      }
                    ]
                  },
                  "functionSelector": "51c6590a",
                  "id": 4436,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidity",
                  "nameLocation": "1131:12:31",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4376,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1169:8:31"
                  },
                  "parameters": {
                    "id": 4375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4374,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1152:6:31",
                        "nodeType": "VariableDeclaration",
                        "scope": 4436,
                        "src": "1144:14:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4373,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1144:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1143:16:31"
                  },
                  "returnParameters": {
                    "id": 4377,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1178:0:31"
                  },
                  "scope": 4597,
                  "src": "1122:854:31",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4178
                  ],
                  "body": {
                    "id": 4547,
                    "nodeType": "Block",
                    "src": "2150:1331:31",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4444,
                            "name": "lpTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4438,
                            "src": "2165:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2177:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2165:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4451,
                        "nodeType": "IfStatement",
                        "src": "2161:69:31",
                        "trueBody": {
                          "id": 4450,
                          "nodeType": "Block",
                          "src": "2180:50:31",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4447,
                                  "name": "AmountInIsZero",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3059,
                                  "src": "2202:14:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 4448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2202:16:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4449,
                              "nodeType": "RevertStatement",
                              "src": "2195:23:31"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4453
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4453,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "2250:6:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 4547,
                            "src": "2242:14:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 4452,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2242:7:31",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4456,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4454,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "2259:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2259:12:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2242:29:31"
                      },
                      {
                        "assignments": [
                          4458
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4458,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "2371:6:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 4547,
                            "src": "2363:14:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4457,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2363:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4466,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4459,
                                  "name": "lpTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4438,
                                  "src": "2381:8:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 4460,
                                  "name": "totalReserves",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4342,
                                  "src": "2392:13:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2381:24:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4462,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2380:26:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4463,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 751,
                              "src": "2409:11:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 4464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2409:13:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2380:42:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2363:59:31"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4467,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4458,
                            "src": "2439:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2449:1:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2439:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4474,
                        "nodeType": "IfStatement",
                        "src": "2435:67:31",
                        "trueBody": {
                          "id": 4473,
                          "nodeType": "Block",
                          "src": "2452:50:31",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4470,
                                  "name": "AmountInIsZero",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3059,
                                  "src": "2474:14:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 4471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2474:16:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4472,
                              "nodeType": "RevertStatement",
                              "src": "2467:23:31"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4476,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4453,
                              "src": "2551:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4477,
                              "name": "lpTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4438,
                              "src": "2559:8:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4475,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1051,
                            "src": "2545:5:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2545:23:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4479,
                        "nodeType": "ExpressionStatement",
                        "src": "2545:23:31"
                      },
                      {
                        "assignments": [
                          4481
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4481,
                            "mutability": "mutable",
                            "name": "poolBalance",
                            "nameLocation": "2589:11:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 4547,
                            "src": "2581:19:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4480,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2581:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4488,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4485,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2621:4:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HoneyERC20Pool_$4597",
                                    "typeString": "contract HoneyERC20Pool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HoneyERC20Pool_$4597",
                                    "typeString": "contract HoneyERC20Pool"
                                  }
                                ],
                                "id": 4484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2613:7:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4483,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2613:7:31",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2613:13:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4482,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 764,
                            "src": "2603:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 4487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2603:24:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2581:46:31"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4489,
                            "name": "poolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4481,
                            "src": "2644:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 4490,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4458,
                            "src": "2658:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2644:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4541,
                          "nodeType": "Block",
                          "src": "3186:218:31",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4528,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4453,
                                    "src": "3291:6:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4529,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4458,
                                    "src": "3299:6:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 4525,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4340,
                                        "src": "3271:5:31",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 4524,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1178,
                                      "src": "3265:5:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1178_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 4526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3265:12:31",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$1178",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 4527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3278:12:31",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1368,
                                  "src": "3265:25:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 4530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3265:41:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4531,
                              "nodeType": "ExpressionStatement",
                              "src": "3265:41:31"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 4537,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3382:3:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4538,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3386:5:31",
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "3382:9:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 4534,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4453,
                                        "src": "3365:6:31",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 4533,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3357:8:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 4532,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3357:8:31",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4535,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3357:15:31",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 4536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3373:8:31",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "3357:24:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 4539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3357:35:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4540,
                              "nodeType": "ExpressionStatement",
                              "src": "3357:35:31"
                            }
                          ]
                        },
                        "id": 4542,
                        "nodeType": "IfStatement",
                        "src": "2640:764:31",
                        "trueBody": {
                          "id": 4523,
                          "nodeType": "Block",
                          "src": "2666:514:31",
                          "statements": [
                            {
                              "assignments": [
                                4493
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4493,
                                  "mutability": "mutable",
                                  "name": "equitoFee",
                                  "nameLocation": "2689:9:31",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4523,
                                  "src": "2681:17:31",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4492,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2681:7:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4497,
                              "initialValue": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 4494,
                                    "name": "_factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4345,
                                    "src": "2701:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                                      "typeString": "contract IHoneyFactory"
                                    }
                                  },
                                  "id": 4495,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2710:12:31",
                                  "memberName": "getEquitoFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4145,
                                  "src": "2701:21:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 4496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2701:23:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2681:43:31"
                            },
                            {
                              "assignments": [
                                4499
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4499,
                                  "mutability": "mutable",
                                  "name": "secondaryAmount",
                                  "nameLocation": "2796:15:31",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4523,
                                  "src": "2788:23:31",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4498,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2788:7:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4503,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4500,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4458,
                                  "src": "2814:6:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 4501,
                                  "name": "poolBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4481,
                                  "src": "2823:11:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2814:20:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2788:46:31"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4508,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4453,
                                    "src": "2951:6:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4509,
                                    "name": "poolBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4481,
                                    "src": "2959:11:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 4505,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4340,
                                        "src": "2931:5:31",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 4504,
                                      "name": "ERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1178,
                                      "src": "2925:5:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1178_$",
                                        "typeString": "type(contract ERC20)"
                                      }
                                    },
                                    "id": 4506,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2925:12:31",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$1178",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 4507,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2938:12:31",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1368,
                                  "src": "2925:25:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 4510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2925:46:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4511,
                              "nodeType": "ExpressionStatement",
                              "src": "2925:46:31"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4517,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4453,
                                    "src": "3048:6:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4518,
                                    "name": "secondaryChainSelector",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4440,
                                    "src": "3073:22:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4519,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4340,
                                    "src": "3114:5:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4520,
                                    "name": "secondaryAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4499,
                                    "src": "3138:15:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4512,
                                      "name": "_factory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4345,
                                      "src": "2988:8:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                                        "typeString": "contract IHoneyFactory"
                                      }
                                    },
                                    "id": 4514,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2997:14:31",
                                    "memberName": "crossChainCall",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4163,
                                    "src": "2988:23:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,uint256,address,uint256) payable external"
                                    }
                                  },
                                  "id": 4516,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 4515,
                                      "name": "equitoFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4493,
                                      "src": "3019:9:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "2988:41:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$value",
                                    "typeString": "function (address,uint256,address,uint256) payable external"
                                  }
                                },
                                "id": 4521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2988:180:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4522,
                              "nodeType": "ExpressionStatement",
                              "src": "2988:180:31"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 4545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4543,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4342,
                            "src": "3450:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 4544,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4458,
                            "src": "3467:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3450:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4546,
                        "nodeType": "ExpressionStatement",
                        "src": "3450:23:31"
                      }
                    ]
                  },
                  "functionSelector": "9d7de6b3",
                  "id": 4548,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidity",
                  "nameLocation": "2033:15:31",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4442,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2141:8:31"
                  },
                  "parameters": {
                    "id": 4441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4438,
                        "mutability": "mutable",
                        "name": "lpTokens",
                        "nameLocation": "2067:8:31",
                        "nodeType": "VariableDeclaration",
                        "scope": 4548,
                        "src": "2059:16:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4437,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2059:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4440,
                        "mutability": "mutable",
                        "name": "secondaryChainSelector",
                        "nameLocation": "2094:22:31",
                        "nodeType": "VariableDeclaration",
                        "scope": 4548,
                        "src": "2086:30:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4439,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2086:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2048:75:31"
                  },
                  "returnParameters": {
                    "id": 4443,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2150:0:31"
                  },
                  "scope": 4597,
                  "src": "2024:1457:31",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4183
                  ],
                  "body": {
                    "id": 4575,
                    "nodeType": "Block",
                    "src": "3540:215:31",
                    "statements": [
                      {
                        "assignments": [
                          4555
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4555,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "3559:6:31",
                            "nodeType": "VariableDeclaration",
                            "scope": 4575,
                            "src": "3551:14:31",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 4554,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3551:7:31",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4558,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4556,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "3568:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3568:12:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3551:29:31"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4563,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4555,
                              "src": "3681:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 4566,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3697:4:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_HoneyERC20Pool_$4597",
                                    "typeString": "contract HoneyERC20Pool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_HoneyERC20Pool_$4597",
                                    "typeString": "contract HoneyERC20Pool"
                                  }
                                ],
                                "id": 4565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3689:7:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4564,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3689:7:31",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3689:13:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4568,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4550,
                              "src": "3704:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4560,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4340,
                                  "src": "3657:5:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4559,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1178,
                                "src": "3651:5:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$1178_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 4561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3651:12:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1178",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 4562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3664:16:31",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1395,
                            "src": "3651:29:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 4569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3651:60:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4570,
                        "nodeType": "ExpressionStatement",
                        "src": "3651:60:31"
                      },
                      {
                        "expression": {
                          "id": 4573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4571,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4342,
                            "src": "3724:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4572,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4550,
                            "src": "3741:6:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3724:23:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4574,
                        "nodeType": "ExpressionStatement",
                        "src": "3724:23:31"
                      }
                    ]
                  },
                  "functionSelector": "b6b55f25",
                  "id": 4576,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "3498:7:31",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4552,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3531:8:31"
                  },
                  "parameters": {
                    "id": 4551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4550,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3514:6:31",
                        "nodeType": "VariableDeclaration",
                        "scope": 4576,
                        "src": "3506:14:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3506:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3505:16:31"
                  },
                  "returnParameters": {
                    "id": 4553,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3540:0:31"
                  },
                  "scope": 4597,
                  "src": "3489:266:31",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4190
                  ],
                  "body": {
                    "id": 4595,
                    "nodeType": "Block",
                    "src": "3881:116:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4591,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4580,
                              "src": "3978:2:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4592,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4578,
                              "src": "3982:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4588,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4340,
                                  "src": "3958:5:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4587,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1178,
                                "src": "3952:5:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$1178_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 4589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3952:12:31",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1178",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 4590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3965:12:31",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1368,
                            "src": "3952:25:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1256_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1256_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 4593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3952:37:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4594,
                        "nodeType": "ExpressionStatement",
                        "src": "3952:37:31"
                      }
                    ]
                  },
                  "functionSelector": "00f714ce",
                  "id": 4596,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 4584,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "3861:18:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 4585,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4583,
                        "name": "onlyRole",
                        "nameLocations": [
                          "3852:8:31"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "3852:8:31"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3852:28:31"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "3772:8:31",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4582,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3843:8:31"
                  },
                  "parameters": {
                    "id": 4581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4578,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3799:6:31",
                        "nodeType": "VariableDeclaration",
                        "scope": 4596,
                        "src": "3791:14:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4577,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3791:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4580,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3824:2:31",
                        "nodeType": "VariableDeclaration",
                        "scope": 4596,
                        "src": "3816:10:31",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4579,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3816:7:31",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3780:53:31"
                  },
                  "returnParameters": {
                    "id": 4586,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3881:0:31"
                  },
                  "scope": 4597,
                  "src": "3763:234:31",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4598,
              "src": "451:3549:31",
              "usedErrors": [
                305,
                308,
                538,
                543,
                548,
                557,
                562,
                567,
                1335,
                1616,
                1621,
                1624,
                3059
              ],
              "usedEvents": [
                317,
                326,
                335,
                1190,
                1199
              ]
            }
          ],
          "src": "33:3969:31"
        },
        "id": 31
      },
      "contracts/src/pools/HoneyETHPool.sol": {
        "ast": {
          "absolutePath": "contracts/src/pools/HoneyETHPool.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "AddressIsZero": [
              3061
            ],
            "AlreadyExists": [
              3029
            ],
            "AmountInIsZero": [
              3059
            ],
            "AmountOutRequiredIsZero": [
              3073
            ],
            "ERC20": [
              1178
            ],
            "ExecutorNotCheckedIn": [
              3075
            ],
            "HoneyETHPool": [
              4850
            ],
            "IHoneyETHPool": [
              4031
            ],
            "IHoneyFactory": [
              4164
            ],
            "IdenticalTokenAddresses": [
              3063
            ],
            "InsufficientInputAmount": [
              3053
            ],
            "InsufficientLiquidity": [
              3055
            ],
            "InsufficientMsgValue": [
              3057
            ],
            "InsufficientOutputAmount": [
              3047
            ],
            "InsufficientSwapInputValue": [
              3039
            ],
            "InsufficientWalletBalance": [
              3027
            ],
            "InvalidInputTokenForSwapPlacement": [
              3065
            ],
            "InvalidToAddressBits": [
              3077
            ],
            "NotCreated": [
              3031
            ],
            "SafeERC20": [
              1608
            ],
            "SwapDoesNotExist": [
              3035
            ],
            "SwapNotEligibleForRefresh": [
              3069
            ],
            "SwapQuantityIsZero": [
              3037
            ],
            "TokenInIsTokenOut": [
              3041
            ],
            "V2SwapFailed": [
              3079
            ],
            "V3SwapFailed": [
              3081
            ]
          },
          "id": 4851,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4599,
              "literals": [
                "solidity",
                "<=",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:25:32"
            },
            {
              "absolutePath": "contracts/src/HoneyErrors.sol",
              "file": "../HoneyErrors.sol",
              "id": 4600,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4851,
              "sourceUnit": 3082,
              "src": "62:28:32",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/IHoneyETHPool.sol",
              "file": "../interfaces/IHoneyETHPool.sol",
              "id": 4602,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4851,
              "sourceUnit": 4032,
              "src": "92:62:32",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4601,
                    "name": "IHoneyETHPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4031,
                    "src": "100:13:32",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/src/interfaces/IHoneyFactory.sol",
              "file": "../interfaces/IHoneyFactory.sol",
              "id": 4604,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4851,
              "sourceUnit": 4165,
              "src": "156:62:32",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4603,
                    "name": "IHoneyFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4164,
                    "src": "164:13:32",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 4606,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4851,
              "sourceUnit": 1179,
              "src": "220:68:32",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4605,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1178,
                    "src": "228:5:32",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
              "id": 4608,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4851,
              "sourceUnit": 1609,
              "src": "290:82:32",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4607,
                    "name": "SafeERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1608,
                    "src": "298:9:32",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 4610,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4851,
              "sourceUnit": 296,
              "src": "374:79:32",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4609,
                    "name": "AccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 295,
                    "src": "382:13:32",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4611,
                    "name": "IHoneyETHPool",
                    "nameLocations": [
                      "482:13:32"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4031,
                    "src": "482:13:32"
                  },
                  "id": 4612,
                  "nodeType": "InheritanceSpecifier",
                  "src": "482:13:32"
                },
                {
                  "baseName": {
                    "id": 4613,
                    "name": "ERC20",
                    "nameLocations": [
                      "497:5:32"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1178,
                    "src": "497:5:32"
                  },
                  "id": 4614,
                  "nodeType": "InheritanceSpecifier",
                  "src": "497:5:32"
                },
                {
                  "baseName": {
                    "id": 4615,
                    "name": "AccessControl",
                    "nameLocations": [
                      "504:13:32"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "504:13:32"
                  },
                  "id": 4616,
                  "nodeType": "InheritanceSpecifier",
                  "src": "504:13:32"
                }
              ],
              "canonicalName": "HoneyETHPool",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 4850,
              "linearizedBaseContracts": [
                4850,
                295,
                2032,
                2044,
                378,
                1178,
                568,
                1282,
                1256,
                1891,
                4031
              ],
              "name": "HoneyETHPool",
              "nameLocation": "466:12:32",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 4620,
                  "libraryName": {
                    "id": 4617,
                    "name": "SafeERC20",
                    "nameLocations": [
                      "531:9:32"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1608,
                    "src": "531:9:32"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "525:26:32",
                  "typeName": {
                    "id": 4619,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4618,
                      "name": "ERC20",
                      "nameLocations": [
                        "545:5:32"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1178,
                      "src": "545:5:32"
                    },
                    "referencedDeclaration": 1178,
                    "src": "545:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1178",
                      "typeString": "contract ERC20"
                    }
                  }
                },
                {
                  "constant": true,
                  "id": 4625,
                  "mutability": "constant",
                  "name": "MINIMAL_LIQUIDITY",
                  "nameLocation": "584:17:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4850,
                  "src": "559:58:32",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000000"
                    },
                    "id": 4624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "31305f303030",
                      "id": 4622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "604:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 4623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "613:4:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "604:13:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                      "typeString": "int_const 10000000000000000000000"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "8f840ddd",
                  "id": 4627,
                  "mutability": "mutable",
                  "name": "totalReserves",
                  "nameLocation": "689:13:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4850,
                  "src": "674:28:32",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 4630,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "733:8:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 4850,
                  "src": "711:30:32",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                    "typeString": "contract IHoneyFactory"
                  },
                  "typeName": {
                    "id": 4629,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4628,
                      "name": "IHoneyFactory",
                      "nameLocations": [
                        "711:13:32"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4164,
                      "src": "711:13:32"
                    },
                    "referencedDeclaration": 4164,
                    "src": "711:13:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                      "typeString": "contract IHoneyFactory"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 4650,
                    "nodeType": "Block",
                    "src": "799:114:32",
                    "statements": [
                      {
                        "expression": {
                          "id": 4642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4637,
                            "name": "_factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4630,
                            "src": "810:8:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                              "typeString": "contract IHoneyFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4639,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1873,
                                  "src": "835:10:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 4640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "835:12:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4638,
                              "name": "IHoneyFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4164,
                              "src": "821:13:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHoneyFactory_$4164_$",
                                "typeString": "type(contract IHoneyFactory)"
                              }
                            },
                            "id": 4641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "821:27:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                              "typeString": "contract IHoneyFactory"
                            }
                          },
                          "src": "810:38:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                            "typeString": "contract IHoneyFactory"
                          }
                        },
                        "id": 4643,
                        "nodeType": "ExpressionStatement",
                        "src": "810:38:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4645,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "872:18:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4646,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1873,
                                "src": "892:10:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "892:12:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4644,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "861:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 4648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "861:44:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4649,
                        "nodeType": "ExpressionStatement",
                        "src": "861:44:32"
                      }
                    ]
                  },
                  "id": 4651,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "486f6e6579506f6f6c204c5020546f6b656e",
                          "id": 4633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "770:20:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c550b5f06e79fa9036f7eed3f54071560ce99a0146ee4ab2e6fc4ad3924d976c",
                            "typeString": "literal_string \"HoneyPool LP Token\""
                          },
                          "value": "HoneyPool LP Token"
                        },
                        {
                          "hexValue": "484c50",
                          "id": 4634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "792:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_86295aedd2d9cf74ca07f7b0e02fd19b761598c36ffcee5e5bad6b6b730a08db",
                            "typeString": "literal_string \"HLP\""
                          },
                          "value": "HLP"
                        }
                      ],
                      "id": 4635,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 4632,
                        "name": "ERC20",
                        "nameLocations": [
                          "764:5:32"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1178,
                        "src": "764:5:32"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "764:34:32"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4631,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "761:2:32"
                  },
                  "returnParameters": {
                    "id": 4636,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "799:0:32"
                  },
                  "scope": 4850,
                  "src": "750:163:32",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    4013
                  ],
                  "body": {
                    "id": 4705,
                    "nodeType": "Block",
                    "src": "1041:706:32",
                    "statements": [
                      {
                        "assignments": [
                          4656
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4656,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "1060:6:32",
                            "nodeType": "VariableDeclaration",
                            "scope": 4705,
                            "src": "1052:14:32",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4655,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1052:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4659,
                        "initialValue": {
                          "expression": {
                            "id": 4657,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1069:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1073:5:32",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1069:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1052:26:32"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4660,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4656,
                            "src": "1095:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1105:1:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1095:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4667,
                        "nodeType": "IfStatement",
                        "src": "1091:67:32",
                        "trueBody": {
                          "id": 4666,
                          "nodeType": "Block",
                          "src": "1108:50:32",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4663,
                                  "name": "AmountInIsZero",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3059,
                                  "src": "1130:14:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 4664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1130:16:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4665,
                              "nodeType": "RevertStatement",
                              "src": "1123:23:32"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4669
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4669,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "1178:6:32",
                            "nodeType": "VariableDeclaration",
                            "scope": 4705,
                            "src": "1170:14:32",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 4668,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1170:7:32",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4672,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4670,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "1187:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1187:12:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1170:29:32"
                      },
                      {
                        "assignments": [
                          4674
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4674,
                            "mutability": "mutable",
                            "name": "lpTokensToMint",
                            "nameLocation": "1220:14:32",
                            "nodeType": "VariableDeclaration",
                            "scope": 4705,
                            "src": "1212:22:32",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4673,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1212:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4675,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1212:22:32"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4676,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4627,
                            "src": "1336:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1353:1:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1336:18:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4694,
                          "nodeType": "Block",
                          "src": "1423:166:32",
                          "statements": [
                            {
                              "expression": {
                                "id": 4692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4684,
                                  "name": "lpTokensToMint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4674,
                                  "src": "1520:14:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4691,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 4688,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 4685,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4656,
                                          "src": "1538:6:32",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 4686,
                                            "name": "totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 751,
                                            "src": "1547:11:32",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view returns (uint256)"
                                            }
                                          },
                                          "id": 4687,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1547:13:32",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "1538:22:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 4689,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1537:24:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 4690,
                                    "name": "totalReserves",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4627,
                                    "src": "1564:13:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1537:40:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1520:57:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4693,
                              "nodeType": "ExpressionStatement",
                              "src": "1520:57:32"
                            }
                          ]
                        },
                        "id": 4695,
                        "nodeType": "IfStatement",
                        "src": "1332:257:32",
                        "trueBody": {
                          "id": 4683,
                          "nodeType": "Block",
                          "src": "1356:61:32",
                          "statements": [
                            {
                              "expression": {
                                "id": 4681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4679,
                                  "name": "lpTokensToMint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4674,
                                  "src": "1371:14:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 4680,
                                  "name": "MINIMAL_LIQUIDITY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4625,
                                  "src": "1388:17:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1371:34:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4682,
                              "nodeType": "ExpressionStatement",
                              "src": "1371:34:32"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4697,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4669,
                              "src": "1646:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4698,
                              "name": "lpTokensToMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4674,
                              "src": "1654:14:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4696,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1018,
                            "src": "1640:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1640:29:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4700,
                        "nodeType": "ExpressionStatement",
                        "src": "1640:29:32"
                      },
                      {
                        "expression": {
                          "id": 4703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4701,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4627,
                            "src": "1716:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4702,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4656,
                            "src": "1733:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1716:23:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4704,
                        "nodeType": "ExpressionStatement",
                        "src": "1716:23:32"
                      }
                    ]
                  },
                  "functionSelector": "e8078d94",
                  "id": 4706,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addLiquidity",
                  "nameLocation": "1000:12:32",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4653,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1032:8:32"
                  },
                  "parameters": {
                    "id": 4652,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1012:2:32"
                  },
                  "returnParameters": {
                    "id": 4654,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1041:0:32"
                  },
                  "scope": 4850,
                  "src": "991:756:32",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4020
                  ],
                  "body": {
                    "id": 4818,
                    "nodeType": "Block",
                    "src": "1881:1405:32",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4714,
                            "name": "lpTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4708,
                            "src": "1896:8:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1908:1:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1896:13:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4721,
                        "nodeType": "IfStatement",
                        "src": "1892:69:32",
                        "trueBody": {
                          "id": 4720,
                          "nodeType": "Block",
                          "src": "1911:50:32",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4717,
                                  "name": "AmountInIsZero",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3059,
                                  "src": "1933:14:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 4718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1933:16:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4719,
                              "nodeType": "RevertStatement",
                              "src": "1926:23:32"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4723
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4723,
                            "mutability": "mutable",
                            "name": "sender",
                            "nameLocation": "1981:6:32",
                            "nodeType": "VariableDeclaration",
                            "scope": 4818,
                            "src": "1973:14:32",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 4722,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1973:7:32",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4726,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4724,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1873,
                            "src": "1990:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1990:12:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1973:29:32"
                      },
                      {
                        "assignments": [
                          4728
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4728,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "2102:6:32",
                            "nodeType": "VariableDeclaration",
                            "scope": 4818,
                            "src": "2094:14:32",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4727,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2094:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4736,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4729,
                                  "name": "lpTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4708,
                                  "src": "2112:8:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 4730,
                                  "name": "totalReserves",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4627,
                                  "src": "2123:13:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2112:24:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4732,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2111:26:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4733,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 751,
                              "src": "2140:11:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 4734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2140:13:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2111:42:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2094:59:32"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4737,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4728,
                            "src": "2170:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2180:1:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2170:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4744,
                        "nodeType": "IfStatement",
                        "src": "2166:67:32",
                        "trueBody": {
                          "id": 4743,
                          "nodeType": "Block",
                          "src": "2183:50:32",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4740,
                                  "name": "AmountInIsZero",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3059,
                                  "src": "2205:14:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 4741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2205:16:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4742,
                              "nodeType": "RevertStatement",
                              "src": "2198:23:32"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4746,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4723,
                              "src": "2282:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4747,
                              "name": "lpTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4708,
                              "src": "2290:8:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4745,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1051,
                            "src": "2276:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2276:23:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4749,
                        "nodeType": "ExpressionStatement",
                        "src": "2276:23:32"
                      },
                      {
                        "assignments": [
                          4751
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4751,
                            "mutability": "mutable",
                            "name": "poolBalance",
                            "nameLocation": "2320:11:32",
                            "nodeType": "VariableDeclaration",
                            "scope": 4818,
                            "src": "2312:19:32",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4750,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2312:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4757,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 4754,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2342:4:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_HoneyETHPool_$4850",
                                  "typeString": "contract HoneyETHPool"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_HoneyETHPool_$4850",
                                  "typeString": "contract HoneyETHPool"
                                }
                              ],
                              "id": 4753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2334:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4752,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2334:7:32",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2334:13:32",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2348:7:32",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2334:21:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2312:43:32"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4758,
                            "name": "poolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4751,
                            "src": "2372:11:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 4759,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4728,
                            "src": "2386:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2372:20:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4812,
                          "nodeType": "Block",
                          "src": "3038:171:32",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4809,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4806,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4728,
                                      "src": "3178:6:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 4807,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "3187:3:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 4808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3191:5:32",
                                      "memberName": "value",
                                      "nodeType": "MemberAccess",
                                      "src": "3187:9:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3178:18:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 4803,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4723,
                                        "src": "3161:6:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 4802,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3153:8:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 4801,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3153:8:32",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3153:15:32",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 4805,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3169:8:32",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "3153:24:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 4810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3153:44:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4811,
                              "nodeType": "ExpressionStatement",
                              "src": "3153:44:32"
                            }
                          ]
                        },
                        "id": 4813,
                        "nodeType": "IfStatement",
                        "src": "2368:841:32",
                        "trueBody": {
                          "id": 4800,
                          "nodeType": "Block",
                          "src": "2394:638:32",
                          "statements": [
                            {
                              "assignments": [
                                4762
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4762,
                                  "mutability": "mutable",
                                  "name": "equitoFee",
                                  "nameLocation": "2417:9:32",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4800,
                                  "src": "2409:17:32",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4761,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2409:7:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4766,
                              "initialValue": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 4763,
                                    "name": "_factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4630,
                                    "src": "2429:8:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                                      "typeString": "contract IHoneyFactory"
                                    }
                                  },
                                  "id": 4764,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2438:12:32",
                                  "memberName": "getEquitoFee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4145,
                                  "src": "2429:21:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 4765,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2429:23:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2409:43:32"
                            },
                            {
                              "assignments": [
                                4768
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4768,
                                  "mutability": "mutable",
                                  "name": "amountExcludingFee",
                                  "nameLocation": "2524:18:32",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4800,
                                  "src": "2516:26:32",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4767,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2516:7:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4772,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4769,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4728,
                                  "src": "2545:6:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 4770,
                                  "name": "equitoFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4762,
                                  "src": "2554:9:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2545:18:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2516:47:32"
                            },
                            {
                              "assignments": [
                                4774
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4774,
                                  "mutability": "mutable",
                                  "name": "secondaryAmount",
                                  "nameLocation": "2635:15:32",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4800,
                                  "src": "2627:23:32",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4773,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2627:7:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4778,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4775,
                                  "name": "amountExcludingFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4768,
                                  "src": "2653:18:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 4776,
                                  "name": "poolBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4751,
                                  "src": "2674:11:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2653:32:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2627:58:32"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4784,
                                    "name": "poolBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4751,
                                    "src": "2801:11:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 4781,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4723,
                                        "src": "2784:6:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 4780,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2776:8:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 4779,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2776:8:32",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 4782,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2776:15:32",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 4783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2792:8:32",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "2776:24:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 4785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2776:37:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4786,
                              "nodeType": "ExpressionStatement",
                              "src": "2776:37:32"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4792,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4723,
                                    "src": "2890:6:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4793,
                                    "name": "secondaryChainSelector",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4710,
                                    "src": "2915:22:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 4794,
                                        "name": "_factory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4630,
                                        "src": "2956:8:32",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                                          "typeString": "contract IHoneyFactory"
                                        }
                                      },
                                      "id": 4795,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2965:4:32",
                                      "memberName": "weth",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4140,
                                      "src": "2956:13:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                        "typeString": "function () pure external returns (address)"
                                      }
                                    },
                                    "id": 4796,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2956:15:32",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4797,
                                    "name": "secondaryAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4774,
                                    "src": "2990:15:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4787,
                                      "name": "_factory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4630,
                                      "src": "2830:8:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IHoneyFactory_$4164",
                                        "typeString": "contract IHoneyFactory"
                                      }
                                    },
                                    "id": 4789,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2839:14:32",
                                    "memberName": "crossChainCall",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4163,
                                    "src": "2830:23:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,uint256,address,uint256) payable external"
                                    }
                                  },
                                  "id": 4791,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 4790,
                                      "name": "equitoFee",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4762,
                                      "src": "2861:9:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "2830:41:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$value",
                                    "typeString": "function (address,uint256,address,uint256) payable external"
                                  }
                                },
                                "id": 4798,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2830:190:32",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4799,
                              "nodeType": "ExpressionStatement",
                              "src": "2830:190:32"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 4816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4814,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4627,
                            "src": "3255:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 4815,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4728,
                            "src": "3272:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3255:23:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4817,
                        "nodeType": "ExpressionStatement",
                        "src": "3255:23:32"
                      }
                    ]
                  },
                  "functionSelector": "9d7de6b3",
                  "id": 4819,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeLiquidity",
                  "nameLocation": "1764:15:32",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4712,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1872:8:32"
                  },
                  "parameters": {
                    "id": 4711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4708,
                        "mutability": "mutable",
                        "name": "lpTokens",
                        "nameLocation": "1798:8:32",
                        "nodeType": "VariableDeclaration",
                        "scope": 4819,
                        "src": "1790:16:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4707,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1790:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4710,
                        "mutability": "mutable",
                        "name": "secondaryChainSelector",
                        "nameLocation": "1825:22:32",
                        "nodeType": "VariableDeclaration",
                        "scope": 4819,
                        "src": "1817:30:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4709,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1817:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1779:75:32"
                  },
                  "returnParameters": {
                    "id": 4713,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1881:0:32"
                  },
                  "scope": 4850,
                  "src": "1755:1531:32",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4023
                  ],
                  "body": {
                    "id": 4828,
                    "nodeType": "Block",
                    "src": "3339:45:32",
                    "statements": [
                      {
                        "expression": {
                          "id": 4826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4823,
                            "name": "totalReserves",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4627,
                            "src": "3350:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4824,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3367:3:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3371:5:32",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "3367:9:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3350:26:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4827,
                        "nodeType": "ExpressionStatement",
                        "src": "3350:26:32"
                      }
                    ]
                  },
                  "functionSelector": "d0e30db0",
                  "id": 4829,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "3303:7:32",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4821,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3330:8:32"
                  },
                  "parameters": {
                    "id": 4820,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3310:2:32"
                  },
                  "returnParameters": {
                    "id": 4822,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3339:0:32"
                  },
                  "scope": 4850,
                  "src": "3294:90:32",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    4030
                  ],
                  "body": {
                    "id": 4848,
                    "nodeType": "Block",
                    "src": "3510:107:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4845,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4831,
                              "src": "3602:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4842,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4833,
                                  "src": "3589:2:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3581:8:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 4840,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3581:8:32",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3581:11:32",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 4844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3593:8:32",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "3581:20:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 4846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3581:28:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4847,
                        "nodeType": "ExpressionStatement",
                        "src": "3581:28:32"
                      }
                    ]
                  },
                  "functionSelector": "00f714ce",
                  "id": 4849,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 4837,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "3490:18:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 4838,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4836,
                        "name": "onlyRole",
                        "nameLocations": [
                          "3481:8:32"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "3481:8:32"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3481:28:32"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "3401:8:32",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4835,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3472:8:32"
                  },
                  "parameters": {
                    "id": 4834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4831,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3428:6:32",
                        "nodeType": "VariableDeclaration",
                        "scope": 4849,
                        "src": "3420:14:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4830,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3420:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4833,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3453:2:32",
                        "nodeType": "VariableDeclaration",
                        "scope": 4849,
                        "src": "3445:10:32",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4832,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3445:7:32",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3409:53:32"
                  },
                  "returnParameters": {
                    "id": 4839,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3510:0:32"
                  },
                  "scope": 4850,
                  "src": "3392:225:32",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4851,
              "src": "457:3163:32",
              "usedErrors": [
                305,
                308,
                538,
                543,
                548,
                557,
                562,
                567,
                3059
              ],
              "usedEvents": [
                317,
                326,
                335,
                1190,
                1199
              ]
            }
          ],
          "src": "33:3589:32"
        },
        "id": 32
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "AccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "IAccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "IERC20Permit": {
          "abi": [
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "currentAllowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "requestedDecrease",
                  "type": "uint256"
                }
              ],
              "name": "SafeERC20FailedDecreaseAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212205f998f7b5f7145ff1d62dc9182e2e7c8107de9d1cdd16b68a2f18a2662c2b2c564736f6c63430008180033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 SWAP10 DUP16 PUSH28 0x5F7145FF1D62DC9182E2E7C8107DE9D1CDD16B68A2F18A2662C2B2C5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "751:5018:8:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea26469706673582212205f998f7b5f7145ff1d62dc9182e2e7c8107de9d1cdd16b68a2f18a2662c2b2c564736f6c63430008180033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 SWAP10 DUP16 PUSH28 0x5F7145FF1D62DC9182E2E7C8107DE9D1CDD16B68A2F18A2662C2B2C5 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "751:5018:8:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "Address": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "AddressEmptyCode",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "AddressInsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FailedInnerCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ed8a49cd2a84630b132bfb0c966ece1a8dc3108fd79eed4eeb88a0f7ff807b2c64736f6c63430008180033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED DUP11 BLOBHASH 0xCD 0x2A DUP5 PUSH4 0xB132BFB 0xC SWAP7 PUSH15 0xCE1A8DC3108FD79EED4EEB88A0F7FF DUP1 PUSH28 0x2C64736F6C6343000818003300000000000000000000000000000000 ",
              "sourceMap": "195:6066:9:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220ed8a49cd2a84630b132bfb0c966ece1a8dc3108fd79eed4eeb88a0f7ff807b2c64736f6c63430008180033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED DUP11 BLOBHASH 0xCD 0x2A DUP5 PUSH4 0xB132BFB 0xC SWAP7 PUSH15 0xCE1A8DC3108FD79EED4EEB88A0F7FF DUP1 PUSH28 0x2C64736F6C6343000818003300000000000000000000000000000000 ",
              "sourceMap": "195:6066:9:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"
        }
      },
      "contracts/lib/EquitoApp.sol": {
        "EquitoApp": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidLength",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidMessageSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "chainSelector",
                  "type": "uint256"
                }
              ],
              "name": "InvalidPeer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                }
              ],
              "name": "InvalidRouter",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RouterAddressCannotBeZero",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "chainSelector",
                  "type": "uint256"
                }
              ],
              "name": "getPeer",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "lower",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "upper",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct bytes64",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "peers",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "lower",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "upper",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "blockNumber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sourceChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "sender",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "destinationChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "receiver",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "hashedData",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct EquitoMessage",
                  "name": "message",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "messageData",
                  "type": "bytes"
                }
              ],
              "name": "receiveMessage",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "chainSelectors",
                  "type": "uint256[]"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "lower",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "upper",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct bytes64[]",
                  "name": "addresses",
                  "type": "tuple[]"
                }
              ],
              "name": "setPeers",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getPeer(uint256)": "67ebb6b2",
              "owner()": "8da5cb5b",
              "peers(uint256)": "be4f3e8f",
              "receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)": "879d182d",
              "renounceOwnership()": "715018a6",
              "setPeers(uint256[],(bytes32,bytes32)[])": "59a1aae1",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessageSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainSelector\",\"type\":\"uint256\"}],\"name\":\"InvalidPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RouterAddressCannotBeZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainSelector\",\"type\":\"uint256\"}],\"name\":\"getPeer\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"sender\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"receiver\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"hashedData\",\"type\":\"bytes32\"}],\"internalType\":\"struct EquitoMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"messageData\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"chainSelectors\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64[]\",\"name\":\"addresses\",\"type\":\"tuple[]\"}],\"name\":\"setPeers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidPeer(uint256)\":[{\"params\":{\"chainSelector\":\"The chain selector for which the peer address is requested.\"}}],\"InvalidRouter(address)\":[{\"params\":{\"router\":\"The address of the router that caused the error.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_router\":\"The address of the router contract.\"}},\"getPeer(uint256)\":{\"details\":\"Throws an error if the chain selector is not found in the mapping.\",\"params\":{\"chainSelector\":\"The chain selector for which the peer address is requested.\"},\"returns\":{\"_0\":\"The peer address for the given chain selector.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"params\":{\"message\":\"The Equito message received.\",\"messageData\":\"The data of the message received.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setPeers(uint256[],(bytes32,bytes32)[])\":{\"params\":{\"addresses\":\"The list of addresses corresponding to the chain selectors.\",\"chainSelectors\":\"The list of chain selectors.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"peers\":{\"details\":\"Mapping to store peer addresses for different chain selectors.\"},\"router\":{\"details\":\"The Router Contract that is used to send and receive messages.\"}},\"title\":\"EquitoApp\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidLength()\":[{\"notice\":\"Thrown when the lengths of arrays are invalid.\"}],\"InvalidMessageSender()\":[{\"notice\":\"Thrown when the sender of a message is invalid.\"}],\"InvalidPeer(uint256)\":[{\"notice\":\"Thrown when a Peer address is not found in the mapping, given a chain selector.\"}],\"InvalidRouter(address)\":[{\"notice\":\"Thrown when the router address is invalid.\"}],\"RouterAddressCannotBeZero()\":[{\"notice\":\"Thrown when the router address is zero.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the EquitoApp contract and set the router address.\"},\"getPeer(uint256)\":{\"notice\":\"Returns the peer address for a given chain selector.\"},\"receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"notice\":\"Receives a cross-chain message from the Router Contract.         It is a wrapper function for the `_receiveMessage` functions, that need to be overridden.         Only the Router Contract is allowed to call this function.\"},\"setPeers(uint256[],(bytes32,bytes32)[])\":{\"notice\":\"Allows the owner to set the peer addresses for different chain selectors.\"}},\"notice\":\"This abstract contract is the base for all applications that want to leverage         the Equito cross-chain messaging protocol to communicate with other blockchains.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/EquitoApp.sol\":\"EquitoApp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/lib/EquitoApp.sol\":{\"keccak256\":\"0x3fd9cacecc2f0ada3e3f72e06a7de12dd9db39982c4981d9c5fa55b5979426fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41c4bb2c7196db2d86b748a5faf4a202ba777221b0221cdfef725a6b80eefc42\",\"dweb:/ipfs/QmSJqvPFG8Cg9ydUardJ2yFwAGAoFtZgn8xf15FHW6R3Qu\"]},\"contracts/lib/interfaces/IEquitoReceiver.sol\":{\"keccak256\":\"0xb1a49c5d13767c28a6e85b5885875ae6d258889418ece768df5fe4eaf5be4b8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5d697503f7864da23d917e1d37b8c41fef312bf5abb9c2e117f91fce83b17da\",\"dweb:/ipfs/QmeGYrLkcuhVWDQiBLcnx8u59cbSRqcFCrvj21CTz1Kd1E\"]},\"contracts/lib/interfaces/IRouter.sol\":{\"keccak256\":\"0x24b22f083be3aa163f88bdaae0587ea376792ad1bc55d841997c26b1e8ced957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21dd2b7a66e183e060e53bc00e63707c25dddd9241c384c538dcb87923253f06\",\"dweb:/ipfs/QmVTHUby1iTKLwUyJkBopSKQkRaQsnPa6YAcFRuVTUzknV\"]},\"contracts/lib/libraries/EquitoMessageLibrary.sol\":{\"keccak256\":\"0x386baff13825e343923a5b485c4d52b7abddac795593a1e404c78cb628f21f83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d529602c7b277ac9b549079ae5834af55394d2366f9da6ba76341ae69c452fc\",\"dweb:/ipfs/QmdHQYSJF6VbYCpo6xwN43JQGAUQRGzo7H1BWyqbyfV4GF\"]},\"contracts/lib/libraries/Errors.sol\":{\"keccak256\":\"0xaa84c699e7fbd3b4cc94b826b886be9826840e3777d3fce856f493a8958e5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ba3e0894f331050f7d0ea9c8f34c5be6bbcef5fadba162ec7f0c69a0aae0e57\",\"dweb:/ipfs/QmWwttocsizy87A7eaDUSRth8f9DHoW8conNiw1iFAeh94\"]}},\"version\":1}"
        }
      },
      "contracts/lib/interfaces/IEquitoReceiver.sol": {
        "IEquitoReceiver": {
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "blockNumber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sourceChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "sender",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "destinationChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "receiver",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "hashedData",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct EquitoMessage",
                  "name": "message",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "messageData",
                  "type": "bytes"
                }
              ],
              "name": "receiveMessage",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)": "879d182d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"sender\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"receiver\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"hashedData\",\"type\":\"bytes32\"}],\"internalType\":\"struct EquitoMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"messageData\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"params\":{\"message\":\"The Equito message received.\",\"messageData\":\"The data of the message.\"}}},\"title\":\"IEquitoReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"notice\":\"Receives a cross-chain message from the Router contract.\"}},\"notice\":\"Interface for contracts that can receive cross-chain messages via the Router contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IEquitoReceiver.sol\":\"IEquitoReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/lib/interfaces/IEquitoReceiver.sol\":{\"keccak256\":\"0xb1a49c5d13767c28a6e85b5885875ae6d258889418ece768df5fe4eaf5be4b8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5d697503f7864da23d917e1d37b8c41fef312bf5abb9c2e117f91fce83b17da\",\"dweb:/ipfs/QmeGYrLkcuhVWDQiBLcnx8u59cbSRqcFCrvj21CTz1Kd1E\"]},\"contracts/lib/libraries/EquitoMessageLibrary.sol\":{\"keccak256\":\"0x386baff13825e343923a5b485c4d52b7abddac795593a1e404c78cb628f21f83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d529602c7b277ac9b549079ae5834af55394d2366f9da6ba76341ae69c452fc\",\"dweb:/ipfs/QmdHQYSJF6VbYCpo6xwN43JQGAUQRGzo7H1BWyqbyfV4GF\"]}},\"version\":1}"
        }
      },
      "contracts/lib/interfaces/IRouter.sol": {
        "IEquitoFees": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "getFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getFee(address)": "b88c9148"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getFee(address)\":{\"params\":{\"sender\":\"The address of the Message Sender, usually an Equito App.\"},\"returns\":{\"_0\":\"The current fee amount in wei.\"}}},\"title\":\"IEquitoFees\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getFee(address)\":{\"notice\":\"Gets the current fee amount required to send a Message.\"}},\"notice\":\"Interface for the IEquitoFees contract, used to collect fees for Message Send transactions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IRouter.sol\":\"IEquitoFees\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/lib/interfaces/IRouter.sol\":{\"keccak256\":\"0x24b22f083be3aa163f88bdaae0587ea376792ad1bc55d841997c26b1e8ced957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21dd2b7a66e183e060e53bc00e63707c25dddd9241c384c538dcb87923253f06\",\"dweb:/ipfs/QmVTHUby1iTKLwUyJkBopSKQkRaQsnPa6YAcFRuVTUzknV\"]},\"contracts/lib/libraries/EquitoMessageLibrary.sol\":{\"keccak256\":\"0x386baff13825e343923a5b485c4d52b7abddac795593a1e404c78cb628f21f83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d529602c7b277ac9b549079ae5834af55394d2366f9da6ba76341ae69c452fc\",\"dweb:/ipfs/QmdHQYSJF6VbYCpo6xwN43JQGAUQRGzo7H1BWyqbyfV4GF\"]}},\"version\":1}"
        },
        "IRouter": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [],
              "name": "EquitoAddressSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [],
              "name": "EquitoFeesSet",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                }
              ],
              "name": "MessageDelivered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "messageHash",
                  "type": "bytes32"
                }
              ],
              "name": "MessageExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "blockNumber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sourceChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "sender",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "destinationChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "receiver",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "hashedData",
                      "type": "bytes32"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct EquitoMessage",
                  "name": "message",
                  "type": "tuple"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "messageData",
                  "type": "bytes"
                }
              ],
              "name": "MessageSendRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "verifier",
                  "type": "address"
                }
              ],
              "name": "VerifierAdded",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "chainSelector",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "blockNumber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sourceChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "sender",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "destinationChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "receiver",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "hashedData",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct EquitoMessage",
                  "name": "message",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "messageData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "verifierIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "proof",
                  "type": "bytes"
                }
              ],
              "name": "deliverAndExecuteMessage",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "blockNumber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sourceChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "sender",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "destinationChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "receiver",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "hashedData",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct EquitoMessage[]",
                  "name": "messages",
                  "type": "tuple[]"
                },
                {
                  "internalType": "uint256",
                  "name": "verifierIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "proof",
                  "type": "bytes"
                }
              ],
              "name": "deliverMessages",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "equitoAddress",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "blockNumber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sourceChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "sender",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "destinationChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "receiver",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "hashedData",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct EquitoMessage",
                  "name": "message",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "messageData",
                  "type": "bytes"
                }
              ],
              "name": "executeMessage",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "getFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "lower",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "upper",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct bytes64",
                  "name": "receiver",
                  "type": "tuple"
                },
                {
                  "internalType": "uint256",
                  "name": "destinationChainSelector",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "sendMessage",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "chainSelector()": "4e4bc847",
              "deliverAndExecuteMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes,uint256,bytes)": "f0a5704a",
              "deliverMessages((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32)[],uint256,bytes)": "71c67f3a",
              "equitoAddress()": "2ef5c989",
              "executeMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)": "27d951e9",
              "getFee(address)": "b88c9148",
              "sendMessage((bytes32,bytes32),uint256,bytes)": "dc203137"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EquitoAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EquitoFeesSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"name\":\"MessageDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"}],\"name\":\"MessageExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"sender\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"receiver\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"hashedData\",\"type\":\"bytes32\"}],\"indexed\":false,\"internalType\":\"struct EquitoMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"messageData\",\"type\":\"bytes\"}],\"name\":\"MessageSendRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"VerifierAdded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"chainSelector\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"sender\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"receiver\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"hashedData\",\"type\":\"bytes32\"}],\"internalType\":\"struct EquitoMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"messageData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"verifierIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"deliverAndExecuteMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"sender\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"receiver\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"hashedData\",\"type\":\"bytes32\"}],\"internalType\":\"struct EquitoMessage[]\",\"name\":\"messages\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"verifierIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"deliverMessages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"equitoAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"sender\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"receiver\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"hashedData\",\"type\":\"bytes32\"}],\"internalType\":\"struct EquitoMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"messageData\",\"type\":\"bytes\"}],\"name\":\"executeMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"receiver\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MessageDelivered(bytes32)\":{\"params\":{\"messageHash\":\"The hash of the message that has been delivered.\"}},\"MessageExecuted(bytes32)\":{\"params\":{\"messageHash\":\"The hash of the message that has been executed.\"}},\"MessageSendRequested((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"params\":{\"message\":\"The message being sent.\",\"messageData\":\"The data of the message being sent.\"}},\"VerifierAdded(address)\":{\"params\":{\"verifier\":\"The address of the new verifier.\"}}},\"kind\":\"dev\",\"methods\":{\"deliverAndExecuteMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes,uint256,bytes)\":{\"params\":{\"message\":\"The message to be executed.\",\"messageData\":\"The data of the message to be executed.\",\"proof\":\"The proof to provide to the verifier.\",\"verifierIndex\":\"The index of the verifier used to verify the message.\"}},\"deliverMessages((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32)[],uint256,bytes)\":{\"params\":{\"messages\":\"The list of messages to be delivered.\",\"proof\":\"The proof provided by the verifier.\",\"verifierIndex\":\"The index of the verifier used to verify the messages.\"}},\"executeMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"params\":{\"message\":\"The message to be executed.\",\"messageData\":\"The data of the message to be executed.\"}},\"getFee(address)\":{\"params\":{\"sender\":\"The address of the Message Sender, usually an Equito App.\"},\"returns\":{\"_0\":\"The current fee amount in wei.\"}},\"sendMessage((bytes32,bytes32),uint256,bytes)\":{\"params\":{\"data\":\"The message data.\",\"destinationChainSelector\":\"The chain selector of the destination chain.\",\"receiver\":\"The address of the receiver.\"},\"returns\":{\"_0\":\"The hash of the message.\"}}},\"title\":\"IRouter\",\"version\":1},\"userdoc\":{\"events\":{\"EquitoAddressSet()\":{\"notice\":\"Event emitted when the equito address is set.\"},\"EquitoFeesSet()\":{\"notice\":\"Emitted when the Equito fees are set.\"},\"MessageDelivered(bytes32)\":{\"notice\":\"Emitted when a messages has successfully been delivered, ready to be executed.\"},\"MessageExecuted(bytes32)\":{\"notice\":\"Emitted when a message has successfully been executed.\"},\"MessageSendRequested((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"notice\":\"Emitted when a message send request is created.\"},\"VerifierAdded(address)\":{\"notice\":\"Emitted when a new verifier is added.\"}},\"kind\":\"user\",\"methods\":{\"chainSelector()\":{\"notice\":\"Returns the chain selector of the current chain.\"},\"deliverAndExecuteMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes,uint256,bytes)\":{\"notice\":\"Verify and execute a message with the appropriate receiver contract.\"},\"deliverMessages((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32)[],uint256,bytes)\":{\"notice\":\"Delivers messages to be stored for later execution.\"},\"equitoAddress()\":{\"notice\":\"Returns the equito address.\"},\"executeMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"notice\":\"Executes a stored message.\"},\"getFee(address)\":{\"notice\":\"Gets the current fee amount required to send a Message.\"},\"sendMessage((bytes32,bytes32),uint256,bytes)\":{\"notice\":\"Sends a cross-chain message using Equito.\"}},\"notice\":\"Interface for the Router contract, used to interact with the cross-chain messaging protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IRouter.sol\":\"IRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/lib/interfaces/IRouter.sol\":{\"keccak256\":\"0x24b22f083be3aa163f88bdaae0587ea376792ad1bc55d841997c26b1e8ced957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21dd2b7a66e183e060e53bc00e63707c25dddd9241c384c538dcb87923253f06\",\"dweb:/ipfs/QmVTHUby1iTKLwUyJkBopSKQkRaQsnPa6YAcFRuVTUzknV\"]},\"contracts/lib/libraries/EquitoMessageLibrary.sol\":{\"keccak256\":\"0x386baff13825e343923a5b485c4d52b7abddac795593a1e404c78cb628f21f83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d529602c7b277ac9b549079ae5834af55394d2366f9da6ba76341ae69c452fc\",\"dweb:/ipfs/QmdHQYSJF6VbYCpo6xwN43JQGAUQRGzo7H1BWyqbyfV4GF\"]}},\"version\":1}"
        }
      },
      "contracts/lib/libraries/EquitoMessageLibrary.sol": {
        "EquitoMessageLibrary": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212209d00436aaaea1afbcd5884c3e59aa533847a8cc6ce7de39ab2481af94c52283d64736f6c63430008180033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 STOP NUMBER PUSH11 0xAAEA1AFBCD5884C3E59AA5 CALLER DUP5 PUSH27 0x8CC6CE7DE39AB2481AF94C52283D64736F6C634300081800330000 ",
              "sourceMap": "1290:883:17:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea26469706673582212209d00436aaaea1afbcd5884c3e59aa533847a8cc6ce7de39ab2481af94c52283d64736f6c63430008180033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 STOP NUMBER PUSH11 0xAAEA1AFBCD5884C3E59AA5 CALLER DUP5 PUSH27 0x8CC6CE7DE39AB2481AF94C52283D64736F6C634300081800330000 ",
              "sourceMap": "1290:883:17:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contains hashing function for EquitoMessage.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"EquitoMessageLibrary\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library providing helper functions for EquitoMessage struct.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/libraries/EquitoMessageLibrary.sol\":\"EquitoMessageLibrary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/lib/libraries/EquitoMessageLibrary.sol\":{\"keccak256\":\"0x386baff13825e343923a5b485c4d52b7abddac795593a1e404c78cb628f21f83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d529602c7b277ac9b549079ae5834af55394d2366f9da6ba76341ae69c452fc\",\"dweb:/ipfs/QmdHQYSJF6VbYCpo6xwN43JQGAUQRGzo7H1BWyqbyfV4GF\"]}},\"version\":1}"
        }
      },
      "contracts/lib/libraries/Errors.sol": {
        "Errors": {
          "abi": [
            {
              "inputs": [],
              "name": "CostMustBeGreaterThanZero",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InitialVerifierZeroAddress",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientFee",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientValueSent",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidLength",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidLiquidityProvider",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidMessageSender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidMessagesProof",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidOperation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "chainSelector",
                  "type": "uint256"
                }
              ],
              "name": "InvalidPeer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                }
              ],
              "name": "InvalidRouter",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "InvalidSender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSessionId",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSovereign",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidTokenPriceFromOracle",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidVerifierIndex",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RouterAddressCannotBeZero",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RouterAlreadySet",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SessionIdMismatch",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TransferFailed",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ea2377e6c47d1fa5bc8ea0a9d865f744d18d15693deca9e410ebe36b524162cb64736f6c63430008180033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x23 PUSH24 0xE6C47D1FA5BC8EA0A9D865F744D18D15693DECA9E410EBE3 PUSH12 0x524162CB64736F6C63430008 XOR STOP CALLER ",
              "sourceMap": "155:2543:18:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220ea2377e6c47d1fa5bc8ea0a9d865f744d18d15693deca9e410ebe36b524162cb64736f6c63430008180033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x23 PUSH24 0xE6C47D1FA5BC8EA0A9D865F744D18D15693DECA9E410EBE3 PUSH12 0x524162CB64736F6C63430008 XOR STOP CALLER ",
              "sourceMap": "155:2543:18:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CostMustBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitialVerifierZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValueSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLiquidityProvider\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessageSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessagesProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainSelector\",\"type\":\"uint256\"}],\"name\":\"InvalidPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"InvalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSessionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSovereign\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenPriceFromOracle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVerifierIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RouterAddressCannotBeZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RouterAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SessionIdMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"InvalidPeer(uint256)\":[{\"params\":{\"chainSelector\":\"The chain selector for which the peer address is requested.\"}}],\"InvalidRouter(address)\":[{\"params\":{\"router\":\"The address of the router that caused the error.\"}}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"Errors\",\"version\":1},\"userdoc\":{\"errors\":{\"CostMustBeGreaterThanZero()\":[{\"notice\":\"Thrown when the provided cost is not greater than zero.\"}],\"InitialVerifierZeroAddress()\":[{\"notice\":\"Thrown when the initial verifier address provided in the constructor is zero.\"}],\"InsufficientFee()\":[{\"notice\":\"Thrown when the provided fee is insufficient to cover the required cost.\"}],\"InsufficientValueSent()\":[{\"notice\":\"Thrown when the amount of ether sent with the transaction is insufficient.\"}],\"InvalidLength()\":[{\"notice\":\"Thrown when the lengths of arrays are invalid.\"}],\"InvalidLiquidityProvider()\":[{\"notice\":\"Thrown when an invalid liquidity provider address is provided.\"}],\"InvalidMessageSender()\":[{\"notice\":\"Thrown when the sender of a message is invalid.\"}],\"InvalidMessagesProof()\":[{\"notice\":\"Thrown when the proof for verifying messages is invalid.\"}],\"InvalidOperation()\":[{\"notice\":\"Thrown when an invalid operation code is encountered in the received message.\"}],\"InvalidPeer(uint256)\":[{\"notice\":\"Thrown when a Peer address is not found in the mapping, given a chain selector.\"}],\"InvalidRouter(address)\":[{\"notice\":\"Thrown when the router address is invalid.\"}],\"InvalidSender(address)\":[{\"notice\":\"Thrown when an invalid sender is calling a function.\"}],\"InvalidSessionId()\":[{\"notice\":\"Thrown when the provided session ID does not match the current session.\"}],\"InvalidSovereign()\":[{\"notice\":\"Thrown when a message is received from an invalid sovereign account.\"}],\"InvalidTokenPriceFromOracle()\":[{\"notice\":\"Thrown when the token price retrieved from the oracle is invalid or zero.\"}],\"InvalidVerifierIndex()\":[{\"notice\":\"Thrown when the verifier index provided is out of bounds.\"}],\"RouterAddressCannotBeZero()\":[{\"notice\":\"Thrown when the router address is zero.\"}],\"RouterAlreadySet()\":[{\"notice\":\"Thrown when attempting to set the router, but the router is already set.\"}],\"SessionIdMismatch()\":[{\"notice\":\"Thrown when there is a mismatch in session IDs during validation.\"}],\"TransferFailed()\":[{\"notice\":\"Thrown when a transfer of fees to the liquidity provider fails.\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Defines all error messages used in the EquitoApp contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/libraries/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/lib/libraries/Errors.sol\":{\"keccak256\":\"0xaa84c699e7fbd3b4cc94b826b886be9826840e3777d3fce856f493a8958e5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ba3e0894f331050f7d0ea9c8f34c5be6bbcef5fadba162ec7f0c69a0aae0e57\",\"dweb:/ipfs/QmWwttocsizy87A7eaDUSRth8f9DHoW8conNiw1iFAeh94\"]}},\"version\":1}"
        }
      },
      "contracts/routers/BasicRouter.sol": {
        "BasicRouter": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "AddressEmptyCode",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "AddressInsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FailedInnerCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "name": "EthToTokenSwap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "name": "TokenSwap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "name": "TokenToEthSwap",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                }
              ],
              "name": "getAmountOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "priceUSD",
                  "type": "uint256"
                }
              ],
              "name": "setTokenPrice",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "swapETHToTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "swapTokenToToken",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "swapTokensToETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "tokenPricesUSD",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "weth",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "fun_grantRole": {
                  "entryPoint": 39,
                  "id": 256,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346100225761001233610027565b50604051610dc990816100b88239f35b600080fd5b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff166100b357818052816020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b509056fe6080604081815260049081361015610022575b505050361561002057600080fd5b005b600092833560e01c90816301ffc9a7146108385750806319089a0d14610801578063248a9ca3146107d75780632f2ff15d146107af57806336568abe1461074f5780633f3f80c3146105a15780633fc8cef314610572578063431f63c9146105035780634aa06652146104ca578063796449dd1461032657806391d14854146102e1578063a217fddf146102c6578063bed2d5e8146101055763d547741f0361001257346101015780600319360112610101576100fd91356100f860016100e76108f2565b938387528660205286200154610a7f565b610b42565b5080f35b8280fd5b508083916003193601126102c25761011b6108d7565b6101236108f2565b341561027f5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8452602094600186526101816001600160a01b038587205494169384875261017c868820549180151580610276575b61017690610a1c565b34610940565b610969565b9484516370a0823160e01b815230838201528781602481885afa91821561026b5790818893610235575b5050106101f35750836101be9183610bb8565b815134815283858201527f59a6c2d15a2ae3486483464c924ab1cb80dcfd000530f15c1f89f25f22e69853833392a351908152f35b6064908685519162461bcd60e51b8352820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e63650000000000006044820152fd5b915091508782813d8311610264575b61024e8183610908565b81010312610261575085905188806101ab565b80fd5b503d610244565b8651903d90823e3d90fd5b5082151561016d565b606485602085519162461bcd60e51b8352820152601560248201527f4d7573742073656e642045544820746f207377617000000000000000000000006044820152fd5b5080fd5b8382346102c257816003193601126102c25751908152602090f35b5090346101015781600319360112610101578160209360ff926103026108f2565b903582528186526001600160a01b0383832091168252855220541690519015158152f35b5034610101576060366003190112610101576103406108d7565b602435604435946001600160a01b03958681168091036102c25773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82526103a4602097600189528684205495169485845261017c87852054821515806104c1575b61039e90610a1c565b86610940565b85516323b872dd60e01b815233818901908152306020820152604081018690529197918990829081906060010381878a5af180156104b75761048a575b50864710610448575081808088819482821561043f575bf1156104345750825190815283858201527f0de0de7715272cc074c6aa787cb38a0922f4f1eb76660f2ec9a2973a1e23ff86833392a351908152f35b8351903d90823e3d90fd5b506108fc6103f8565b6064908887519162461bcd60e51b8352820152601860248201527f496e73756666696369656e74204554482062616c616e636500000000000000006044820152fd5b6104a990893d8b116104b0575b6104a18183610908565b810190610a67565b50386103e1565b503d610497565b87513d86823e3d90fd5b50801515610395565b8382346102c25760603660031901126102c2576020906104fc6104eb6108d7565b6104f36108f2565b60443591610989565b9051908152f35b50903461010157816003193601126101015761051d6108d7565b908380528360205282842033855260205260ff83852054161561055557506001600160a01b0316825260016020526024359082205580f35b6044908484519163e2517d3f60e01b835233908301526024820152fd5b8382346102c257816003193601126102c2576020905173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152f35b508290346102c25760803660031901126102c2576105bd6108d7565b916105c66108f2565b936044356064356001600160a01b0392838216820361074b57836105eb848a8a610989565b87516323b872dd60e01b602080830191909152336024830152306044830152606480830188905282529a91999290921695916106329061062c608482610908565b87610c20565b169486516370a0823160e01b8152308382015289816024818a5afa9182156107405790818a9361070d575b5050106106a55750856106709185610bb8565b835190815284868201527f2e05fc618ccc3aec7d710f137a131e0ab5b31af09fc6a0edb726dcd94b2e478f843392a451908152f35b6084908887519162461bcd60e51b8352820152602160248201527f496e73756666696369656e74206f757470757420746f6b656e2062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152fd5b915091508982813d8311610739575b6107268183610908565b8101031261026157508790518a8061065d565b503d61071c565b8851903d90823e3d90fd5b8480fd5b508290346102c257806003193601126102c25761076a6108f2565b90336001600160a01b0383160361078757506100fd919235610b42565b8390517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b50346101015780600319360112610101576100fd91356107d260016100e76108f2565b610ac3565b50903461010157602036600319011261010157816020936001923581528085522001549051908152f35b8382346102c25760203660031901126102c257806020926001600160a01b036108286108d7565b1681526001845220549051908152f35b8490843461010157602036600319011261010157357fffffffff00000000000000000000000000000000000000000000000000000000811680910361010157602092507f7965db0b0000000000000000000000000000000000000000000000000000000081149081156108ad575b5015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014836108a6565b600435906001600160a01b03821682036108ed57565b600080fd5b602435906001600160a01b03821682036108ed57565b90601f8019910116810190811067ffffffffffffffff82111761092a57604052565b634e487b7160e01b600052604160045260246000fd5b8181029291811591840414171561095357565b634e487b7160e01b600052601160045260246000fd5b8115610973570490565b634e487b7160e01b600052601260045260246000fd5b9190916001600160a01b03809116600052600160205260406000205492166000526040600020549082151580610a13575b156109cf576109cc9261017c91610940565b90565b606460405162461bcd60e51b815260206004820152601360248201527f546f6b656e207072696365206e6f7420736574000000000000000000000000006044820152fd5b508115156109ba565b15610a2357565b606460405162461bcd60e51b815260206004820152601a60248201527f455448206f7220546f6b656e207072696365206e6f74207365740000000000006044820152fd5b908160209103126108ed575180151581036108ed5790565b80600052600060205260406000203360005260205260ff6040600020541615610aa55750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b90600091808352826020526001600160a01b036040842092169182845260205260ff60408420541615600014610b3d57808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b90600091808352826020526001600160a01b036040842092169182845260205260ff604084205416600014610b3d5780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b916001600160a01b03604051927fa9059cbb000000000000000000000000000000000000000000000000000000006020850152166024830152604482015260448152608081019181831067ffffffffffffffff84111761092a57610c1e92604052610c20565b565b6001600160a01b031690600080826020829451910182865af13d15610cf3573d67ffffffffffffffff8111610cdf57604051610c7d939291610c6c601f8201601f191660200183610908565b8152809260203d92013e5b83610d00565b8051908115159182610cc4575b5050610c935750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b610cd79250602080918301019101610a67565b153880610c8a565b602483634e487b7160e01b81526041600452fd5b610c7d9150606090610c77565b90610d3f5750805115610d1557805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580610d8a575b610d50575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15610d4856fea264697066735822122001c53612b3a0749dd90f1953144dedc0f093b0a5f449f5fd6ac3c192da79b77064736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x22 JUMPI PUSH2 0x12 CALLER PUSH2 0x27 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xDC9 SWAP1 DUP2 PUSH2 0xB8 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH2 0xB3 JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x22 JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x838 JUMPI POP DUP1 PUSH4 0x19089A0D EQ PUSH2 0x801 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x7D7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x7AF JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x74F JUMPI DUP1 PUSH4 0x3F3F80C3 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0x431F63C9 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x796449DD EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xBED2D5E8 EQ PUSH2 0x105 JUMPI PUSH4 0xD547741F SUB PUSH2 0x12 JUMPI CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0xFD SWAP2 CALLDATALOAD PUSH2 0xF8 PUSH1 0x1 PUSH2 0xE7 PUSH2 0x8F2 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xA7F JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 DUP4 SWAP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C2 JUMPI PUSH2 0x11B PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x8F2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x27F JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 DUP7 MSTORE PUSH2 0x181 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP8 KECCAK256 SLOAD SWAP5 AND SWAP4 DUP5 DUP8 MSTORE PUSH2 0x17C DUP7 DUP9 KECCAK256 SLOAD SWAP2 DUP1 ISZERO ISZERO DUP1 PUSH2 0x276 JUMPI JUMPDEST PUSH2 0x176 SWAP1 PUSH2 0xA1C JUMP JUMPDEST CALLVALUE PUSH2 0x940 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST SWAP5 DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x26B JUMPI SWAP1 DUP2 DUP9 SWAP4 PUSH2 0x235 JUMPI JUMPDEST POP POP LT PUSH2 0x1F3 JUMPI POP DUP4 PUSH2 0x1BE SWAP2 DUP4 PUSH2 0xBB8 JUMP JUMPDEST DUP2 MLOAD CALLVALUE DUP2 MSTORE DUP4 DUP6 DUP3 ADD MSTORE PUSH32 0x59A6C2D15A2AE3486483464C924AB1CB80DCFD000530F15C1F89F25F22E69853 DUP4 CALLER SWAP3 LOG3 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 POP SWAP2 POP DUP8 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x264 JUMPI JUMPDEST PUSH2 0x24E DUP2 DUP4 PUSH2 0x908 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI POP DUP6 SWAP1 MLOAD DUP9 DUP1 PUSH2 0x1AB JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x244 JUMP JUMPDEST DUP7 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0x16D JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F20737761700000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2C2 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C2 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x302 PUSH2 0x8F2 JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE DUP2 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x340 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x2C2 JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH2 0x3A4 PUSH1 0x20 SWAP8 PUSH1 0x1 DUP10 MSTORE DUP7 DUP5 KECCAK256 SLOAD SWAP6 AND SWAP5 DUP6 DUP5 MSTORE PUSH2 0x17C DUP8 DUP6 KECCAK256 SLOAD DUP3 ISZERO ISZERO DUP1 PUSH2 0x4C1 JUMPI JUMPDEST PUSH2 0x39E SWAP1 PUSH2 0xA1C JUMP JUMPDEST DUP7 PUSH2 0x940 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP10 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP8 SWAP2 DUP10 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP8 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH2 0x48A JUMPI JUMPDEST POP DUP7 SELFBALANCE LT PUSH2 0x448 JUMPI POP DUP2 DUP1 DUP1 DUP9 DUP2 SWAP5 DUP3 DUP3 ISZERO PUSH2 0x43F JUMPI JUMPDEST CALL ISZERO PUSH2 0x434 JUMPI POP DUP3 MLOAD SWAP1 DUP2 MSTORE DUP4 DUP6 DUP3 ADD MSTORE PUSH32 0xDE0DE7715272CC074C6AA787CB38A0922F4F1EB76660F2EC9A2973A1E23FF86 DUP4 CALLER SWAP3 LOG3 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x64 SWAP1 DUP9 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204554482062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x4A9 SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x4B0 JUMPI JUMPDEST PUSH2 0x4A1 DUP2 DUP4 PUSH2 0x908 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA67 JUMP JUMPDEST POP CODESIZE PUSH2 0x3E1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x497 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x395 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2C2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C2 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x4FC PUSH2 0x4EB PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x989 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0x51D PUSH2 0x8D7 JUMP JUMPDEST SWAP1 DUP4 DUP1 MSTORE DUP4 PUSH1 0x20 MSTORE DUP3 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0x555 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x44 SWAP1 DUP5 DUP5 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2C2 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C2 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2C2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C2 JUMPI PUSH2 0x5BD PUSH2 0x8D7 JUMP JUMPDEST SWAP2 PUSH2 0x5C6 PUSH2 0x8F2 JUMP JUMPDEST SWAP4 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP3 AND DUP3 SUB PUSH2 0x74B JUMPI DUP4 PUSH2 0x5EB DUP5 DUP11 DUP11 PUSH2 0x989 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP9 SWAP1 MSTORE DUP3 MSTORE SWAP11 SWAP2 SWAP10 SWAP3 SWAP1 SWAP3 AND SWAP6 SWAP2 PUSH2 0x632 SWAP1 PUSH2 0x62C PUSH1 0x84 DUP3 PUSH2 0x908 JUMP JUMPDEST DUP8 PUSH2 0xC20 JUMP JUMPDEST AND SWAP5 DUP7 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP4 DUP3 ADD MSTORE DUP10 DUP2 PUSH1 0x24 DUP2 DUP11 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x740 JUMPI SWAP1 DUP2 DUP11 SWAP4 PUSH2 0x70D JUMPI JUMPDEST POP POP LT PUSH2 0x6A5 JUMPI POP DUP6 PUSH2 0x670 SWAP2 DUP6 PUSH2 0xBB8 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP2 MSTORE DUP5 DUP7 DUP3 ADD MSTORE PUSH32 0x2E05FC618CCC3AEC7D710F137A131E0AB5B31AF09FC6A0EDB726DCD94B2E478F DUP5 CALLER SWAP3 LOG4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 DUP9 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206F757470757420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 POP SWAP2 POP DUP10 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x739 JUMPI JUMPDEST PUSH2 0x726 DUP2 DUP4 PUSH2 0x908 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI POP DUP8 SWAP1 MLOAD DUP11 DUP1 PUSH2 0x65D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x71C JUMP JUMPDEST DUP9 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2C2 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C2 JUMPI PUSH2 0x76A PUSH2 0x8F2 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x787 JUMPI POP PUSH2 0xFD SWAP2 SWAP3 CALLDATALOAD PUSH2 0xB42 JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0xFD SWAP2 CALLDATALOAD PUSH2 0x7D2 PUSH1 0x1 PUSH2 0xE7 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2C2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C2 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x828 PUSH2 0x8D7 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x101 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x8AD JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ DUP4 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8ED JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8ED JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x92A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x953 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x973 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 AND PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP3 ISZERO ISZERO DUP1 PUSH2 0xA13 JUMPI JUMPDEST ISZERO PUSH2 0x9CF JUMPI PUSH2 0x9CC SWAP3 PUSH2 0x17C SWAP2 PUSH2 0x940 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207072696365206E6F742073657400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x9BA JUMP JUMPDEST ISZERO PUSH2 0xA23 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206F7220546F6B656E207072696365206E6F7420736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x8ED JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x8ED JUMPI SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xAA5 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xB3D JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xB3D JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x92A JUMPI PUSH2 0xC1E SWAP3 PUSH1 0x40 MSTORE PUSH2 0xC20 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 MLOAD SWAP2 ADD DUP3 DUP7 GAS CALL RETURNDATASIZE ISZERO PUSH2 0xCF3 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xCDF JUMPI PUSH1 0x40 MLOAD PUSH2 0xC7D SWAP4 SWAP3 SWAP2 PUSH2 0xC6C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0x908 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP3 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP4 PUSH2 0xD00 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0xCC4 JUMPI JUMPDEST POP POP PUSH2 0xC93 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xCD7 SWAP3 POP PUSH1 0x20 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0xA67 JUMP JUMPDEST ISZERO CODESIZE DUP1 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xC7D SWAP2 POP PUSH1 0x60 SWAP1 PUSH2 0xC77 JUMP JUMPDEST SWAP1 PUSH2 0xD3F JUMPI POP DUP1 MLOAD ISZERO PUSH2 0xD15 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0xD8A JUMPI JUMPDEST PUSH2 0xD50 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0xD48 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC5 CALLDATASIZE SLT 0xB3 LOG0 PUSH21 0x9DD90F1953144DEDC0F093B0A5F449F5FD6AC3C192 0xDA PUSH26 0xB77064736F6C6343000818003300000000000000000000000000 ",
              "sourceMap": "362:4351:19:-:0;;;;;;700:44;735:10:10;700:44:19;:::i;:::-;;362:4351;;;;;;;;;;;;;6179:316:0;-1:-1:-1;;;;;362:4351:19;2232:4:0;362:4351:19;;;;;;;;;;2232:4:0;;362:4351:19;;;;;;;;;;;;;;;;;;;;;;6347:4:0;362:4351:19;;;;;;;;735:10:10;6370:40:0;;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 2290,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_7013": {
                  "entryPoint": 2263,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 2663,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 2409,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 2368,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 2312,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_callOptionalReturn": {
                  "entryPoint": 3104,
                  "id": 1558,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkRole": {
                  "entryPoint": 2687,
                  "id": 93,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_getAmountOut": {
                  "entryPoint": 2441,
                  "id": 2678,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "fun_grantRole": {
                  "entryPoint": 2755,
                  "id": 256,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_revokeRole": {
                  "entryPoint": 2882,
                  "id": 294,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_safeTransfer": {
                  "entryPoint": 3000,
                  "id": 1368,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_verifyCallResultFromTarget": {
                  "entryPoint": 3328,
                  "id": 1820,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_094d": {
                  "entryPoint": 2588,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604081815260049081361015610022575b505050361561002057600080fd5b005b600092833560e01c90816301ffc9a7146108385750806319089a0d14610801578063248a9ca3146107d75780632f2ff15d146107af57806336568abe1461074f5780633f3f80c3146105a15780633fc8cef314610572578063431f63c9146105035780634aa06652146104ca578063796449dd1461032657806391d14854146102e1578063a217fddf146102c6578063bed2d5e8146101055763d547741f0361001257346101015780600319360112610101576100fd91356100f860016100e76108f2565b938387528660205286200154610a7f565b610b42565b5080f35b8280fd5b508083916003193601126102c25761011b6108d7565b6101236108f2565b341561027f5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8452602094600186526101816001600160a01b038587205494169384875261017c868820549180151580610276575b61017690610a1c565b34610940565b610969565b9484516370a0823160e01b815230838201528781602481885afa91821561026b5790818893610235575b5050106101f35750836101be9183610bb8565b815134815283858201527f59a6c2d15a2ae3486483464c924ab1cb80dcfd000530f15c1f89f25f22e69853833392a351908152f35b6064908685519162461bcd60e51b8352820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e63650000000000006044820152fd5b915091508782813d8311610264575b61024e8183610908565b81010312610261575085905188806101ab565b80fd5b503d610244565b8651903d90823e3d90fd5b5082151561016d565b606485602085519162461bcd60e51b8352820152601560248201527f4d7573742073656e642045544820746f207377617000000000000000000000006044820152fd5b5080fd5b8382346102c257816003193601126102c25751908152602090f35b5090346101015781600319360112610101578160209360ff926103026108f2565b903582528186526001600160a01b0383832091168252855220541690519015158152f35b5034610101576060366003190112610101576103406108d7565b602435604435946001600160a01b03958681168091036102c25773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee82526103a4602097600189528684205495169485845261017c87852054821515806104c1575b61039e90610a1c565b86610940565b85516323b872dd60e01b815233818901908152306020820152604081018690529197918990829081906060010381878a5af180156104b75761048a575b50864710610448575081808088819482821561043f575bf1156104345750825190815283858201527f0de0de7715272cc074c6aa787cb38a0922f4f1eb76660f2ec9a2973a1e23ff86833392a351908152f35b8351903d90823e3d90fd5b506108fc6103f8565b6064908887519162461bcd60e51b8352820152601860248201527f496e73756666696369656e74204554482062616c616e636500000000000000006044820152fd5b6104a990893d8b116104b0575b6104a18183610908565b810190610a67565b50386103e1565b503d610497565b87513d86823e3d90fd5b50801515610395565b8382346102c25760603660031901126102c2576020906104fc6104eb6108d7565b6104f36108f2565b60443591610989565b9051908152f35b50903461010157816003193601126101015761051d6108d7565b908380528360205282842033855260205260ff83852054161561055557506001600160a01b0316825260016020526024359082205580f35b6044908484519163e2517d3f60e01b835233908301526024820152fd5b8382346102c257816003193601126102c2576020905173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152f35b508290346102c25760803660031901126102c2576105bd6108d7565b916105c66108f2565b936044356064356001600160a01b0392838216820361074b57836105eb848a8a610989565b87516323b872dd60e01b602080830191909152336024830152306044830152606480830188905282529a91999290921695916106329061062c608482610908565b87610c20565b169486516370a0823160e01b8152308382015289816024818a5afa9182156107405790818a9361070d575b5050106106a55750856106709185610bb8565b835190815284868201527f2e05fc618ccc3aec7d710f137a131e0ab5b31af09fc6a0edb726dcd94b2e478f843392a451908152f35b6084908887519162461bcd60e51b8352820152602160248201527f496e73756666696369656e74206f757470757420746f6b656e2062616c616e6360448201527f65000000000000000000000000000000000000000000000000000000000000006064820152fd5b915091508982813d8311610739575b6107268183610908565b8101031261026157508790518a8061065d565b503d61071c565b8851903d90823e3d90fd5b8480fd5b508290346102c257806003193601126102c25761076a6108f2565b90336001600160a01b0383160361078757506100fd919235610b42565b8390517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b50346101015780600319360112610101576100fd91356107d260016100e76108f2565b610ac3565b50903461010157602036600319011261010157816020936001923581528085522001549051908152f35b8382346102c25760203660031901126102c257806020926001600160a01b036108286108d7565b1681526001845220549051908152f35b8490843461010157602036600319011261010157357fffffffff00000000000000000000000000000000000000000000000000000000811680910361010157602092507f7965db0b0000000000000000000000000000000000000000000000000000000081149081156108ad575b5015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014836108a6565b600435906001600160a01b03821682036108ed57565b600080fd5b602435906001600160a01b03821682036108ed57565b90601f8019910116810190811067ffffffffffffffff82111761092a57604052565b634e487b7160e01b600052604160045260246000fd5b8181029291811591840414171561095357565b634e487b7160e01b600052601160045260246000fd5b8115610973570490565b634e487b7160e01b600052601260045260246000fd5b9190916001600160a01b03809116600052600160205260406000205492166000526040600020549082151580610a13575b156109cf576109cc9261017c91610940565b90565b606460405162461bcd60e51b815260206004820152601360248201527f546f6b656e207072696365206e6f7420736574000000000000000000000000006044820152fd5b508115156109ba565b15610a2357565b606460405162461bcd60e51b815260206004820152601a60248201527f455448206f7220546f6b656e207072696365206e6f74207365740000000000006044820152fd5b908160209103126108ed575180151581036108ed5790565b80600052600060205260406000203360005260205260ff6040600020541615610aa55750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b90600091808352826020526001600160a01b036040842092169182845260205260ff60408420541615600014610b3d57808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b90600091808352826020526001600160a01b036040842092169182845260205260ff604084205416600014610b3d5780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b916001600160a01b03604051927fa9059cbb000000000000000000000000000000000000000000000000000000006020850152166024830152604482015260448152608081019181831067ffffffffffffffff84111761092a57610c1e92604052610c20565b565b6001600160a01b031690600080826020829451910182865af13d15610cf3573d67ffffffffffffffff8111610cdf57604051610c7d939291610c6c601f8201601f191660200183610908565b8152809260203d92013e5b83610d00565b8051908115159182610cc4575b5050610c935750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b610cd79250602080918301019101610a67565b153880610c8a565b602483634e487b7160e01b81526041600452fd5b610c7d9150606090610c77565b90610d3f5750805115610d1557805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580610d8a575b610d50575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15610d4856fea264697066735822122001c53612b3a0749dd90f1953144dedc0f093b0a5f449f5fd6ac3c192da79b77064736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x22 JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x838 JUMPI POP DUP1 PUSH4 0x19089A0D EQ PUSH2 0x801 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x7D7 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x7AF JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x74F JUMPI DUP1 PUSH4 0x3F3F80C3 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0x431F63C9 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x796449DD EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xBED2D5E8 EQ PUSH2 0x105 JUMPI PUSH4 0xD547741F SUB PUSH2 0x12 JUMPI CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0xFD SWAP2 CALLDATALOAD PUSH2 0xF8 PUSH1 0x1 PUSH2 0xE7 PUSH2 0x8F2 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xA7F JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 DUP4 SWAP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C2 JUMPI PUSH2 0x11B PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x8F2 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x27F JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 DUP7 MSTORE PUSH2 0x181 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP8 KECCAK256 SLOAD SWAP5 AND SWAP4 DUP5 DUP8 MSTORE PUSH2 0x17C DUP7 DUP9 KECCAK256 SLOAD SWAP2 DUP1 ISZERO ISZERO DUP1 PUSH2 0x276 JUMPI JUMPDEST PUSH2 0x176 SWAP1 PUSH2 0xA1C JUMP JUMPDEST CALLVALUE PUSH2 0x940 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST SWAP5 DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP4 DUP3 ADD MSTORE DUP8 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x26B JUMPI SWAP1 DUP2 DUP9 SWAP4 PUSH2 0x235 JUMPI JUMPDEST POP POP LT PUSH2 0x1F3 JUMPI POP DUP4 PUSH2 0x1BE SWAP2 DUP4 PUSH2 0xBB8 JUMP JUMPDEST DUP2 MLOAD CALLVALUE DUP2 MSTORE DUP4 DUP6 DUP3 ADD MSTORE PUSH32 0x59A6C2D15A2AE3486483464C924AB1CB80DCFD000530F15C1F89F25F22E69853 DUP4 CALLER SWAP3 LOG3 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 POP SWAP2 POP DUP8 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x264 JUMPI JUMPDEST PUSH2 0x24E DUP2 DUP4 PUSH2 0x908 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI POP DUP6 SWAP1 MLOAD DUP9 DUP1 PUSH2 0x1AB JUMP JUMPDEST DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x244 JUMP JUMPDEST DUP7 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0x16D JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F20737761700000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2C2 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C2 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x302 PUSH2 0x8F2 JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE DUP2 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI PUSH2 0x340 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x2C2 JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP3 MSTORE PUSH2 0x3A4 PUSH1 0x20 SWAP8 PUSH1 0x1 DUP10 MSTORE DUP7 DUP5 KECCAK256 SLOAD SWAP6 AND SWAP5 DUP6 DUP5 MSTORE PUSH2 0x17C DUP8 DUP6 KECCAK256 SLOAD DUP3 ISZERO ISZERO DUP1 PUSH2 0x4C1 JUMPI JUMPDEST PUSH2 0x39E SWAP1 PUSH2 0xA1C JUMP JUMPDEST DUP7 PUSH2 0x940 JUMP JUMPDEST DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP10 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP8 SWAP2 DUP10 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB DUP2 DUP8 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH2 0x48A JUMPI JUMPDEST POP DUP7 SELFBALANCE LT PUSH2 0x448 JUMPI POP DUP2 DUP1 DUP1 DUP9 DUP2 SWAP5 DUP3 DUP3 ISZERO PUSH2 0x43F JUMPI JUMPDEST CALL ISZERO PUSH2 0x434 JUMPI POP DUP3 MLOAD SWAP1 DUP2 MSTORE DUP4 DUP6 DUP3 ADD MSTORE PUSH32 0xDE0DE7715272CC074C6AA787CB38A0922F4F1EB76660F2EC9A2973A1E23FF86 DUP4 CALLER SWAP3 LOG3 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x64 SWAP1 DUP9 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204554482062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x4A9 SWAP1 DUP10 RETURNDATASIZE DUP12 GT PUSH2 0x4B0 JUMPI JUMPDEST PUSH2 0x4A1 DUP2 DUP4 PUSH2 0x908 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xA67 JUMP JUMPDEST POP CODESIZE PUSH2 0x3E1 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x497 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 ISZERO ISZERO PUSH2 0x395 JUMP JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2C2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C2 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x4FC PUSH2 0x4EB PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x4F3 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x989 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x101 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0x51D PUSH2 0x8D7 JUMP JUMPDEST SWAP1 DUP4 DUP1 MSTORE DUP4 PUSH1 0x20 MSTORE DUP3 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0x555 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 KECCAK256 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x44 SWAP1 DUP5 DUP5 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2C2 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C2 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2C2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C2 JUMPI PUSH2 0x5BD PUSH2 0x8D7 JUMP JUMPDEST SWAP2 PUSH2 0x5C6 PUSH2 0x8F2 JUMP JUMPDEST SWAP4 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP3 AND DUP3 SUB PUSH2 0x74B JUMPI DUP4 PUSH2 0x5EB DUP5 DUP11 DUP11 PUSH2 0x989 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP9 SWAP1 MSTORE DUP3 MSTORE SWAP11 SWAP2 SWAP10 SWAP3 SWAP1 SWAP3 AND SWAP6 SWAP2 PUSH2 0x632 SWAP1 PUSH2 0x62C PUSH1 0x84 DUP3 PUSH2 0x908 JUMP JUMPDEST DUP8 PUSH2 0xC20 JUMP JUMPDEST AND SWAP5 DUP7 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP4 DUP3 ADD MSTORE DUP10 DUP2 PUSH1 0x24 DUP2 DUP11 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x740 JUMPI SWAP1 DUP2 DUP11 SWAP4 PUSH2 0x70D JUMPI JUMPDEST POP POP LT PUSH2 0x6A5 JUMPI POP DUP6 PUSH2 0x670 SWAP2 DUP6 PUSH2 0xBB8 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP2 MSTORE DUP5 DUP7 DUP3 ADD MSTORE PUSH32 0x2E05FC618CCC3AEC7D710F137A131E0AB5B31AF09FC6A0EDB726DCD94B2E478F DUP5 CALLER SWAP3 LOG4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x84 SWAP1 DUP9 DUP8 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206F757470757420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 POP SWAP2 POP DUP10 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x739 JUMPI JUMPDEST PUSH2 0x726 DUP2 DUP4 PUSH2 0x908 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x261 JUMPI POP DUP8 SWAP1 MLOAD DUP11 DUP1 PUSH2 0x65D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x71C JUMP JUMPDEST DUP9 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x2C2 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C2 JUMPI PUSH2 0x76A PUSH2 0x8F2 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x787 JUMPI POP PUSH2 0xFD SWAP2 SWAP3 CALLDATALOAD PUSH2 0xB42 JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x101 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x101 JUMPI PUSH2 0xFD SWAP2 CALLDATALOAD PUSH2 0x7D2 PUSH1 0x1 PUSH2 0xE7 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x2C2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2C2 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x828 PUSH2 0x8D7 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP5 SWAP1 DUP5 CALLVALUE PUSH2 0x101 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x101 JUMPI CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x101 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x8AD JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ DUP4 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8ED JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x8ED JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x92A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x953 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x973 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 AND PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP3 ISZERO ISZERO DUP1 PUSH2 0xA13 JUMPI JUMPDEST ISZERO PUSH2 0x9CF JUMPI PUSH2 0x9CC SWAP3 PUSH2 0x17C SWAP2 PUSH2 0x940 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207072696365206E6F742073657400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x9BA JUMP JUMPDEST ISZERO PUSH2 0xA23 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206F7220546F6B656E207072696365206E6F7420736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x8ED JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x8ED JUMPI SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xAA5 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xB3D JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xB3D JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0x92A JUMPI PUSH2 0xC1E SWAP3 PUSH1 0x40 MSTORE PUSH2 0xC20 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 MLOAD SWAP2 ADD DUP3 DUP7 GAS CALL RETURNDATASIZE ISZERO PUSH2 0xCF3 JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xCDF JUMPI PUSH1 0x40 MLOAD PUSH2 0xC7D SWAP4 SWAP3 SWAP2 PUSH2 0xC6C PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP4 PUSH2 0x908 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP3 PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP4 PUSH2 0xD00 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 ISZERO ISZERO SWAP2 DUP3 PUSH2 0xCC4 JUMPI JUMPDEST POP POP PUSH2 0xC93 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xCD7 SWAP3 POP PUSH1 0x20 DUP1 SWAP2 DUP4 ADD ADD SWAP2 ADD PUSH2 0xA67 JUMP JUMPDEST ISZERO CODESIZE DUP1 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0xC7D SWAP2 POP PUSH1 0x60 SWAP1 PUSH2 0xC77 JUMP JUMPDEST SWAP1 PUSH2 0xD3F JUMPI POP DUP1 MLOAD ISZERO PUSH2 0xD15 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0xD8A JUMPI JUMPDEST PUSH2 0xD50 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0xD48 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC5 CALLDATASIZE SLT 0xB3 LOG0 PUSH21 0x9DD90F1953144DEDC0F093B0A5F449F5FD6AC3C192 0xDA PUSH26 0xB77064736F6C6343000818003300000000000000000000000000 ",
              "sourceMap": "362:4351:19:-:0;;;;;;;;;;;;;-1:-1:-1;362:4351:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:26:0;362:4351:19;;2475:4:0;362:4351:19;;;:::i;:::-;;;;;;;;;;3901:22:0;362:4351:19;2475:4:0;:::i;:::-;4747:26;:::i;:::-;;362:4351:19;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;2779:9;:13;362:4351;;488:42;362:4351;;;;2853:14;362:4351;;3206:41;-1:-1:-1;;;;;362:4351:19;;;;;;;;;;3207:23;362:4351;;;;3020:15;;;;:36;;;362:4351;2998:112;;;:::i;:::-;2779:9;3207:23;:::i;:::-;3206:41;:::i;:::-;362:4351;;;-1:-1:-1;;;3282:41:19;;3317:4;3282:41;;;362:4351;3282:41;;362:4351;3282:41;;;;;;;;;;;;;;;362:4351;3282:54;;;362:4351;;3479:9;;;;;;:::i;:::-;362:4351;;2779:9;362:4351;;;;;;;3507:60;735:10:10;;3507:60:19;;362:4351;;;;;;;;;;;;-1:-1:-1;;;362:4351:19;;;;;;;;;;;;;;;;3282:41;;;;;;;;;;;;;;;;;;:::i;:::-;;;362:4351;;;;;;;;3282:41;;;;362:4351;;;3282:41;;;;;;362:4351;;;;;;;;;;3020:36;-1:-1:-1;3039:17:19;;;3020:36;;362:4351;;;;;;;-1:-1:-1;;;362:4351:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;362:4351:19;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;362:4351:19;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;362:4351:19;;;;;;;;;488:42;362:4351;;4185:40;362:4351;;;;;;;;;;;;;;;4186:24;362:4351;;;;4002:15;;;:36;;;362:4351;3980:112;;;:::i;:::-;4186:24;;:::i;4185:40::-;362:4351;;-1:-1:-1;;;4291:67:19;;735:10:10;4291:67:19;;;362:4351;;;4342:4;362:4351;;;;;;;;;;;;;4342:4;;362:4351;;;;;;4291:67;;;;;;;;;;;;362:4351;4379:21;;;:34;362:4351;;4488:31;;;;;;;;;;;;362:4351;4488:31;;;;362:4351;;;;;;;;;;;4537:58;735:10:10;;4537:58:19;;362:4351;;;;;4488:31;362:4351;;;;;;;;;;4488:31;;;;;362:4351;;;;;;;-1:-1:-1;;;362:4351:19;;;;;;;;;;;;;;;;4291:67;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;362:4351;;;;;;;;;4002:36;-1:-1:-1;4021:17:19;;;4002:36;;362:4351;;;;;;;;-1:-1:-1;;362:4351:19;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;735:10:10;362:4351:19;;;;;;;;;;3519:23:0;3515:108;;362:4351:19;-1:-1:-1;;;;;362:4351:19;;;;;;;;;;;;;;3515:108:0;362:4351:19;;;;;3565:47:0;-1:-1:-1;;;3565:47:0;;735:10:10;3565:47:0;;;362:4351:19;;;;;3565:47:0;362:4351:19;;;;;;;;;;;;;;;;;488:42;362:4351;;;;;;;;;;;;-1:-1:-1;;362:4351:19;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;362:4351:19;;;;;;;;1966:41;;;;;;:::i;:::-;362:4351;;-1:-1:-1;;;362:4351:19;1829:53:8;;;;;;;735:10:10;362:4351:19;1829:53:8;;362:4351:19;2128:4;362:4351;;;;;;;;;;;1829:53:8;;362:4351:19;;;;;;;;;1829:53:8;;;362:4351:19;;1829:53:8;:::i;:::-;;;:::i;:::-;362:4351:19;;;;-1:-1:-1;;;2242:41:19;;2128:4;2242:41;;;362:4351;2242:41;;362:4351;2242:41;;;;;;;;;;;;;;;362:4351;2242:54;;;362:4351;;2450:9;;;;;;:::i;:::-;362:4351;;;;;;;;;;2478:63;735:10:10;;2478:63:19;;362:4351;;;;;;;;;;;;-1:-1:-1;;;362:4351:19;;;;;;;;;;;;;;;;;;;;;2242:41;;;;;;;;;;;;;;;;;;:::i;:::-;;;362:4351;;;;;;;;2242:41;;;;;;;;;;362:4351;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:10;;-1:-1:-1;;;;;362:4351:19;;5421:34:0;5417:102;;362:4351:19;5529:37:0;362:4351:19;;;5529:37:0;:::i;5417:102::-;362:4351:19;;;5478:30:0;;;;362:4351:19;;;;;;;;;;;;;4330:25:0;362:4351:19;;2475:4:0;362:4351:19;;;:::i;2475:4:0:-;4330:25;:::i;362:4351:19:-;;;;;;;;-1:-1:-1;;362:4351:19;;;;;;;;;;;;;;;;3901:22:0;362:4351:19;;;;;;;;;;;;;;;-1:-1:-1;;362:4351:19;;;;;;;-1:-1:-1;;;;;362:4351:19;;:::i;:::-;;;;617:49;362:4351;;;;;;;;;;;;;;;;;;;-1:-1:-1;;362:4351:19;;;;;;;;;;;;;;2673:47:0;;2688:32;2673:47;;:87;;;;;362:4351:19;;;;;;;2673:87:0;876:25:12;861:40;;;2673:87:0;;;362:4351:19;;;;-1:-1:-1;;;;;362:4351:19;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;362:4351:19;;;;;;:::o;:::-;;;1829:53:8;;362:4351:19;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;362:4351:19;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;362:4351:19;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;362:4351:19;;;;;;;;1172:522;;;;-1:-1:-1;;;;;362:4351:19;;;-1:-1:-1;362:4351:19;1340:14;362:4351;;;-1:-1:-1;362:4351:19;;;;-1:-1:-1;362:4351:19;;-1:-1:-1;362:4351:19;;1493:11;;;;:27;;;1172:522;362:4351;;;1655:31;1656:18;;;;:::i;1655:31::-;1172:522;:::o;362:4351::-;;;;-1:-1:-1;;;362:4351:19;;;;;;;;;;;;;;;;;;1493:27;1508:12;;;;1493:27;;362:4351;;;;:::o;:::-;;;;-1:-1:-1;;;362:4351:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3199:103:0:-;362:4351:19;2954:6:0;362:4351:19;2954:6:0;362:4351:19;;;2954:6:0;362:4351:19;735:10:10;2954:6:0;362:4351:19;;;;;2954:6:0;362:4351:19;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;362:4351:19;;;;3565:47:0;-1:-1:-1;;;3565:47:0;;735:10:10;3565:47:0;;;362:4351:19;;;;;3565:47:0;6179:316;;2954:6;362:4351:19;;;;;;;-1:-1:-1;;;;;362:4351:19;;;;;;;;;;;;;;;;;6276:23:0;6272:217;362:4351:19;;;;;;;;;;;;;;;;;;;;6347:4:0;362:4351:19;;;;;;;;6370:40:0;735:10:10;6370:40:0;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;;:::o;6730:317::-;;2954:6;362:4351:19;;;;;;;-1:-1:-1;;;;;362:4351:19;;;;;;;;;;;;;;;;;6824:217:0;362:4351:19;;;;;;;;;;;;;;;;;;;;;;;;;;;6922:40:0;735:10:10;6922:40:0;;;362:4351:19;6976:11:0;:::o;1303:160:8:-;;-1:-1:-1;;;;;362:4351:19;;1412:43:8;362:4351:19;1412:43:8;;;;362:4351:19;1412:43:8;;;362:4351:19;;;;;;1412:43:8;;362:4351:19;;;;;;;;;;;;;1412:43:8;362:4351:19;;;1412:43:8;:::i;:::-;1303:160::o;4059:629::-;-1:-1:-1;;;;;362:4351:19;2847:1:9;;3462:31;;;;;;;;;;;;362:4351:19;;;;;;;;;;;;3510:55:9;;362:4351:19;;;1829:53:8;362:4351:19;;-1:-1:-1;;362:4351:19;3462:31:9;362:4351:19;;;:::i;:::-;;;;;3462:31:9;362:4351:19;;;;;3510:55:9;;:::i;:::-;362:4351:19;;4551:22:8;;;;:57;;;;362:4351:19;4547:135:8;;;;4059:629;:::o;4547:135::-;362:4351:19;;;;4631:40:8;;;;;;;362:4351:19;4631:40:8;4551:57;4578:30;;;3462:31:9;4578:30:8;;;;;;;;:::i;:::-;4577:31;4551:57;;;;362:4351:19;;;-1:-1:-1;;;362:4351:19;;;;;;;3510:55:9;362:4351:19;;;;;;4625:582:9;;4797:8;;-1:-1:-1;362:4351:19;;5874:21:9;:17;;6046:142;;;;;;5870:383;6225:17;362:4351:19;;6225:17:9;;;;4793:408;362:4351:19;;5045:22:9;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;362:4351:19;;-1:-1:-1;;;;;362:4351:19;;5121:24:9;;;;362:4351:19;5121:24:9;;;362:4351:19;5121:24:9;5045:49;5071:18;;;:23;5045:49;"
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "getAmountOut(address,address,uint256)": "4aa06652",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "setTokenPrice(address,uint256)": "431f63c9",
              "supportsInterface(bytes4)": "01ffc9a7",
              "swapETHToTokens(address,address)": "bed2d5e8",
              "swapTokenToToken(address,address,uint256,address)": "3f3f80c3",
              "swapTokensToETH(address,uint256,address)": "796449dd",
              "tokenPricesUSD(address)": "19089a0d",
              "weth()": "3fc8cef3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"EthToTokenSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokenSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokenToEthSwap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"priceUSD\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapETHToTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapTokenToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapTokensToETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenPricesUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/routers/BasicRouter.sol\":\"BasicRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/routers/BasicRouter.sol\":{\"keccak256\":\"0xd1b31d9b4c66b8d173a12a721c4178084034d2b963ecc05ad6d97b7322235cb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16dd69a5320648f8d9c037c230267d3a909d1e2969306bb358fd3ac4f833005e\",\"dweb:/ipfs/QmRJXo5KFqk2E12hdzZvn7ytH2GDambn4BrVxTkP18rfgE\"]},\"contracts/routers/interfaces/IBasicRouter.sol\":{\"keccak256\":\"0x222613be3af34cd7e3139ffcd97fdcc479285ab7af97b997f18242fd117e4140\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc8c567081dde0688f2d4a25bcd776c1258d83a4c81d1ccc45c695d792549e15\",\"dweb:/ipfs/QmWZp6nV48cKKp5ozv52Y1ew2o5exNZ9WMqc8eA5XxvDfC\"]}},\"version\":1}"
        }
      },
      "contracts/routers/interfaces/IBasicRouter.sol": {
        "IBasicRouter": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "name": "EthToTokenSwap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "name": "TokenSwap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "name": "TokenToEthSwap",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                }
              ],
              "name": "getAmountOut",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "priceUSD",
                  "type": "uint256"
                }
              ],
              "name": "setTokenPrice",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "swapETHToTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "swapTokenToToken",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "swapTokensToETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "weth",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getAmountOut(address,address,uint256)": "4aa06652",
              "setTokenPrice(address,uint256)": "431f63c9",
              "swapETHToTokens(address,address)": "bed2d5e8",
              "swapTokenToToken(address,address,uint256,address)": "3f3f80c3",
              "swapTokensToETH(address,uint256,address)": "796449dd",
              "weth()": "3fc8cef3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"EthToTokenSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokenSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokenToEthSwap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"priceUSD\",\"type\":\"uint256\"}],\"name\":\"setTokenPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapETHToTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapTokenToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapTokensToETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/routers/interfaces/IBasicRouter.sol\":\"IBasicRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/routers/interfaces/IBasicRouter.sol\":{\"keccak256\":\"0x222613be3af34cd7e3139ffcd97fdcc479285ab7af97b997f18242fd117e4140\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc8c567081dde0688f2d4a25bcd776c1258d83a4c81d1ccc45c695d792549e15\",\"dweb:/ipfs/QmWZp6nV48cKKp5ozv52Y1ew2o5exNZ9WMqc8eA5XxvDfC\"]}},\"version\":1}"
        }
      },
      "contracts/src/HoneyFactory.sol": {
        "HoneyFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_tokenMap",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_router",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "AlreadyExists",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidLength",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidMessageSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "chainSelector",
                  "type": "uint256"
                }
              ],
              "name": "InvalidPeer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                }
              ],
              "name": "InvalidRouter",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotCreated",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RouterAddressCannotBeZero",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "sourceChainSelector",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "ReleasedTokens",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "HONEY_ROUTER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "honeyRouter",
                  "type": "address"
                }
              ],
              "name": "addRouter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "createPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "destinationChainSelector",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "crossChainCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getEquitoFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "chainSelector",
                  "type": "uint256"
                }
              ],
              "name": "getPeer",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "lower",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "upper",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct bytes64",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "getPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "peers",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "lower",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "upper",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "blockNumber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sourceChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "sender",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "destinationChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "receiver",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "hashedData",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct EquitoMessage",
                  "name": "message",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "messageData",
                  "type": "bytes"
                }
              ],
              "name": "receiveMessage",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "honeyRouter",
                  "type": "address"
                }
              ],
              "name": "removeRouter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "chainSelectors",
                  "type": "uint256[]"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "lower",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "upper",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct bytes64[]",
                  "name": "addresses",
                  "type": "tuple[]"
                }
              ],
              "name": "setPeers",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "value",
                  "type": "address"
                }
              ],
              "name": "toBase64",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "lower",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "upper",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct bytes64",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "weth",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawFromPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 314,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_grantRole": {
                  "entryPoint": 335,
                  "id": 256,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a0346200011f57601f620041e338819003918201601f19168301916001600160401b03831184841017620001245780849260409485528339810103126200011f576200005a602062000052836200013a565b92016200013a565b90331562000106576000549060018060a01b03918260018060a01b031994338684161760005560405192823391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a316908115620000f7575060805216906004541617600455620000cf336200014f565b506040516140019081620001e282396080518181816105df015281816108cb0152610dc00152f35b635008268360e01b8152600490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200011f57565b6001600160a01b031660008181527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b602052604081205490919060ff16620001dd5781805260026020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b509056fe608060408181526004803610156200001657600080fd5b600092833560e01c90816301ffc9a714620010d857508063248a9ca314620010ac57806324ca984e146200107a5780632ef3f1a5146200103d5780632f2ff15d146200100d57806336568abe1462000fa65780633fc8cef31462000f7557806359a1aae11462000e445780635c42132e1462000d7157806367ebb6b21462000cbc5780636ae0b1541462000c8a578063715018a61462000c20578063879d182d146200086b5780638da5cb5b14620008435780639049f9d214620006e357806391d148541462000699578063a217fddf146200067c578063a628b47f14620004f0578063bbe4f6db1462000475578063be4f3e8f1462000442578063c1bf9e5814620002d7578063d547741f1462000290578063ef88e0e114620001fd5763f2fde38b146200014457600080fd5b34620001f9576020366003190112620001f957620001616200117c565b906200016c620014ec565b6001600160a01b03809216928315620001ca5750506000548273ffffffffffffffffffffffffffffffffffffffff19821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b908460249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b8280fd5b5050346200028c5760203660031901126200028c57906200028891620002226200117c565b916000602083516200023481620011aa565b82815201526000602083516200024a81620011aa565b82815201526001600160a01b038251936200026585620011aa565b168352602083015251918291829190916020806040830194805184520151910152565b0390f35b5080fd5b509034620001f95780600319360112620001f957620002d39135620002cd6001620002ba62001193565b938387526002602052862001546200126e565b62001473565b5080f35b508290346200028c57826003193601126200028c57620002f66200117c565b926024357f0a775b33f9a8a1bd7919099707cfe9320f63c8a6cd38fa171b61aacb968ce641806000526002602052826000203360005260205260ff8360002054161562000425575083946001600160a01b0380911673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee90818114600014620003e3575085526003602052828520541692833b15620003df578251627b8a6760e11b81529081019182523360208301529284918491908290849082906040015b03925af1908115620003d65750620003c057505080f35b620003cb90620011dd565b620003d35780f35b80fd5b513d84823e3d90fd5b8480fd5b8652506003602052828520541692833b15620003df578251627b8a6760e11b8152908101918252336020830152928491849190829084908290604001620003a9565b8360449184519163e2517d3f60e01b835233908301526024820152fd5b5034620001f9576020366003190112620001f9579181923581526001602052206001815491015482519182526020820152f35b5034620001f9576020366003190112620001f9576001600160a01b0390816200049d6200117c565b1690818552600360205282848620541615620004c9575083839160209552600385522054169051908152f35b83517f8fead4d2000000000000000000000000000000000000000000000000000000008152fd5b506080366003190112620001f957620005086200117c565b91602435604435936001600160a01b03918286168096036200067757828451926020978885015216848301526064356060830152606082526080820182811067ffffffffffffffff821117620006625791869391959285528588526001845284882095600186519788957fdc20313700000000000000000000000000000000000000000000000000000000875281549087015201546024850152604484015260806064840152805190816084850152885b8281106200064957505060a483828a83839584010152601f8019910116810103019134907f0000000000000000000000000000000000000000000000000000000000000000165af190811562000640575062000613578280f35b813d831162000638575b620006298183620011f2565b81010312620003d35738808280f35b503d6200061d565b513d85823e3d90fd5b81810186015188820160a40152889588955001620005b9565b604186634e487b7160e01b6000525260246000fd5b600080fd5b5050346200028c57816003193601126200028c5751908152602090f35b5034620001f95781600319360112620001f9576001600160a01b0382602094620006c262001193565b9335815260028652209116600052825260ff81600020541690519015158152f35b509034620001f9576020366003190112620001f9576001600160a01b0390816200070c6200117c565b169283855260036020528282862054166200081c5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8403620007b8578151906113a28083019183831067ffffffffffffffff841117620007a5575090829162002c2a8339039085f09283156200079b57845260036020528320911673ffffffffffffffffffffffffffffffffffffffff1982541617905580f35b81513d86823e3d90fd5b876041602492634e487b7160e01b835252fd5b8151906116e38083019183831067ffffffffffffffff841117620007a55750602091839162001547833986815203019085f09283156200079b57845260036020528320911673ffffffffffffffffffffffffffffffffffffffff1982541617905580f35b90517f23369fa6000000000000000000000000000000000000000000000000000000008152fd5b5050346200028c57816003193601126200028c576001600160a01b0360209254169051908152f35b5091366003190161012081126200028c5761010013620003d3576101043567ffffffffffffffff808211620001f95736602383011215620001f95781850135908111620001f9578101366024820111620001f9576001600160a01b0391827f000000000000000000000000000000000000000000000000000000000000000016330362000bf15760243591828552602090600182528187872088516200091181620011aa565b600182549283835201549283910152604435149081159162000be3575b50156200095d578787517f7fee69a1000000000000000000000000000000000000000000000000000000008152fd5b9085886060858a9503126200028c576200097a6024860162001531565b968060646200098c6044890162001531565b970135961697848260448186541693895194859384927fb464631b00000000000000000000000000000000000000000000000000000000845216888301528c60248301525afa90811562000bd957908291859162000b94575b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee911681810362000abf57508352600384528483205416803b15620001f9578451627b8a6760e11b81529182018681526001600160a01b03891660208201528391839182908490829060400103925af1801562000ab55762000a91575b5050907f40627f7438e2974529d03c9b047342d738a7a1759fed232175525a8c048c94449460609493925b8251948552840152820152a180f35b62000aa1909594939295620011dd565b62000ab157909192858762000a57565b8580fd5b84513d84823e3d90fd5b905083929398959697985260038452858220541691823b156200028c578551627b8a6760e11b81529081018781526001600160a01b03861660208201529092839182908490829060400103925af1801562000b8a5762000b49575b5091606093917f40627f7438e2974529d03c9b047342d738a7a1759fed232175525a8c048c9444959362000a82565b917f40627f7438e2974529d03c9b047342d738a7a1759fed232175525a8c048c94449593919662000b7d60609694620011dd565b9691939550919362000b1a565b84513d89823e3d90fd5b809250868092503d831162000bd1575b62000bb08183620011f2565b8101031262000bcd5751818116810362000bcd5781908b620009e5565b8380fd5b503d62000ba4565b86513d86823e3d90fd5b90506064351415386200092e565b84517fd7f733340000000000000000000000000000000000000000000000000000000081523381880152602490fd5b8334620003d35780600319360112620003d35762000c3d620014ec565b806001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8334620003d3576020366003190112620003d357620002d362000cac6200117c565b62000cb662001215565b620013c6565b508290346200028c5760203660031901126200028c5782813592806020835162000ce681620011aa565b82815201528381526001602052209183519262000d0384620011aa565b600181549182865201549081602086015215908162000d67575b5062000d385783518351815260208085015190820152604090f35b602492508351917f78d0dbfc000000000000000000000000000000000000000000000000000000008352820152fd5b9050158562000d1d565b509034620001f95782600319360112620001f9578051917fb88c914800000000000000000000000000000000000000000000000000000000835230908301526020826024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa91821562000e3a57839262000dfc575b6020838351908152f35b9091506020813d60201162000e31575b8162000e1b60209383620011f2565b81010312620001f9576020925051903862000df2565b3d915062000e0c565b81513d85823e3d90fd5b5034620001f95781600319360112620001f95780359067ffffffffffffffff808311620003df5736602384011215620003df57828201359281841162000ab15760249260059236858760051b8501011162000f715784359181831162000f6d573660238401121562000f6d578281013591821162000f6d5760069136878260061b8601011162000f695762000ed8620014ec565b62000ee2620014ec565b80880362000f4157895b88811062000ef8578a80f35b8181101562000f2f5780871b86018801358b52600160208190528a8c2082861b87018a810135825560440135908201550162000eec565b878b603285634e487b7160e01b835252fd5b5087517f947d5a84000000000000000000000000000000000000000000000000000000008152fd5b8980fd5b8880fd5b8780fd5b5050346200028c57816003193601126200028c576020905173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8152f35b509190346200028c57806003193601126200028c5762000fc562001193565b90336001600160a01b0383160362000fe55750620002d391923562001473565b8390517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b509034620001f95780600319360112620001f957620002d39135620010376001620002ba62001193565b62001349565b5050346200028c57816003193601126200028c57602090517f0a775b33f9a8a1bd7919099707cfe9320f63c8a6cd38fa171b61aacb968ce6418152f35b8334620003d3576020366003190112620003d357620002d36200109c6200117c565b620010a662001215565b62001295565b5034620001f9576020366003190112620001f95781602093600192358152600285522001549051908152f35b92505034620001f9576020366003190112620001f957357fffffffff000000000000000000000000000000000000000000000000000000008116809103620001f957602092507f7965db0b00000000000000000000000000000000000000000000000000000000811490811562001151575b5015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386200114a565b600435906001600160a01b03821682036200067757565b602435906001600160a01b03821682036200067757565b6040810190811067ffffffffffffffff821117620011c757604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111620011c757604052565b90601f8019910116810190811067ffffffffffffffff821117620011c757604052565b3360009081527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b602052604081205460ff1615620012505750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b80600052600260205260406000203360005260205260ff6040600020541615620012505750565b6001600160a01b031660008181527f2a44413c737edf57c9a9b5a5edce85f99936144e881302a0cfc518c4333a371f60205260408120549091907f0a775b33f9a8a1bd7919099707cfe9320f63c8a6cd38fa171b61aacb968ce6419060ff16620013445780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835260026020526001600160a01b036040842092169182845260205260ff60408420541615600014620013445780835260026020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b6001600160a01b031660008181527f2a44413c737edf57c9a9b5a5edce85f99936144e881302a0cfc518c4333a371f60205260408120549091907f0a775b33f9a8a1bd7919099707cfe9320f63c8a6cd38fa171b61aacb968ce6419060ff161562001344578083526002602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b9060009180835260026020526001600160a01b036040842092169182845260205260ff60408420541660001462001344578083526002602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b6001600160a01b036000541633036200150157565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b35906001600160a01b0382168203620006775756fe60a0346200039457601f90601f196001600160401b03620016e33881900385810184168501838111868210176200029857859282916040528339602094859181010312620003945751936001600160a01b038516850362000394576200006462000399565b60128152712437b732bca837b7b6102628102a37b5b2b760711b858201526200008c62000399565b91600392838152620484c560ec1b878201528251858111620002985784546001948582811c9216801562000389575b8a831014620003735781858493116200031d575b508990858311600114620002ba57600092620002ae575b505060001982871b1c191690841b1784555b8051948511620002985760049687548481811c911680156200028d575b8282101462000278578381116200022d575b5080928611600114620001c1575084955090849291600095620001b5575b50501b92600019911b1c19161790555b608052600780546001600160a01b031916339081179091556200017890620003b9565b5060405161129790816200044c82396080518181816101340152818161021301528181610393015281816104b60152818161073d0152610c9d0152f35b01519350388062000145565b939295859081168860005285600020956000905b89838310620002125750505010620001f7575b50505050811b01905562000155565b01519060f884600019921b161c1916905538808080620001e8565b858701518955909701969485019488935090810190620001d5565b88600052816000208480890160051c820192848a106200026e575b0160051c019085905b8281106200026157505062000127565b6000815501859062000251565b9250819262000248565b602289634e487b7160e01b6000525260246000fd5b90607f169062000115565b634e487b7160e01b600052604160045260246000fd5b015190503880620000e6565b908987941691886000528b6000209260005b8d828210620003065750508411620002ed575b505050811b018455620000f8565b015160001983891b60f8161c19169055388080620002df565b8385015186558a97909501949384019301620002cc565b90915086600052896000208580850160051c8201928c861062000369575b918891869594930160051c01915b82811062000359575050620000cf565b6000815585945088910162000349565b925081926200033b565b634e487b7160e01b600052602260045260246000fd5b91607f1691620000bb565b600080fd5b60408051919082016001600160401b038111838210176200029857604052565b6001600160a01b031660008181527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc602052604081205490919060ff16620004475781805260056020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b509056fe608060408181526004918236101561001657600080fd5b600092833560e01c918262f714ce14610c535750816301ffc9a714610bb257816306fdde0314610abb578163095ea7b314610a1357816318160ddd146109f457816323b872dd146108e5578163248a9ca3146108ba5781632f2ff15d14610890578163313ce5671461087457816336568abe1461081557816351c6590a1461071057816370a08231146106da5781638f840ddd146106bb57816391d148541461067557816395d89b41146105705781639d7de6b314610292578163a217fddf14610277578163a9059cbb14610246578163b6b55f25146101eb578163d547741f146101a757508063dd62ed3e1461015c5763fc0c546a1461011657600080fd5b34610158578160031936011261015857602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b5034610158578060031936011261015857602091610178610cfa565b82610181610cdf565b926001600160a01b03809316815260018652209116600052825280600020549051908152f35b919050346101e757806003193601126101e7576101e391356101de60016101cc610cdf565b93838752600560205286200154610df4565b610ffd565b5080f35b8280fd5b8390346101585760203660031901126101585761024090356102388130336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611075565b600654610dda565b60065580f35b505034610158578060031936011261015857602090610270610266610cfa565b6024359033610ea0565b5160018152f35b50503461015857816003193601126101585751908152602090f35b9050816003193601126101e75780358015610561576102bf6102b660065483610d91565b60025490610dba565b92831561055257331561053c573385526020918583528186205481811061051057908087923384528386520383832055806002540360025582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a33085528482528481812054928584106000146104a0576001600160a01b0390858183600754168651928380927f5c42132e0000000000000000000000000000000000000000000000000000000082525afa918215610496578492610468575b505061038c8588610de7565b916103bb817f000000000000000000000000000000000000000000000000000000000000000016963388610e38565b6007541694853b1561046457608491855196879485937fa628b47f000000000000000000000000000000000000000000000000000000008552338b8601526024356024860152604485015260648401525af1801561045a57610428575b505050610240905b600654610de7565b67ffffffffffffffff8295939511610447575291506102403880610418565b602483604187634e487b7160e01b835252fd5b81513d87823e3d90fd5b8380fd5b90809250813d831161048f575b61047f8183610d59565b810103126101e757513880610380565b503d610475565b85513d86823e3d90fd5b5050928092506104db9150336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610e38565b82803415610507575b8180809234903390f1156104fc576102409150610420565b5051903d90823e3d90fd5b506108fc6104e4565b825163391434e360e21b8152338187019081526020810192909252604082018390529081906060010390fd5b82856024925191634b637e8f60e11b8352820152fd5b905051636067798b60e01b8152fd5b509051636067798b60e01b8152fd5b83833461015857816003193601126101585780519180938054916001908360011c926001851694851561066b575b60209586861081146106585785895290811561063457506001146105dc575b6105d887876105ce828c0383610d59565b5191829182610d10565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061062157505050826105d8946105ce928201019486806105bd565b8054868501880152928601928101610603565b60ff19168887015250505050151560051b83010192506105ce826105d886806105bd565b602484602285634e487b7160e01b835252fd5b93607f169361059e565b9050346101e757816003193601126101e7578160209360ff92610696610cdf565b90358252600586526001600160a01b0383832091168252855220541690519015158152f35b5050346101585781600319360112610158576020906006549051908152f35b50503461015857602036600319011261015857806020926001600160a01b03610701610cfa565b16815280845220549051908152f35b83915034610158576020366003190112610158578035908115610807576107628230336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611075565b600654806107ec575069021e19e0c9bab2400000905b33156107d65750610240929361079082600254610dda565b6002553385528460205280852082815401905551908152837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a3600654610dda565b6024908486519163ec442f0560e01b8352820152fd5b610801906107fc60025485610d91565b610dba565b90610778565b8351636067798b60e01b8152fd5b83833461015857806003193601126101585761082f610cdf565b90336001600160a01b0383160361084c57506101e3919235610ffd565b8390517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b5050346101585781600319360112610158576020905160128152f35b919050346101e757806003193601126101e7576101e391356108b560016101cc610cdf565b610f7c565b9050346101e75760203660031901126101e75781602093600192358152600585522001549051908152f35b905082346109f15760603660031901126109f157610901610cfa565b610909610cdf565b91604435936001600160a01b038316808352600160205286832033845260205286832054916000198303610946575b602088610270898989610ea0565b8683106109ac5781156109965733156109805750825260016020908152868320338452815291869020908590039055829061027087610938565b60249084895191634a1406b160e11b8352820152fd5b6024908489519163e602df0560e01b8352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346101585781600319360112610158576020906002549051908152f35b9050346101e757816003193601126101e757610a2d610cfa565b602435903315610aa5576001600160a01b0316918215610a8f57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b60249085855191634a1406b160e11b8352820152fd5b6024838686519163e602df0560e01b8352820152fd5b919050346101e757826003193601126101e75780519183600354906001908260011c92600181168015610ba8575b6020958686108214610b955750848852908115610b735750600114610b1a575b6105d886866105ce828b0383610d59565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610b6057505050826105d8946105ce928201019438610b09565b8054868501880152928601928101610b43565b60ff191687860152505050151560051b83010192506105ce826105d838610b09565b836022602492634e487b7160e01b835252fd5b93607f1693610ae9565b9050346101e75760203660031901126101e75735907fffffffff0000000000000000000000000000000000000000000000000000000082168092036101e757602092507f7965db0b000000000000000000000000000000000000000000000000000000008214918215610c29575b50519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000014915038610c20565b9091503461046457826003193601126104645760ff610c70610cdf565b9385805260056020528086203387526020528520541615610cc5575090610cc29135906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610e38565b80f35b8360449263e2517d3f60e01b835233908301526024820152fd5b602435906001600160a01b0382168203610cf557565b600080fd5b600435906001600160a01b0382168203610cf557565b6020808252825181830181905290939260005b828110610d4557505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610d23565b90601f8019910116810190811067ffffffffffffffff821117610d7b57604052565b634e487b7160e01b600052604160045260246000fd5b81810292918115918404141715610da457565b634e487b7160e01b600052601160045260246000fd5b8115610dc4570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610da457565b91908203918211610da457565b80600052600560205260406000203360005260205260ff6040600020541615610e1a5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b916001600160a01b03604051927fa9059cbb000000000000000000000000000000000000000000000000000000006020850152166024830152604482015260448152608081019181831067ffffffffffffffff841117610d7b57610e9e926040526110e0565b565b916001600160a01b03808416928315610f645716928315610f4c5760009083825281602052604082205490838210610f1a575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b602460405163ec442f0560e01b815260006004820152fd5b6024604051634b637e8f60e11b815260006004820152fd5b9060009180835260056020526001600160a01b036040842092169182845260205260ff60408420541615600014610ff85780835260056020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835260056020526001600160a01b036040842092169182845260205260ff604084205416600014610ff8578083526005602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b9290604051927f23b872dd0000000000000000000000000000000000000000000000000000000060208501526001600160a01b03809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff841117610d7b57610e9e926040525b6001600160a01b031690600080826020829451910182865af13d156111c2573d9067ffffffffffffffff82116111ae579061113d916040519161112d6020601f19601f8401160184610d59565b82523d84602084013e5b846111ce565b908151918215159283611186575b5050506111555750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b8192935090602091810103126101585760200151908115918215036109f1575038808061114b565b602483634e487b7160e01b81526041600452fd5b61113d90606090611137565b9061120d57508051156111e357805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580611258575b61121e575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b1561121656fea264697066735822122012ab25788f562d1572c1d8cd63b8e9c9973e8b8171b87e1609e4b88c0db420c164736f6c6343000818003360803462000338576040906001600160401b0390808301828111828210176200023857835260128152602091712437b732bca837b7b6102628102a37b5b2b760711b8383015283518481018181108382111762000238578552600390818152620484c560ec1b8582015283519083821162000238578254916001958684811c941680156200032d575b8885101462000317578190601f94858111620002c1575b5088908583116001146200025a576000926200024e575b505060001982861b1c191690861b1783555b8051938411620002385760049586548681811c911680156200022d575b828210146200021857838111620001cd575b50809285116001146200015f575093839491849260009562000153575b50501b92600019911b1c19161790555b600780546001600160a01b0319163390811790915562000144906200033d565b5051610fd29081620003d08239f35b01519350388062000114565b92919084601f1981168860005285600020956000905b89838310620001b2575050501062000197575b50505050811b01905562000124565b01519060f884600019921b161c191690553880808062000188565b85870151895590970196948501948893509081019062000175565b87600052816000208480880160051c8201928489106200020e575b0160051c019087905b82811062000201575050620000f7565b60008155018790620001f1565b92508192620001e8565b602288634e487b7160e01b6000525260246000fd5b90607f1690620000e5565b634e487b7160e01b600052604160045260246000fd5b015190503880620000b6565b90889350601f19831691876000528a6000209260005b8c828210620002aa575050841162000291575b505050811b018355620000c8565b015160001983881b60f8161c1916905538808062000283565b8385015186558c9790950194938401930162000270565b90915085600052886000208580850160051c8201928b86106200030d575b918a91869594930160051c01915b828110620002fd5750506200009f565b600081558594508a9101620002ed565b92508192620002df565b634e487b7160e01b600052602260045260246000fd5b93607f169362000088565b600080fd5b6001600160a01b031660008181527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc602052604081205490919060ff16620003cb5781805260056020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b509056fe608060408181526004908136101561001657600080fd5b600092833560e01c908162f714ce14610bdd5750806301ffc9a714610b3c57806306fdde0314610a47578063095ea7b31461099f57806318160ddd1461098057806323b872dd14610875578063248a9ca31461084a5780632f2ff15d14610822578063313ce5671461080657806336568abe146107a657806370a08231146107705780638f840ddd1461075157806391d148541461070b57806395d89b41146106055780639d7de6b3146102ce578063a217fddf146102b3578063a9059cbb14610282578063d0e30db014610267578063d547741f14610229578063dd62ed3e146101d95763e8078d941461010a57600080fd5b826003193601126101d55734156101c857600654806101ad575069021e19e0c9bab2400000915b3315610198575061014482600254610d69565b600255336000526000602052806000208281540190555190815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a361019234600654610d69565b60065580f35b83602492519163ec442f0560e01b8352820152fd5b6101c2906101bd60025434610d20565b610d49565b91610131565b51636067798b60e01b8152fd5b8280fd5b8382346102255780600319360112610225576020916101f6610c89565b826101ff610c6e565b926001600160a01b03809316815260018652209116600052825280600020549051908152f35b5080fd5b50346101d557806003193601126101d557610263913561025e600161024c610c6e565b93838752600560205286200154610d83565b610f24565b5080f35b838060031936011261027f5761019234600654610d69565b80fd5b8382346102255780600319360112610225576020906102ac6102a2610c89565b6024359033610dc7565b5160018152f35b83823461022557816003193601126102255751908152602090f35b5090816003193601126101d557803580156105f6576102fb6102f260065483610d20565b60025490610d49565b9283156105e75733156105d157338552602091858352818620548181106105a557908087923384528386520383832055806002540360025582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a384479285841060001461056357846001600160a01b03918083600754168651938480927f5c42132e0000000000000000000000000000000000000000000000000000000082525afa91821561055957868986928395610520575b50826103ce81936103c9888495610d76565b610d76565b99818115610517575b3390f11561050d5782600754169185517f3fc8cef300000000000000000000000000000000000000000000000000000000815282818a81875afa9283156105035786936104ca575b5050823b156104c657608492865197889586947fa628b47f000000000000000000000000000000000000000000000000000000008652338c870152602435602487015216604485015260648401525af180156104bc5761048a575b505050610192905b600654610d76565b67ffffffffffffffff82959395116104a957529150610192388061047a565b602483604187634e487b7160e01b835252fd5b81513d87823e3d90fd5b8480fd5b9080929350813d83116104fc575b6104e28183610ce8565b810103126104c6575183811681036104c65790388061041f565b503d6104d8565b87513d88823e3d90fd5b84513d85823e3d90fd5b506108fc6103d7565b94505050508082813d8311610552575b61053a8183610ce8565b8101031261054e57905190838689826103b7565b8380fd5b503d610530565b85513d86823e3d90fd5b508080935080929594506105773486610d69565b81811561059c575b3390f115610591576101929150610482565b5051903d90823e3d90fd5b506108fc61057f565b825163391434e360e21b8152338187019081526020810192909252604082018390529081906060010390fd5b82856024925191634b637e8f60e11b8352820152fd5b905051636067798b60e01b8152fd5b509051636067798b60e01b8152fd5b5082903461022557816003193601126102255780519180938054916001908360011c9260018516948515610701575b60209586861081146106ee578589529081156106ca5750600114610672575b61066e8787610664828c0383610ce8565b5191829182610c9f565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106106b7575050508261066e9461066492820101948680610653565b8054868501880152928601928101610699565b60ff19168887015250505050151560051b83010192506106648261066e8680610653565b602484602285634e487b7160e01b835252fd5b93607f1693610634565b5090346101d557816003193601126101d5578160209360ff9261072c610c6e565b90358252600586526001600160a01b0383832091168252855220541690519015158152f35b8382346102255781600319360112610225576020906006549051908152f35b83823461022557602036600319011261022557806020926001600160a01b03610797610c89565b16815280845220549051908152f35b508290346102255780600319360112610225576107c1610c6e565b90336001600160a01b038316036107de5750610263919235610f24565b8390517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b8382346102255781600319360112610225576020905160128152f35b50346101d557806003193601126101d5576102639135610845600161024c610c6e565b610ea3565b5090346101d55760203660031901126101d55781602093600192358152600585522001549051908152f35b50913461027f57606036600319011261027f57610890610c89565b610898610c6e565b91604435936001600160a01b0383168083526001602052868320338452602052868320549160001983036108d5575b6020886102ac898989610dc7565b86831061093b57811561092557331561090f575082526001602090815286832033845281529186902090859003905582906102ac386108c7565b60249084895191634a1406b160e11b8352820152fd5b6024908489519163e602df0560e01b8352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b8382346102255781600319360112610225576020906002549051908152f35b5090346101d557816003193601126101d5576109b9610c89565b602435903315610a31576001600160a01b0316918215610a1b57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b60249085855191634a1406b160e11b8352820152fd5b6024838686519163e602df0560e01b8352820152fd5b50346101d557826003193601126101d55780519183600354906001908260011c92600181168015610b32575b6020958686108214610b1f5750848852908115610afd5750600114610aa4575b61066e8686610664828b0383610ce8565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610aea575050508261066e94610664928201019438610a93565b8054868501880152928601928101610acd565b60ff191687860152505050151560051b83010192506106648261066e38610a93565b836022602492634e487b7160e01b835252fd5b93607f1693610a73565b5090346101d55760203660031901126101d55735907fffffffff0000000000000000000000000000000000000000000000000000000082168092036101d557602092507f7965db0b000000000000000000000000000000000000000000000000000000008214918215610bb3575b50519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000014915038610baa565b919290503461054e578260031936011261054e57803591610bfc610c6e565b91858052600560205284862033875260205260ff858720541615610c5357505083808093819382908215610c49575b6001600160a01b031690f115610c3f575080f35b51903d90823e3d90fd5b6108fc9150610c2b565b908560449263e2517d3f60e01b835233908301526024820152fd5b602435906001600160a01b0382168203610c8457565b600080fd5b600435906001600160a01b0382168203610c8457565b6020808252825181830181905290939260005b828110610cd457505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610cb2565b90601f8019910116810190811067ffffffffffffffff821117610d0a57604052565b634e487b7160e01b600052604160045260246000fd5b81810292918115918404141715610d3357565b634e487b7160e01b600052601160045260246000fd5b8115610d53570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610d3357565b91908203918211610d3357565b80600052600560205260406000203360005260205260ff6040600020541615610da95750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b916001600160a01b03808416928315610e8b5716928315610e735760009083825281602052604082205490838210610e41575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b602460405163ec442f0560e01b815260006004820152fd5b6024604051634b637e8f60e11b815260006004820152fd5b9060009180835260056020526001600160a01b036040842092169182845260205260ff60408420541615600014610f1f5780835260056020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835260056020526001600160a01b036040842092169182845260205260ff604084205416600014610f1f578083526005602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a460019056fea26469706673582212209ef06aa881fae08c22f9fa14bb44e6a114a188aeb3bd416d77a16c86030904a964736f6c63430008180033a2646970667358221220f8518244a40d975f459f9ef699cfdc5c9cde9c787afc403747d7730e562b37ef64736f6c63430008180033",
              "opcodes": "PUSH1 0xA0 CALLVALUE PUSH3 0x11F JUMPI PUSH1 0x1F PUSH3 0x41E3 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x124 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x11F JUMPI PUSH3 0x5A PUSH1 0x20 PUSH3 0x52 DUP4 PUSH3 0x13A JUMP JUMPDEST SWAP3 ADD PUSH3 0x13A JUMP JUMPDEST SWAP1 CALLER ISZERO PUSH3 0x106 JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP5 CALLER DUP7 DUP5 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 AND SWAP1 DUP2 ISZERO PUSH3 0xF7 JUMPI POP PUSH1 0x80 MSTORE AND SWAP1 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH3 0xCF CALLER PUSH3 0x14F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4001 SWAP1 DUP2 PUSH3 0x1E2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x5DF ADD MSTORE DUP2 DUP2 PUSH2 0x8CB ADD MSTORE PUSH2 0xDC0 ADD MSTORE RETURN JUMPDEST PUSH4 0x50082683 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x11F JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAC33FF75C19E70FE83507DB0D683FD3465C996598DC972688B7ACE676C89077B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x1DD JUMPI DUP2 DUP1 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH3 0x10D8 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH3 0x10AC JUMPI DUP1 PUSH4 0x24CA984E EQ PUSH3 0x107A JUMPI DUP1 PUSH4 0x2EF3F1A5 EQ PUSH3 0x103D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH3 0x100D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH3 0xFA6 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH3 0xF75 JUMPI DUP1 PUSH4 0x59A1AAE1 EQ PUSH3 0xE44 JUMPI DUP1 PUSH4 0x5C42132E EQ PUSH3 0xD71 JUMPI DUP1 PUSH4 0x67EBB6B2 EQ PUSH3 0xCBC JUMPI DUP1 PUSH4 0x6AE0B154 EQ PUSH3 0xC8A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0xC20 JUMPI DUP1 PUSH4 0x879D182D EQ PUSH3 0x86B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x843 JUMPI DUP1 PUSH4 0x9049F9D2 EQ PUSH3 0x6E3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH3 0x699 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH3 0x67C JUMPI DUP1 PUSH4 0xA628B47F EQ PUSH3 0x4F0 JUMPI DUP1 PUSH4 0xBBE4F6DB EQ PUSH3 0x475 JUMPI DUP1 PUSH4 0xBE4F3E8F EQ PUSH3 0x442 JUMPI DUP1 PUSH4 0xC1BF9E58 EQ PUSH3 0x2D7 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH3 0x290 JUMPI DUP1 PUSH4 0xEF88E0E1 EQ PUSH3 0x1FD JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI PUSH3 0x161 PUSH3 0x117C JUMP JUMPDEST SWAP1 PUSH3 0x16C PUSH3 0x14EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH3 0x1CA JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH3 0x28C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x28C JUMPI SWAP1 PUSH3 0x288 SWAP2 PUSH3 0x222 PUSH3 0x117C JUMP JUMPDEST SWAP2 PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD PUSH3 0x234 DUP2 PUSH3 0x11AA JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD PUSH3 0x24A DUP2 PUSH3 0x11AA JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 MLOAD SWAP4 PUSH3 0x265 DUP6 PUSH3 0x11AA JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP1 PUSH1 0x40 DUP4 ADD SWAP5 DUP1 MLOAD DUP5 MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x1F9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1F9 JUMPI PUSH3 0x2D3 SWAP2 CALLDATALOAD PUSH3 0x2CD PUSH1 0x1 PUSH3 0x2BA PUSH3 0x1193 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH3 0x126E JUMP JUMPDEST PUSH3 0x1473 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH3 0x28C JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI PUSH3 0x2F6 PUSH3 0x117C JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD PUSH32 0xA775B33F9A8A1BD7919099707CFE9320F63C8A6CD38FA171B61AACB968CE641 DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH3 0x425 JUMPI POP DUP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP1 DUP2 DUP2 EQ PUSH1 0x0 EQ PUSH3 0x3E3 JUMPI POP DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 DUP6 KECCAK256 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH3 0x3DF JUMPI DUP3 MLOAD PUSH3 0x7B8A67 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x3D6 JUMPI POP PUSH3 0x3C0 JUMPI POP POP DUP1 RETURN JUMPDEST PUSH3 0x3CB SWAP1 PUSH3 0x11DD JUMP JUMPDEST PUSH3 0x3D3 JUMPI DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP7 MSTORE POP PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 DUP6 KECCAK256 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH3 0x3DF JUMPI DUP3 MLOAD PUSH3 0x7B8A67 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD PUSH3 0x3A9 JUMP JUMPDEST DUP4 PUSH1 0x44 SWAP2 DUP5 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI SWAP2 DUP2 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH3 0x49D PUSH3 0x117C JUMP JUMPDEST AND SWAP1 DUP2 DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 DUP5 DUP7 KECCAK256 SLOAD AND ISZERO PUSH3 0x4C9 JUMPI POP DUP4 DUP4 SWAP2 PUSH1 0x20 SWAP6 MSTORE PUSH1 0x3 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH32 0x8FEAD4D200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI PUSH3 0x508 PUSH3 0x117C JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP7 AND DUP1 SWAP7 SUB PUSH3 0x677 JUMPI DUP3 DUP5 MLOAD SWAP3 PUSH1 0x20 SWAP8 DUP9 DUP6 ADD MSTORE AND DUP5 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP3 MSTORE PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x662 JUMPI SWAP2 DUP7 SWAP4 SWAP2 SWAP6 SWAP3 DUP6 MSTORE DUP6 DUP9 MSTORE PUSH1 0x1 DUP5 MSTORE DUP5 DUP9 KECCAK256 SWAP6 PUSH1 0x1 DUP7 MLOAD SWAP8 DUP9 SWAP6 PUSH32 0xDC20313700000000000000000000000000000000000000000000000000000000 DUP8 MSTORE DUP2 SLOAD SWAP1 DUP8 ADD MSTORE ADD SLOAD PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x84 DUP6 ADD MSTORE DUP9 JUMPDEST DUP3 DUP2 LT PUSH3 0x649 JUMPI POP POP PUSH1 0xA4 DUP4 DUP3 DUP11 DUP4 DUP4 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP2 CALLVALUE SWAP1 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x640 JUMPI POP PUSH3 0x613 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x638 JUMPI JUMPDEST PUSH3 0x629 DUP2 DUP4 PUSH3 0x11F2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x3D3 JUMPI CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH3 0x61D JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP9 DUP3 ADD PUSH1 0xA4 ADD MSTORE DUP9 SWAP6 DUP9 SWAP6 POP ADD PUSH3 0x5B9 JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH3 0x28C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0x1F9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 PUSH1 0x20 SWAP5 PUSH3 0x6C2 PUSH3 0x1193 JUMP JUMPDEST SWAP4 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH3 0x70C PUSH3 0x117C JUMP JUMPDEST AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 DUP3 DUP7 KECCAK256 SLOAD AND PUSH3 0x81C JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP5 SUB PUSH3 0x7B8 JUMPI DUP2 MLOAD SWAP1 PUSH2 0x13A2 DUP1 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH3 0x7A5 JUMPI POP SWAP1 DUP3 SWAP2 PUSH3 0x2C2A DUP4 CODECOPY SUB SWAP1 DUP6 CREATE SWAP3 DUP4 ISZERO PUSH3 0x79B JUMPI DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP4 KECCAK256 SWAP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x41 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP2 MLOAD SWAP1 PUSH2 0x16E3 DUP1 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH3 0x7A5 JUMPI POP PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH3 0x1547 DUP4 CODECOPY DUP7 DUP2 MSTORE SUB ADD SWAP1 DUP6 CREATE SWAP3 DUP4 ISZERO PUSH3 0x79B JUMPI DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP4 KECCAK256 SWAP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH32 0x23369FA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH3 0x28C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x120 DUP2 SLT PUSH3 0x28C JUMPI PUSH2 0x100 SGT PUSH3 0x3D3 JUMPI PUSH2 0x104 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH3 0x1F9 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH3 0x1F9 JUMPI DUP2 DUP6 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH3 0x1F9 JUMPI DUP2 ADD CALLDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH3 0x1F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH32 0x0 AND CALLER SUB PUSH3 0xBF1 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 DUP6 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 DUP3 MSTORE DUP2 DUP8 DUP8 KECCAK256 DUP9 MLOAD PUSH3 0x911 DUP2 PUSH3 0x11AA JUMP JUMPDEST PUSH1 0x1 DUP3 SLOAD SWAP3 DUP4 DUP4 MSTORE ADD SLOAD SWAP3 DUP4 SWAP2 ADD MSTORE PUSH1 0x44 CALLDATALOAD EQ SWAP1 DUP2 ISZERO SWAP2 PUSH3 0xBE3 JUMPI JUMPDEST POP ISZERO PUSH3 0x95D JUMPI DUP8 DUP8 MLOAD PUSH32 0x7FEE69A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 DUP6 DUP9 PUSH1 0x60 DUP6 DUP11 SWAP6 SUB SLT PUSH3 0x28C JUMPI PUSH3 0x97A PUSH1 0x24 DUP7 ADD PUSH3 0x1531 JUMP JUMPDEST SWAP7 DUP1 PUSH1 0x64 PUSH3 0x98C PUSH1 0x44 DUP10 ADD PUSH3 0x1531 JUMP JUMPDEST SWAP8 ADD CALLDATALOAD SWAP7 AND SWAP8 DUP5 DUP3 PUSH1 0x44 DUP2 DUP7 SLOAD AND SWAP4 DUP10 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH32 0xB464631B00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND DUP9 DUP4 ADD MSTORE DUP13 PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0xBD9 JUMPI SWAP1 DUP3 SWAP2 DUP6 SWAP2 PUSH3 0xB94 JUMPI JUMPDEST POP PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP2 AND DUP2 DUP2 SUB PUSH3 0xABF JUMPI POP DUP4 MSTORE PUSH1 0x3 DUP5 MSTORE DUP5 DUP4 KECCAK256 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH3 0x1F9 JUMPI DUP5 MLOAD PUSH3 0x7B8A67 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0xAB5 JUMPI PUSH3 0xA91 JUMPI JUMPDEST POP POP SWAP1 PUSH32 0x40627F7438E2974529D03C9B047342D738A7A1759FED232175525A8C048C9444 SWAP5 PUSH1 0x60 SWAP5 SWAP4 SWAP3 JUMPDEST DUP3 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH3 0xAA1 SWAP1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP6 PUSH3 0x11DD JUMP JUMPDEST PUSH3 0xAB1 JUMPI SWAP1 SWAP2 SWAP3 DUP6 DUP8 PUSH3 0xA57 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP4 SWAP3 SWAP4 SWAP9 SWAP6 SWAP7 SWAP8 SWAP9 MSTORE PUSH1 0x3 DUP5 MSTORE DUP6 DUP3 KECCAK256 SLOAD AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH3 0x28C JUMPI DUP6 MLOAD PUSH3 0x7B8A67 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP3 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0xB8A JUMPI PUSH3 0xB49 JUMPI JUMPDEST POP SWAP2 PUSH1 0x60 SWAP4 SWAP2 PUSH32 0x40627F7438E2974529D03C9B047342D738A7A1759FED232175525A8C048C9444 SWAP6 SWAP4 PUSH3 0xA82 JUMP JUMPDEST SWAP2 PUSH32 0x40627F7438E2974529D03C9B047342D738A7A1759FED232175525A8C048C9444 SWAP6 SWAP4 SWAP2 SWAP7 PUSH3 0xB7D PUSH1 0x60 SWAP7 SWAP5 PUSH3 0x11DD JUMP JUMPDEST SWAP7 SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 PUSH3 0xB1A JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH3 0xBD1 JUMPI JUMPDEST PUSH3 0xBB0 DUP2 DUP4 PUSH3 0x11F2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0xBCD JUMPI MLOAD DUP2 DUP2 AND DUP2 SUB PUSH3 0xBCD JUMPI DUP2 SWAP1 DUP12 PUSH3 0x9E5 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH3 0xBA4 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x64 CALLDATALOAD EQ ISZERO CODESIZE PUSH3 0x92E JUMP JUMPDEST DUP5 MLOAD PUSH32 0xD7F7333400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH3 0x3D3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x3D3 JUMPI PUSH3 0xC3D PUSH3 0x14EC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH3 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x3D3 JUMPI PUSH3 0x2D3 PUSH3 0xCAC PUSH3 0x117C JUMP JUMPDEST PUSH3 0xCB6 PUSH3 0x1215 JUMP JUMPDEST PUSH3 0x13C6 JUMP JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH3 0x28C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x28C JUMPI DUP3 DUP2 CALLDATALOAD SWAP3 DUP1 PUSH1 0x20 DUP4 MLOAD PUSH3 0xCE6 DUP2 PUSH3 0x11AA JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 DUP4 MLOAD SWAP3 PUSH3 0xD03 DUP5 PUSH3 0x11AA JUMP JUMPDEST PUSH1 0x1 DUP2 SLOAD SWAP2 DUP3 DUP7 MSTORE ADD SLOAD SWAP1 DUP2 PUSH1 0x20 DUP7 ADD MSTORE ISZERO SWAP1 DUP2 PUSH3 0xD67 JUMPI JUMPDEST POP PUSH3 0xD38 JUMPI DUP4 MLOAD DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP DUP4 MLOAD SWAP2 PUSH32 0x78D0DBFC00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP6 PUSH3 0xD1D JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x1F9 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1F9 JUMPI DUP1 MLOAD SWAP2 PUSH32 0xB88C914800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0xE3A JUMPI DUP4 SWAP3 PUSH3 0xDFC JUMPI JUMPDEST PUSH1 0x20 DUP4 DUP4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0xE31 JUMPI JUMPDEST DUP2 PUSH3 0xE1B PUSH1 0x20 SWAP4 DUP4 PUSH3 0x11F2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x1F9 JUMPI PUSH1 0x20 SWAP3 POP MLOAD SWAP1 CODESIZE PUSH3 0xDF2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0xE0C JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0x1F9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1F9 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT PUSH3 0x3DF JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH3 0x3DF JUMPI DUP3 DUP3 ADD CALLDATALOAD SWAP3 DUP2 DUP5 GT PUSH3 0xAB1 JUMPI PUSH1 0x24 SWAP3 PUSH1 0x5 SWAP3 CALLDATASIZE DUP6 DUP8 PUSH1 0x5 SHL DUP6 ADD ADD GT PUSH3 0xF71 JUMPI DUP5 CALLDATALOAD SWAP2 DUP2 DUP4 GT PUSH3 0xF6D JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH3 0xF6D JUMPI DUP3 DUP2 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH3 0xF6D JUMPI PUSH1 0x6 SWAP2 CALLDATASIZE DUP8 DUP3 PUSH1 0x6 SHL DUP7 ADD ADD GT PUSH3 0xF69 JUMPI PUSH3 0xED8 PUSH3 0x14EC JUMP JUMPDEST PUSH3 0xEE2 PUSH3 0x14EC JUMP JUMPDEST DUP1 DUP9 SUB PUSH3 0xF41 JUMPI DUP10 JUMPDEST DUP9 DUP2 LT PUSH3 0xEF8 JUMPI DUP11 DUP1 RETURN JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xF2F JUMPI DUP1 DUP8 SHL DUP7 ADD DUP9 ADD CALLDATALOAD DUP12 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE DUP11 DUP13 KECCAK256 DUP3 DUP7 SHL DUP8 ADD DUP11 DUP2 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x44 ADD CALLDATALOAD SWAP1 DUP3 ADD SSTORE ADD PUSH3 0xEEC JUMP JUMPDEST DUP8 DUP12 PUSH1 0x32 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST POP DUP8 MLOAD PUSH32 0x947D5A8400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH3 0x28C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH3 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI PUSH3 0xFC5 PUSH3 0x1193 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH3 0xFE5 JUMPI POP PUSH3 0x2D3 SWAP2 SWAP3 CALLDATALOAD PUSH3 0x1473 JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x1F9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1F9 JUMPI PUSH3 0x2D3 SWAP2 CALLDATALOAD PUSH3 0x1037 PUSH1 0x1 PUSH3 0x2BA PUSH3 0x1193 JUMP JUMPDEST PUSH3 0x1349 JUMP JUMPDEST POP POP CALLVALUE PUSH3 0x28C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xA775B33F9A8A1BD7919099707CFE9320F63C8A6CD38FA171B61AACB968CE641 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH3 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x3D3 JUMPI PUSH3 0x2D3 PUSH3 0x109C PUSH3 0x117C JUMP JUMPDEST PUSH3 0x10A6 PUSH3 0x1215 JUMP JUMPDEST PUSH3 0x1295 JUMP JUMPDEST POP CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP3 POP POP CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH3 0x1F9 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH3 0x1151 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH3 0x114A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x677 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x677 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x11C7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x11C7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x11C7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAC33FF75C19E70FE83507DB0D683FD3465C996598DC972688B7ACE676C89077B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x1250 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH3 0x1250 JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x2A44413C737EDF57C9A9B5A5EDCE85F99936144E881302A0CFC518C4333A371F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xA775B33F9A8A1BD7919099707CFE9320F63C8A6CD38FA171B61AACB968CE641 SWAP1 PUSH1 0xFF AND PUSH3 0x1344 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH3 0x1344 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x2A44413C737EDF57C9A9B5A5EDCE85F99936144E881302A0CFC518C4333A371F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xA775B33F9A8A1BD7919099707CFE9320F63C8A6CD38FA171B61AACB968CE641 SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0x1344 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH3 0x1344 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER SUB PUSH3 0x1501 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x677 JUMPI JUMP INVALID PUSH1 0xA0 CALLVALUE PUSH3 0x394 JUMPI PUSH1 0x1F SWAP1 PUSH1 0x1F NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH3 0x16E3 CODESIZE DUP2 SWAP1 SUB DUP6 DUP2 ADD DUP5 AND DUP6 ADD DUP4 DUP2 GT DUP7 DUP3 LT OR PUSH3 0x298 JUMPI DUP6 SWAP3 DUP3 SWAP2 PUSH1 0x40 MSTORE DUP4 CODECOPY PUSH1 0x20 SWAP5 DUP6 SWAP2 DUP2 ADD SUB SLT PUSH3 0x394 JUMPI MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH3 0x394 JUMPI PUSH3 0x64 PUSH3 0x399 JUMP JUMPDEST PUSH1 0x12 DUP2 MSTORE PUSH18 0x2437B732BCA837B7B6102628102A37B5B2B7 PUSH1 0x71 SHL DUP6 DUP3 ADD MSTORE PUSH3 0x8C PUSH3 0x399 JUMP JUMPDEST SWAP2 PUSH1 0x3 SWAP3 DUP4 DUP2 MSTORE PUSH3 0x484C5 PUSH1 0xEC SHL DUP8 DUP3 ADD MSTORE DUP3 MLOAD DUP6 DUP2 GT PUSH3 0x298 JUMPI DUP5 SLOAD PUSH1 0x1 SWAP5 DUP6 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x389 JUMPI JUMPDEST DUP11 DUP4 LT EQ PUSH3 0x373 JUMPI DUP2 DUP6 DUP5 SWAP4 GT PUSH3 0x31D JUMPI JUMPDEST POP DUP10 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2BA JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2AE JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP8 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP5 SSTORE JUMPDEST DUP1 MLOAD SWAP5 DUP6 GT PUSH3 0x298 JUMPI PUSH1 0x4 SWAP7 DUP8 SLOAD DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x28D JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x278 JUMPI DUP4 DUP2 GT PUSH3 0x22D JUMPI JUMPDEST POP DUP1 SWAP3 DUP7 GT PUSH1 0x1 EQ PUSH3 0x1C1 JUMPI POP DUP5 SWAP6 POP SWAP1 DUP5 SWAP3 SWAP2 PUSH1 0x0 SWAP6 PUSH3 0x1B5 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x80 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x178 SWAP1 PUSH3 0x3B9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1297 SWAP1 DUP2 PUSH3 0x44C DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x134 ADD MSTORE DUP2 DUP2 PUSH2 0x213 ADD MSTORE DUP2 DUP2 PUSH2 0x393 ADD MSTORE DUP2 DUP2 PUSH2 0x4B6 ADD MSTORE DUP2 DUP2 PUSH2 0x73D ADD MSTORE PUSH2 0xC9D ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x145 JUMP JUMPDEST SWAP4 SWAP3 SWAP6 DUP6 SWAP1 DUP2 AND DUP9 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP4 DUP4 LT PUSH3 0x212 JUMPI POP POP POP LT PUSH3 0x1F7 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x155 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x1E8 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x1D5 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP10 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP11 LT PUSH3 0x26E JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x261 JUMPI POP POP PUSH3 0x127 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x251 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x248 JUMP JUMPDEST PUSH1 0x22 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x115 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xE6 JUMP JUMPDEST SWAP1 DUP10 DUP8 SWAP5 AND SWAP2 DUP9 PUSH1 0x0 MSTORE DUP12 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP14 DUP3 DUP3 LT PUSH3 0x306 JUMPI POP POP DUP5 GT PUSH3 0x2ED JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP5 SSTORE PUSH3 0xF8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP10 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x2DF JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP11 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2CC JUMP JUMPDEST SWAP1 SWAP2 POP DUP7 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP7 LT PUSH3 0x369 JUMPI JUMPDEST SWAP2 DUP9 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x359 JUMPI POP POP PUSH3 0xCF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP9 SWAP2 ADD PUSH3 0x349 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x33B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0xBB JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x298 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x447 JUMPI DUP2 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH3 0xF714CE EQ PUSH2 0xC53 JUMPI POP DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xBB2 JUMPI DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xABB JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0xA13 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x9F4 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x8E5 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x8BA JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x890 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x874 JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x815 JUMPI DUP2 PUSH4 0x51C6590A EQ PUSH2 0x710 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x6DA JUMPI DUP2 PUSH4 0x8F840DDD EQ PUSH2 0x6BB JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x675 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x570 JUMPI DUP2 PUSH4 0x9D7DE6B3 EQ PUSH2 0x292 JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x277 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x246 JUMPI DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x1EB JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1A7 JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x15C JUMPI PUSH4 0xFC0C546A EQ PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x178 PUSH2 0xCFA JUMP JUMPDEST DUP3 PUSH2 0x181 PUSH2 0xCDF JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0x1E3 SWAP2 CALLDATALOAD PUSH2 0x1DE PUSH1 0x1 PUSH2 0x1CC PUSH2 0xCDF JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI PUSH2 0x240 SWAP1 CALLDATALOAD PUSH2 0x238 DUP2 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x270 PUSH2 0x266 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xEA0 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP1 CALLDATALOAD DUP1 ISZERO PUSH2 0x561 JUMPI PUSH2 0x2BF PUSH2 0x2B6 PUSH1 0x6 SLOAD DUP4 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0xDBA JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x552 JUMPI CALLER ISZERO PUSH2 0x53C JUMPI CALLER DUP6 MSTORE PUSH1 0x20 SWAP2 DUP6 DUP4 MSTORE DUP2 DUP7 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x510 JUMPI SWAP1 DUP1 DUP8 SWAP3 CALLER DUP5 MSTORE DUP4 DUP7 MSTORE SUB DUP4 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 CALLER SWAP3 LOG3 ADDRESS DUP6 MSTORE DUP5 DUP3 MSTORE DUP5 DUP2 DUP2 KECCAK256 SLOAD SWAP3 DUP6 DUP5 LT PUSH1 0x0 EQ PUSH2 0x4A0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP6 DUP2 DUP4 PUSH1 0x7 SLOAD AND DUP7 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C42132E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x496 JUMPI DUP5 SWAP3 PUSH2 0x468 JUMPI JUMPDEST POP POP PUSH2 0x38C DUP6 DUP9 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 PUSH2 0x3BB DUP2 PUSH32 0x0 AND SWAP7 CALLER DUP9 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x7 SLOAD AND SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0x464 JUMPI PUSH1 0x84 SWAP2 DUP6 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH32 0xA628B47F00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER DUP12 DUP7 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x45A JUMPI PUSH2 0x428 JUMPI JUMPDEST POP POP POP PUSH2 0x240 SWAP1 JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDE7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SWAP6 SWAP4 SWAP6 GT PUSH2 0x447 JUMPI MSTORE SWAP2 POP PUSH2 0x240 CODESIZE DUP1 PUSH2 0x418 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH1 0x41 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x48F JUMPI JUMPDEST PUSH2 0x47F DUP2 DUP4 PUSH2 0xD59 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E7 JUMPI MLOAD CODESIZE DUP1 PUSH2 0x380 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x475 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP SWAP3 DUP1 SWAP3 POP PUSH2 0x4DB SWAP2 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xE38 JUMP JUMPDEST DUP3 DUP1 CALLVALUE ISZERO PUSH2 0x507 JUMPI JUMPDEST DUP2 DUP1 DUP1 SWAP3 CALLVALUE SWAP1 CALLER SWAP1 CALL ISZERO PUSH2 0x4FC JUMPI PUSH2 0x240 SWAP2 POP PUSH2 0x420 JUMP JUMPDEST POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x4E4 JUMP JUMPDEST DUP3 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER DUP2 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 DUP6 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x66B JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x658 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x634 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5DC JUMPI JUMPDEST PUSH2 0x5D8 DUP8 DUP8 PUSH2 0x5CE DUP3 DUP13 SUB DUP4 PUSH2 0xD59 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD10 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x621 JUMPI POP POP POP DUP3 PUSH2 0x5D8 SWAP5 PUSH2 0x5CE SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0x5BD JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x603 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x5CE DUP3 PUSH2 0x5D8 DUP7 DUP1 PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x59E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x696 PUSH2 0xCDF JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x701 PUSH2 0xCFA JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI DUP1 CALLDATALOAD SWAP1 DUP2 ISZERO PUSH2 0x807 JUMPI PUSH2 0x762 DUP3 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 PUSH2 0x7EC JUMPI POP PUSH10 0x21E19E0C9BAB2400000 SWAP1 JUMPDEST CALLER ISZERO PUSH2 0x7D6 JUMPI POP PUSH2 0x240 SWAP3 SWAP4 PUSH2 0x790 DUP3 PUSH1 0x2 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE DUP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x6 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP7 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x801 SWAP1 PUSH2 0x7FC PUSH1 0x2 SLOAD DUP6 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST SWAP1 PUSH2 0x778 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH2 0x82F PUSH2 0xCDF JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x84C JUMPI POP PUSH2 0x1E3 SWAP2 SWAP3 CALLDATALOAD PUSH2 0xFFD JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0x1E3 SWAP2 CALLDATALOAD PUSH2 0x8B5 PUSH1 0x1 PUSH2 0x1CC PUSH2 0xCDF JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x9F1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9F1 JUMPI PUSH2 0x901 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x909 PUSH2 0xCDF JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x946 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x270 DUP10 DUP10 DUP10 PUSH2 0xEA0 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x9AC JUMPI DUP2 ISZERO PUSH2 0x996 JUMPI CALLER ISZERO PUSH2 0x980 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x270 DUP8 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0xA2D PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xA8F JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 DUP6 DUP6 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 DUP7 DUP7 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP1 DUP3 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xBA8 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xB95 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB73 JUMPI POP PUSH1 0x1 EQ PUSH2 0xB1A JUMPI JUMPDEST PUSH2 0x5D8 DUP7 DUP7 PUSH2 0x5CE DUP3 DUP12 SUB DUP4 PUSH2 0xD59 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xB60 JUMPI POP POP POP DUP3 PUSH2 0x5D8 SWAP5 PUSH2 0x5CE SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xB09 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x5CE DUP3 PUSH2 0x5D8 CODESIZE PUSH2 0xB09 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xAE9 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E7 JUMPI CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1E7 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xC29 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP CODESIZE PUSH2 0xC20 JUMP JUMPDEST SWAP1 SWAP2 POP CALLVALUE PUSH2 0x464 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x464 JUMPI PUSH1 0xFF PUSH2 0xC70 PUSH2 0xCDF JUMP JUMPDEST SWAP4 DUP6 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 DUP7 KECCAK256 CALLER DUP8 MSTORE PUSH1 0x20 MSTORE DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0xCC5 JUMPI POP SWAP1 PUSH2 0xCC2 SWAP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xE38 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP4 PUSH1 0x44 SWAP3 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCF5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCF5 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xD45 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xD23 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xDA4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xDC4 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xDA4 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xDA4 JUMPI JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xE1A JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0xD7B JUMPI PUSH2 0xE9E SWAP3 PUSH1 0x40 MSTORE PUSH2 0x10E0 JUMP JUMPDEST JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xF64 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xF1A JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xFF8 JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xFF8 JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0xD7B JUMPI PUSH2 0xE9E SWAP3 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 MLOAD SWAP2 ADD DUP3 DUP7 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x11C2 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x11AE JUMPI SWAP1 PUSH2 0x113D SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x112D PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0xD59 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE DUP5 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP5 PUSH2 0x11CE JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x1186 JUMPI JUMPDEST POP POP POP PUSH2 0x1155 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x158 JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO SUB PUSH2 0x9F1 JUMPI POP CODESIZE DUP1 DUP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x113D SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x1137 JUMP JUMPDEST SWAP1 PUSH2 0x120D JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x11E3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x1258 JUMPI JUMPDEST PUSH2 0x121E JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1216 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xAB 0x25 PUSH25 0x8F562D1572C1D8CD63B8E9C9973E8B8171B87E1609E4B88C0D 0xB4 KECCAK256 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER PUSH1 0x80 CALLVALUE PUSH3 0x338 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP1 DUP4 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR PUSH3 0x238 JUMPI DUP4 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH18 0x2437B732BCA837B7B6102628102A37B5B2B7 PUSH1 0x71 SHL DUP4 DUP4 ADD MSTORE DUP4 MLOAD DUP5 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR PUSH3 0x238 JUMPI DUP6 MSTORE PUSH1 0x3 SWAP1 DUP2 DUP2 MSTORE PUSH3 0x484C5 PUSH1 0xEC SHL DUP6 DUP3 ADD MSTORE DUP4 MLOAD SWAP1 DUP4 DUP3 GT PUSH3 0x238 JUMPI DUP3 SLOAD SWAP2 PUSH1 0x1 SWAP6 DUP7 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x32D JUMPI JUMPDEST DUP9 DUP6 LT EQ PUSH3 0x317 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x2C1 JUMPI JUMPDEST POP DUP9 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x25A JUMPI PUSH1 0x0 SWAP3 PUSH3 0x24E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP4 SSTORE JUMPDEST DUP1 MLOAD SWAP4 DUP5 GT PUSH3 0x238 JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP7 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x22D JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x218 JUMPI DUP4 DUP2 GT PUSH3 0x1CD JUMPI JUMPDEST POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH3 0x15F JUMPI POP SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x153 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x144 SWAP1 PUSH3 0x33D JUMP JUMPDEST POP MLOAD PUSH2 0xFD2 SWAP1 DUP2 PUSH3 0x3D0 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x114 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1F NOT DUP2 AND DUP9 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP4 DUP4 LT PUSH3 0x1B2 JUMPI POP POP POP LT PUSH3 0x197 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x124 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x188 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x175 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP10 LT PUSH3 0x20E JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x201 JUMPI POP POP PUSH3 0xF7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP8 SWAP1 PUSH3 0x1F1 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1E8 JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xB6 JUMP JUMPDEST SWAP1 DUP9 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP8 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x2AA JUMPI POP POP DUP5 GT PUSH3 0x291 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xC8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x283 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x270 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH3 0x30D JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2FD JUMPI POP POP PUSH3 0x9F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x2ED JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2DF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0x88 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x3CB JUMPI DUP2 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xF714CE EQ PUSH2 0xBDD JUMPI POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA47 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x99F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x980 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x875 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x822 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x806 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0x8F840DDD EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x70B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x9D7DE6B3 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D9 JUMPI PUSH4 0xE8078D94 EQ PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI CALLVALUE ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x6 SLOAD DUP1 PUSH2 0x1AD JUMPI POP PUSH10 0x21E19E0C9BAB2400000 SWAP2 JUMPDEST CALLER ISZERO PUSH2 0x198 JUMPI POP PUSH2 0x144 DUP3 PUSH1 0x2 SLOAD PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH2 0x192 CALLVALUE PUSH1 0x6 SLOAD PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP4 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1C2 SWAP1 PUSH2 0x1BD PUSH1 0x2 SLOAD CALLVALUE PUSH2 0xD20 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST SWAP2 PUSH2 0x131 JUMP JUMPDEST MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1F6 PUSH2 0xC89 JUMP JUMPDEST DUP3 PUSH2 0x1FF PUSH2 0xC6E JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x263 SWAP2 CALLDATALOAD PUSH2 0x25E PUSH1 0x1 PUSH2 0x24C PUSH2 0xC6E JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xF24 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP4 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x192 CALLVALUE PUSH1 0x6 SLOAD PUSH2 0xD69 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x2AC PUSH2 0x2A2 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xDC7 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 CALLDATALOAD DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x2FB PUSH2 0x2F2 PUSH1 0x6 SLOAD DUP4 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0xD49 JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x5E7 JUMPI CALLER ISZERO PUSH2 0x5D1 JUMPI CALLER DUP6 MSTORE PUSH1 0x20 SWAP2 DUP6 DUP4 MSTORE DUP2 DUP7 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x5A5 JUMPI SWAP1 DUP1 DUP8 SWAP3 CALLER DUP5 MSTORE DUP4 DUP7 MSTORE SUB DUP4 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 CALLER SWAP3 LOG3 DUP5 SELFBALANCE SWAP3 DUP6 DUP5 LT PUSH1 0x0 EQ PUSH2 0x563 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 PUSH1 0x7 SLOAD AND DUP7 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x5C42132E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x559 JUMPI DUP7 DUP10 DUP7 SWAP3 DUP4 SWAP6 PUSH2 0x520 JUMPI JUMPDEST POP DUP3 PUSH2 0x3CE DUP2 SWAP4 PUSH2 0x3C9 DUP9 DUP5 SWAP6 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST SWAP10 DUP2 DUP2 ISZERO PUSH2 0x517 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x50D JUMPI DUP3 PUSH1 0x7 SLOAD AND SWAP2 DUP6 MLOAD PUSH32 0x3FC8CEF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 DUP2 DUP11 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x503 JUMPI DUP7 SWAP4 PUSH2 0x4CA JUMPI JUMPDEST POP POP DUP3 EXTCODESIZE ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x84 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH32 0xA628B47F00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE CALLER DUP13 DUP8 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP8 ADD MSTORE AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH2 0x48A JUMPI JUMPDEST POP POP POP PUSH2 0x192 SWAP1 JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xD76 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SWAP6 SWAP4 SWAP6 GT PUSH2 0x4A9 JUMPI MSTORE SWAP2 POP PUSH2 0x192 CODESIZE DUP1 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH1 0x41 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4FC JUMPI JUMPDEST PUSH2 0x4E2 DUP2 DUP4 PUSH2 0xCE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4C6 JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x4C6 JUMPI SWAP1 CODESIZE DUP1 PUSH2 0x41F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4D8 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x3D7 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x552 JUMPI JUMPDEST PUSH2 0x53A DUP2 DUP4 PUSH2 0xCE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x54E JUMPI SWAP1 MLOAD SWAP1 DUP4 DUP7 DUP10 DUP3 PUSH2 0x3B7 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x530 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 DUP1 SWAP4 POP DUP1 SWAP3 SWAP6 SWAP5 POP PUSH2 0x577 CALLVALUE DUP7 PUSH2 0xD69 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x59C JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x591 JUMPI PUSH2 0x192 SWAP2 POP PUSH2 0x482 JUMP JUMPDEST POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x57F JUMP JUMPDEST DUP3 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER DUP2 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 DUP6 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x701 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x6EE JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x6CA JUMPI POP PUSH1 0x1 EQ PUSH2 0x672 JUMPI JUMPDEST PUSH2 0x66E DUP8 DUP8 PUSH2 0x664 DUP3 DUP13 SUB DUP4 PUSH2 0xCE8 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xC9F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x6B7 JUMPI POP POP POP DUP3 PUSH2 0x66E SWAP5 PUSH2 0x664 SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0x653 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x699 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x664 DUP3 PUSH2 0x66E DUP7 DUP1 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x634 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x72C PUSH2 0xC6E JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x225 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x797 PUSH2 0xC89 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH2 0x7C1 PUSH2 0xC6E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x7DE JUMPI POP PUSH2 0x263 SWAP2 SWAP3 CALLDATALOAD PUSH2 0xF24 JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x263 SWAP2 CALLDATALOAD PUSH2 0x845 PUSH1 0x1 PUSH2 0x24C PUSH2 0xC6E JUMP JUMPDEST PUSH2 0xEA3 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x27F JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI PUSH2 0x890 PUSH2 0xC89 JUMP JUMPDEST PUSH2 0x898 PUSH2 0xC6E JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x8D5 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x2AC DUP10 DUP10 DUP10 PUSH2 0xDC7 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x93B JUMPI DUP2 ISZERO PUSH2 0x925 JUMPI CALLER ISZERO PUSH2 0x90F JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x2AC CODESIZE PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x9B9 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xA31 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xA1B JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 DUP6 DUP6 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 DUP7 DUP7 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP1 DUP3 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xB32 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xB1F JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xAFD JUMPI POP PUSH1 0x1 EQ PUSH2 0xAA4 JUMPI JUMPDEST PUSH2 0x66E DUP7 DUP7 PUSH2 0x664 DUP3 DUP12 SUB DUP4 PUSH2 0xCE8 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xAEA JUMPI POP POP POP DUP3 PUSH2 0x66E SWAP5 PUSH2 0x664 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xA93 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xACD JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x664 DUP3 PUSH2 0x66E CODESIZE PUSH2 0xA93 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xA73 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xBB3 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP CODESIZE PUSH2 0xBAA JUMP JUMPDEST SWAP2 SWAP3 SWAP1 POP CALLVALUE PUSH2 0x54E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x54E JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xBFC PUSH2 0xC6E JUMP JUMPDEST SWAP2 DUP6 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 CALLER DUP8 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP6 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0xC53 JUMPI POP POP DUP4 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP3 SWAP1 DUP3 ISZERO PUSH2 0xC49 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALL ISZERO PUSH2 0xC3F JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xC2B JUMP JUMPDEST SWAP1 DUP6 PUSH1 0x44 SWAP3 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC84 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC84 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xCD4 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD0A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xD33 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xD53 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD33 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xD33 JUMPI JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xDA9 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xE8B JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xE41 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xF1F JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xF1F JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 CREATE PUSH11 0xA881FAE08C22F9FA14BB44 0xE6 LOG1 EQ LOG1 DUP9 0xAE 0xB3 0xBD COINBASE PUSH14 0x77A16C86030904A964736F6C6343 STOP ADDMOD XOR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 MLOAD DUP3 PREVRANDAO LOG4 0xD SWAP8 PUSH0 GASLIMIT SWAP16 SWAP15 0xF6 SWAP10 0xCF 0xDC TLOAD SWAP13 0xDE SWAP13 PUSH25 0x7AFC403747D7730E562B37EF64736F6C634300081800330000 ",
              "sourceMap": "630:3604:22:-:0;;;;;;;;;;;;;-1:-1:-1;;630:3604:22;;;;-1:-1:-1;;;;;630:3604:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;1070:10:14;;1273:26:2;1269:95;;-1:-1:-1;630:3604:22;;;;;;;;;;;;;;;1070:10:14;;630:3604:22;;;;-1:-1:-1;630:3604:22;;;1070:10:14;;;630:3604:22;;3052:40:2;-1:-1:-1;3052:40:2;;630:3604:22;1097:21:14;;;1093:95;;1198:25;;;630:3604:22;;1032:31;630:3604;;;1032:31;630:3604;1074:44;1070:10:14;1074:44:22;:::i;:::-;;630:3604;;;;;;;;1198:25:14;630:3604:22;;;;;;;;;;;;;;;;1093:95:14;-1:-1:-1;;;1142:34:14;;;;;1269:95:2;630:3604:22;;-1:-1:-1;;;1322:31:2;;-1:-1:-1;1322:31:2;;;630:3604:22;;;1322:31:2;630:3604:22;-1:-1:-1;630:3604:22;;;;;;-1:-1:-1;630:3604:22;;;;;-1:-1:-1;630:3604:22;;;;-1:-1:-1;;;;;630:3604:22;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;630:3604:22;1297:1:2;630:3604:22;;;;;;;;;;1297:1:2;;630:3604:22;;;;;;;;2954:6:0;630:3604:22;;;;;;;;;;;;;6347:4:0;630:3604:22;;;;;;;;735:10:10;6370:40:0;;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 4476,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_13559": {
                  "entryPoint": 4499,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_payable": {
                  "entryPoint": 5425,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_struct_bytes64": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 4594,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_13561": {
                  "entryPoint": 4522,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "finalize_allocation_13567": {
                  "entryPoint": 4573,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 5356,
                  "id": 463,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_checkRole": {
                  "entryPoint": 4718,
                  "id": 93,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkRole_13557": {
                  "entryPoint": 4629,
                  "id": 93,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_grantRole": {
                  "entryPoint": 4937,
                  "id": 256,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_grantRole_13558": {
                  "entryPoint": 4757,
                  "id": 256,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_revokeRole": {
                  "entryPoint": 5235,
                  "id": 294,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_revokeRole_13564": {
                  "entryPoint": 5062,
                  "id": 294,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "2066": [
                  {
                    "length": 32,
                    "start": 1503
                  },
                  {
                    "length": 32,
                    "start": 2251
                  },
                  {
                    "length": 32,
                    "start": 3520
                  }
                ]
              },
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH3 0x10D8 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH3 0x10AC JUMPI DUP1 PUSH4 0x24CA984E EQ PUSH3 0x107A JUMPI DUP1 PUSH4 0x2EF3F1A5 EQ PUSH3 0x103D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH3 0x100D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH3 0xFA6 JUMPI DUP1 PUSH4 0x3FC8CEF3 EQ PUSH3 0xF75 JUMPI DUP1 PUSH4 0x59A1AAE1 EQ PUSH3 0xE44 JUMPI DUP1 PUSH4 0x5C42132E EQ PUSH3 0xD71 JUMPI DUP1 PUSH4 0x67EBB6B2 EQ PUSH3 0xCBC JUMPI DUP1 PUSH4 0x6AE0B154 EQ PUSH3 0xC8A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0xC20 JUMPI DUP1 PUSH4 0x879D182D EQ PUSH3 0x86B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x843 JUMPI DUP1 PUSH4 0x9049F9D2 EQ PUSH3 0x6E3 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH3 0x699 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH3 0x67C JUMPI DUP1 PUSH4 0xA628B47F EQ PUSH3 0x4F0 JUMPI DUP1 PUSH4 0xBBE4F6DB EQ PUSH3 0x475 JUMPI DUP1 PUSH4 0xBE4F3E8F EQ PUSH3 0x442 JUMPI DUP1 PUSH4 0xC1BF9E58 EQ PUSH3 0x2D7 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH3 0x290 JUMPI DUP1 PUSH4 0xEF88E0E1 EQ PUSH3 0x1FD JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI PUSH3 0x161 PUSH3 0x117C JUMP JUMPDEST SWAP1 PUSH3 0x16C PUSH3 0x14EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH3 0x1CA JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 DUP5 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH3 0x28C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x28C JUMPI SWAP1 PUSH3 0x288 SWAP2 PUSH3 0x222 PUSH3 0x117C JUMP JUMPDEST SWAP2 PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD PUSH3 0x234 DUP2 PUSH3 0x11AA JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD PUSH3 0x24A DUP2 PUSH3 0x11AA JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 MLOAD SWAP4 PUSH3 0x265 DUP6 PUSH3 0x11AA JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP1 PUSH1 0x40 DUP4 ADD SWAP5 DUP1 MLOAD DUP5 MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x1F9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1F9 JUMPI PUSH3 0x2D3 SWAP2 CALLDATALOAD PUSH3 0x2CD PUSH1 0x1 PUSH3 0x2BA PUSH3 0x1193 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH3 0x126E JUMP JUMPDEST PUSH3 0x1473 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH3 0x28C JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI PUSH3 0x2F6 PUSH3 0x117C JUMP JUMPDEST SWAP3 PUSH1 0x24 CALLDATALOAD PUSH32 0xA775B33F9A8A1BD7919099707CFE9320F63C8A6CD38FA171B61AACB968CE641 DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH3 0x425 JUMPI POP DUP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP1 DUP2 DUP2 EQ PUSH1 0x0 EQ PUSH3 0x3E3 JUMPI POP DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 DUP6 KECCAK256 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH3 0x3DF JUMPI DUP3 MLOAD PUSH3 0x7B8A67 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x3D6 JUMPI POP PUSH3 0x3C0 JUMPI POP POP DUP1 RETURN JUMPDEST PUSH3 0x3CB SWAP1 PUSH3 0x11DD JUMP JUMPDEST PUSH3 0x3D3 JUMPI DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP7 MSTORE POP PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 DUP6 KECCAK256 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH3 0x3DF JUMPI DUP3 MLOAD PUSH3 0x7B8A67 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE CALLER PUSH1 0x20 DUP4 ADD MSTORE SWAP3 DUP5 SWAP2 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD PUSH3 0x3A9 JUMP JUMPDEST DUP4 PUSH1 0x44 SWAP2 DUP5 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI SWAP2 DUP2 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH3 0x49D PUSH3 0x117C JUMP JUMPDEST AND SWAP1 DUP2 DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 DUP5 DUP7 KECCAK256 SLOAD AND ISZERO PUSH3 0x4C9 JUMPI POP DUP4 DUP4 SWAP2 PUSH1 0x20 SWAP6 MSTORE PUSH1 0x3 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH32 0x8FEAD4D200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI PUSH3 0x508 PUSH3 0x117C JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP7 AND DUP1 SWAP7 SUB PUSH3 0x677 JUMPI DUP3 DUP5 MLOAD SWAP3 PUSH1 0x20 SWAP8 DUP9 DUP6 ADD MSTORE AND DUP5 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP3 MSTORE PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x662 JUMPI SWAP2 DUP7 SWAP4 SWAP2 SWAP6 SWAP3 DUP6 MSTORE DUP6 DUP9 MSTORE PUSH1 0x1 DUP5 MSTORE DUP5 DUP9 KECCAK256 SWAP6 PUSH1 0x1 DUP7 MLOAD SWAP8 DUP9 SWAP6 PUSH32 0xDC20313700000000000000000000000000000000000000000000000000000000 DUP8 MSTORE DUP2 SLOAD SWAP1 DUP8 ADD MSTORE ADD SLOAD PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x84 DUP6 ADD MSTORE DUP9 JUMPDEST DUP3 DUP2 LT PUSH3 0x649 JUMPI POP POP PUSH1 0xA4 DUP4 DUP3 DUP11 DUP4 DUP4 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP2 CALLVALUE SWAP1 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH3 0x640 JUMPI POP PUSH3 0x613 JUMPI DUP3 DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x638 JUMPI JUMPDEST PUSH3 0x629 DUP2 DUP4 PUSH3 0x11F2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x3D3 JUMPI CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH3 0x61D JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP9 DUP3 ADD PUSH1 0xA4 ADD MSTORE DUP9 SWAP6 DUP9 SWAP6 POP ADD PUSH3 0x5B9 JUMP JUMPDEST PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH3 0x28C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH3 0x1F9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 PUSH1 0x20 SWAP5 PUSH3 0x6C2 PUSH3 0x1193 JUMP JUMPDEST SWAP4 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH3 0x70C PUSH3 0x117C JUMP JUMPDEST AND SWAP3 DUP4 DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 DUP3 DUP7 KECCAK256 SLOAD AND PUSH3 0x81C JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP5 SUB PUSH3 0x7B8 JUMPI DUP2 MLOAD SWAP1 PUSH2 0x13A2 DUP1 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH3 0x7A5 JUMPI POP SWAP1 DUP3 SWAP2 PUSH3 0x2C2A DUP4 CODECOPY SUB SWAP1 DUP6 CREATE SWAP3 DUP4 ISZERO PUSH3 0x79B JUMPI DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP4 KECCAK256 SWAP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH1 0x41 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP2 MLOAD SWAP1 PUSH2 0x16E3 DUP1 DUP4 ADD SWAP2 DUP4 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH3 0x7A5 JUMPI POP PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH3 0x1547 DUP4 CODECOPY DUP7 DUP2 MSTORE SUB ADD SWAP1 DUP6 CREATE SWAP3 DUP4 ISZERO PUSH3 0x79B JUMPI DUP5 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP4 KECCAK256 SWAP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST SWAP1 MLOAD PUSH32 0x23369FA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH3 0x28C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x120 DUP2 SLT PUSH3 0x28C JUMPI PUSH2 0x100 SGT PUSH3 0x3D3 JUMPI PUSH2 0x104 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH3 0x1F9 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH3 0x1F9 JUMPI DUP2 DUP6 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH3 0x1F9 JUMPI DUP2 ADD CALLDATASIZE PUSH1 0x24 DUP3 ADD GT PUSH3 0x1F9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH32 0x0 AND CALLER SUB PUSH3 0xBF1 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 DUP6 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 DUP3 MSTORE DUP2 DUP8 DUP8 KECCAK256 DUP9 MLOAD PUSH3 0x911 DUP2 PUSH3 0x11AA JUMP JUMPDEST PUSH1 0x1 DUP3 SLOAD SWAP3 DUP4 DUP4 MSTORE ADD SLOAD SWAP3 DUP4 SWAP2 ADD MSTORE PUSH1 0x44 CALLDATALOAD EQ SWAP1 DUP2 ISZERO SWAP2 PUSH3 0xBE3 JUMPI JUMPDEST POP ISZERO PUSH3 0x95D JUMPI DUP8 DUP8 MLOAD PUSH32 0x7FEE69A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 DUP6 DUP9 PUSH1 0x60 DUP6 DUP11 SWAP6 SUB SLT PUSH3 0x28C JUMPI PUSH3 0x97A PUSH1 0x24 DUP7 ADD PUSH3 0x1531 JUMP JUMPDEST SWAP7 DUP1 PUSH1 0x64 PUSH3 0x98C PUSH1 0x44 DUP10 ADD PUSH3 0x1531 JUMP JUMPDEST SWAP8 ADD CALLDATALOAD SWAP7 AND SWAP8 DUP5 DUP3 PUSH1 0x44 DUP2 DUP7 SLOAD AND SWAP4 DUP10 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH32 0xB464631B00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND DUP9 DUP4 ADD MSTORE DUP13 PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0xBD9 JUMPI SWAP1 DUP3 SWAP2 DUP6 SWAP2 PUSH3 0xB94 JUMPI JUMPDEST POP PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE SWAP2 AND DUP2 DUP2 SUB PUSH3 0xABF JUMPI POP DUP4 MSTORE PUSH1 0x3 DUP5 MSTORE DUP5 DUP4 KECCAK256 SLOAD AND DUP1 EXTCODESIZE ISZERO PUSH3 0x1F9 JUMPI DUP5 MLOAD PUSH3 0x7B8A67 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0xAB5 JUMPI PUSH3 0xA91 JUMPI JUMPDEST POP POP SWAP1 PUSH32 0x40627F7438E2974529D03C9B047342D738A7A1759FED232175525A8C048C9444 SWAP5 PUSH1 0x60 SWAP5 SWAP4 SWAP3 JUMPDEST DUP3 MLOAD SWAP5 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH3 0xAA1 SWAP1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP6 PUSH3 0x11DD JUMP JUMPDEST PUSH3 0xAB1 JUMPI SWAP1 SWAP2 SWAP3 DUP6 DUP8 PUSH3 0xA57 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP4 SWAP3 SWAP4 SWAP9 SWAP6 SWAP7 SWAP8 SWAP9 MSTORE PUSH1 0x3 DUP5 MSTORE DUP6 DUP3 KECCAK256 SLOAD AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH3 0x28C JUMPI DUP6 MLOAD PUSH3 0x7B8A67 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP3 DUP4 SWAP2 DUP3 SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL DUP1 ISZERO PUSH3 0xB8A JUMPI PUSH3 0xB49 JUMPI JUMPDEST POP SWAP2 PUSH1 0x60 SWAP4 SWAP2 PUSH32 0x40627F7438E2974529D03C9B047342D738A7A1759FED232175525A8C048C9444 SWAP6 SWAP4 PUSH3 0xA82 JUMP JUMPDEST SWAP2 PUSH32 0x40627F7438E2974529D03C9B047342D738A7A1759FED232175525A8C048C9444 SWAP6 SWAP4 SWAP2 SWAP7 PUSH3 0xB7D PUSH1 0x60 SWAP7 SWAP5 PUSH3 0x11DD JUMP JUMPDEST SWAP7 SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 PUSH3 0xB1A JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH3 0xBD1 JUMPI JUMPDEST PUSH3 0xBB0 DUP2 DUP4 PUSH3 0x11F2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0xBCD JUMPI MLOAD DUP2 DUP2 AND DUP2 SUB PUSH3 0xBCD JUMPI DUP2 SWAP1 DUP12 PUSH3 0x9E5 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH3 0xBA4 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x64 CALLDATALOAD EQ ISZERO CODESIZE PUSH3 0x92E JUMP JUMPDEST DUP5 MLOAD PUSH32 0xD7F7333400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH3 0x3D3 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x3D3 JUMPI PUSH3 0xC3D PUSH3 0x14EC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH3 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x3D3 JUMPI PUSH3 0x2D3 PUSH3 0xCAC PUSH3 0x117C JUMP JUMPDEST PUSH3 0xCB6 PUSH3 0x1215 JUMP JUMPDEST PUSH3 0x13C6 JUMP JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH3 0x28C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x28C JUMPI DUP3 DUP2 CALLDATALOAD SWAP3 DUP1 PUSH1 0x20 DUP4 MLOAD PUSH3 0xCE6 DUP2 PUSH3 0x11AA JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 DUP4 MLOAD SWAP3 PUSH3 0xD03 DUP5 PUSH3 0x11AA JUMP JUMPDEST PUSH1 0x1 DUP2 SLOAD SWAP2 DUP3 DUP7 MSTORE ADD SLOAD SWAP1 DUP2 PUSH1 0x20 DUP7 ADD MSTORE ISZERO SWAP1 DUP2 PUSH3 0xD67 JUMPI JUMPDEST POP PUSH3 0xD38 JUMPI DUP4 MLOAD DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP DUP4 MLOAD SWAP2 PUSH32 0x78D0DBFC00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP6 PUSH3 0xD1D JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x1F9 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1F9 JUMPI DUP1 MLOAD SWAP2 PUSH32 0xB88C914800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0xE3A JUMPI DUP4 SWAP3 PUSH3 0xDFC JUMPI JUMPDEST PUSH1 0x20 DUP4 DUP4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH3 0xE31 JUMPI JUMPDEST DUP2 PUSH3 0xE1B PUSH1 0x20 SWAP4 DUP4 PUSH3 0x11F2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x1F9 JUMPI PUSH1 0x20 SWAP3 POP MLOAD SWAP1 CODESIZE PUSH3 0xDF2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH3 0xE0C JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH3 0x1F9 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1F9 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT PUSH3 0x3DF JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH3 0x3DF JUMPI DUP3 DUP3 ADD CALLDATALOAD SWAP3 DUP2 DUP5 GT PUSH3 0xAB1 JUMPI PUSH1 0x24 SWAP3 PUSH1 0x5 SWAP3 CALLDATASIZE DUP6 DUP8 PUSH1 0x5 SHL DUP6 ADD ADD GT PUSH3 0xF71 JUMPI DUP5 CALLDATALOAD SWAP2 DUP2 DUP4 GT PUSH3 0xF6D JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH3 0xF6D JUMPI DUP3 DUP2 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH3 0xF6D JUMPI PUSH1 0x6 SWAP2 CALLDATASIZE DUP8 DUP3 PUSH1 0x6 SHL DUP7 ADD ADD GT PUSH3 0xF69 JUMPI PUSH3 0xED8 PUSH3 0x14EC JUMP JUMPDEST PUSH3 0xEE2 PUSH3 0x14EC JUMP JUMPDEST DUP1 DUP9 SUB PUSH3 0xF41 JUMPI DUP10 JUMPDEST DUP9 DUP2 LT PUSH3 0xEF8 JUMPI DUP11 DUP1 RETURN JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xF2F JUMPI DUP1 DUP8 SHL DUP7 ADD DUP9 ADD CALLDATALOAD DUP12 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE DUP11 DUP13 KECCAK256 DUP3 DUP7 SHL DUP8 ADD DUP11 DUP2 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x44 ADD CALLDATALOAD SWAP1 DUP3 ADD SSTORE ADD PUSH3 0xEEC JUMP JUMPDEST DUP8 DUP12 PUSH1 0x32 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST POP DUP8 MLOAD PUSH32 0x947D5A8400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH3 0x28C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP2 MSTORE RETURN JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH3 0x28C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI PUSH3 0xFC5 PUSH3 0x1193 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH3 0xFE5 JUMPI POP PUSH3 0x2D3 SWAP2 SWAP3 CALLDATALOAD PUSH3 0x1473 JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x1F9 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1F9 JUMPI PUSH3 0x2D3 SWAP2 CALLDATALOAD PUSH3 0x1037 PUSH1 0x1 PUSH3 0x2BA PUSH3 0x1193 JUMP JUMPDEST PUSH3 0x1349 JUMP JUMPDEST POP POP CALLVALUE PUSH3 0x28C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x28C JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0xA775B33F9A8A1BD7919099707CFE9320F63C8A6CD38FA171B61AACB968CE641 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH3 0x3D3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x3D3 JUMPI PUSH3 0x2D3 PUSH3 0x109C PUSH3 0x117C JUMP JUMPDEST PUSH3 0x10A6 PUSH3 0x1215 JUMP JUMPDEST PUSH3 0x1295 JUMP JUMPDEST POP CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP3 POP POP CALLVALUE PUSH3 0x1F9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1F9 JUMPI CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH3 0x1F9 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH3 0x1151 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH3 0x114A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x677 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x677 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x11C7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH3 0x11C7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH3 0x11C7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAC33FF75C19E70FE83507DB0D683FD3465C996598DC972688B7ACE676C89077B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x1250 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH3 0x1250 JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x2A44413C737EDF57C9A9B5A5EDCE85F99936144E881302A0CFC518C4333A371F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xA775B33F9A8A1BD7919099707CFE9320F63C8A6CD38FA171B61AACB968CE641 SWAP1 PUSH1 0xFF AND PUSH3 0x1344 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH3 0x1344 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x2A44413C737EDF57C9A9B5A5EDCE85F99936144E881302A0CFC518C4333A371F PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xA775B33F9A8A1BD7919099707CFE9320F63C8A6CD38FA171B61AACB968CE641 SWAP1 PUSH1 0xFF AND ISZERO PUSH3 0x1344 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH3 0x1344 JUMPI DUP1 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER SUB PUSH3 0x1501 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x677 JUMPI JUMP INVALID PUSH1 0xA0 CALLVALUE PUSH3 0x394 JUMPI PUSH1 0x1F SWAP1 PUSH1 0x1F NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH3 0x16E3 CODESIZE DUP2 SWAP1 SUB DUP6 DUP2 ADD DUP5 AND DUP6 ADD DUP4 DUP2 GT DUP7 DUP3 LT OR PUSH3 0x298 JUMPI DUP6 SWAP3 DUP3 SWAP2 PUSH1 0x40 MSTORE DUP4 CODECOPY PUSH1 0x20 SWAP5 DUP6 SWAP2 DUP2 ADD SUB SLT PUSH3 0x394 JUMPI MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH3 0x394 JUMPI PUSH3 0x64 PUSH3 0x399 JUMP JUMPDEST PUSH1 0x12 DUP2 MSTORE PUSH18 0x2437B732BCA837B7B6102628102A37B5B2B7 PUSH1 0x71 SHL DUP6 DUP3 ADD MSTORE PUSH3 0x8C PUSH3 0x399 JUMP JUMPDEST SWAP2 PUSH1 0x3 SWAP3 DUP4 DUP2 MSTORE PUSH3 0x484C5 PUSH1 0xEC SHL DUP8 DUP3 ADD MSTORE DUP3 MLOAD DUP6 DUP2 GT PUSH3 0x298 JUMPI DUP5 SLOAD PUSH1 0x1 SWAP5 DUP6 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x389 JUMPI JUMPDEST DUP11 DUP4 LT EQ PUSH3 0x373 JUMPI DUP2 DUP6 DUP5 SWAP4 GT PUSH3 0x31D JUMPI JUMPDEST POP DUP10 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2BA JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2AE JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP8 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP5 SSTORE JUMPDEST DUP1 MLOAD SWAP5 DUP6 GT PUSH3 0x298 JUMPI PUSH1 0x4 SWAP7 DUP8 SLOAD DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x28D JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x278 JUMPI DUP4 DUP2 GT PUSH3 0x22D JUMPI JUMPDEST POP DUP1 SWAP3 DUP7 GT PUSH1 0x1 EQ PUSH3 0x1C1 JUMPI POP DUP5 SWAP6 POP SWAP1 DUP5 SWAP3 SWAP2 PUSH1 0x0 SWAP6 PUSH3 0x1B5 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x80 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x178 SWAP1 PUSH3 0x3B9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1297 SWAP1 DUP2 PUSH3 0x44C DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x134 ADD MSTORE DUP2 DUP2 PUSH2 0x213 ADD MSTORE DUP2 DUP2 PUSH2 0x393 ADD MSTORE DUP2 DUP2 PUSH2 0x4B6 ADD MSTORE DUP2 DUP2 PUSH2 0x73D ADD MSTORE PUSH2 0xC9D ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x145 JUMP JUMPDEST SWAP4 SWAP3 SWAP6 DUP6 SWAP1 DUP2 AND DUP9 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP4 DUP4 LT PUSH3 0x212 JUMPI POP POP POP LT PUSH3 0x1F7 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x155 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x1E8 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x1D5 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP10 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP11 LT PUSH3 0x26E JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x261 JUMPI POP POP PUSH3 0x127 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x251 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x248 JUMP JUMPDEST PUSH1 0x22 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x115 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xE6 JUMP JUMPDEST SWAP1 DUP10 DUP8 SWAP5 AND SWAP2 DUP9 PUSH1 0x0 MSTORE DUP12 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP14 DUP3 DUP3 LT PUSH3 0x306 JUMPI POP POP DUP5 GT PUSH3 0x2ED JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP5 SSTORE PUSH3 0xF8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP10 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x2DF JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP11 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2CC JUMP JUMPDEST SWAP1 SWAP2 POP DUP7 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP7 LT PUSH3 0x369 JUMPI JUMPDEST SWAP2 DUP9 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x359 JUMPI POP POP PUSH3 0xCF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP9 SWAP2 ADD PUSH3 0x349 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x33B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0xBB JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x298 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x447 JUMPI DUP2 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH3 0xF714CE EQ PUSH2 0xC53 JUMPI POP DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xBB2 JUMPI DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xABB JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0xA13 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x9F4 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x8E5 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x8BA JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x890 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x874 JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x815 JUMPI DUP2 PUSH4 0x51C6590A EQ PUSH2 0x710 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x6DA JUMPI DUP2 PUSH4 0x8F840DDD EQ PUSH2 0x6BB JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x675 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x570 JUMPI DUP2 PUSH4 0x9D7DE6B3 EQ PUSH2 0x292 JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x277 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x246 JUMPI DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x1EB JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1A7 JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x15C JUMPI PUSH4 0xFC0C546A EQ PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x178 PUSH2 0xCFA JUMP JUMPDEST DUP3 PUSH2 0x181 PUSH2 0xCDF JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0x1E3 SWAP2 CALLDATALOAD PUSH2 0x1DE PUSH1 0x1 PUSH2 0x1CC PUSH2 0xCDF JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI PUSH2 0x240 SWAP1 CALLDATALOAD PUSH2 0x238 DUP2 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x270 PUSH2 0x266 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xEA0 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP1 CALLDATALOAD DUP1 ISZERO PUSH2 0x561 JUMPI PUSH2 0x2BF PUSH2 0x2B6 PUSH1 0x6 SLOAD DUP4 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0xDBA JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x552 JUMPI CALLER ISZERO PUSH2 0x53C JUMPI CALLER DUP6 MSTORE PUSH1 0x20 SWAP2 DUP6 DUP4 MSTORE DUP2 DUP7 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x510 JUMPI SWAP1 DUP1 DUP8 SWAP3 CALLER DUP5 MSTORE DUP4 DUP7 MSTORE SUB DUP4 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 CALLER SWAP3 LOG3 ADDRESS DUP6 MSTORE DUP5 DUP3 MSTORE DUP5 DUP2 DUP2 KECCAK256 SLOAD SWAP3 DUP6 DUP5 LT PUSH1 0x0 EQ PUSH2 0x4A0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP6 DUP2 DUP4 PUSH1 0x7 SLOAD AND DUP7 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C42132E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x496 JUMPI DUP5 SWAP3 PUSH2 0x468 JUMPI JUMPDEST POP POP PUSH2 0x38C DUP6 DUP9 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 PUSH2 0x3BB DUP2 PUSH32 0x0 AND SWAP7 CALLER DUP9 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x7 SLOAD AND SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0x464 JUMPI PUSH1 0x84 SWAP2 DUP6 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH32 0xA628B47F00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER DUP12 DUP7 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x45A JUMPI PUSH2 0x428 JUMPI JUMPDEST POP POP POP PUSH2 0x240 SWAP1 JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDE7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SWAP6 SWAP4 SWAP6 GT PUSH2 0x447 JUMPI MSTORE SWAP2 POP PUSH2 0x240 CODESIZE DUP1 PUSH2 0x418 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH1 0x41 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x48F JUMPI JUMPDEST PUSH2 0x47F DUP2 DUP4 PUSH2 0xD59 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E7 JUMPI MLOAD CODESIZE DUP1 PUSH2 0x380 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x475 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP SWAP3 DUP1 SWAP3 POP PUSH2 0x4DB SWAP2 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xE38 JUMP JUMPDEST DUP3 DUP1 CALLVALUE ISZERO PUSH2 0x507 JUMPI JUMPDEST DUP2 DUP1 DUP1 SWAP3 CALLVALUE SWAP1 CALLER SWAP1 CALL ISZERO PUSH2 0x4FC JUMPI PUSH2 0x240 SWAP2 POP PUSH2 0x420 JUMP JUMPDEST POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x4E4 JUMP JUMPDEST DUP3 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER DUP2 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 DUP6 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x66B JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x658 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x634 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5DC JUMPI JUMPDEST PUSH2 0x5D8 DUP8 DUP8 PUSH2 0x5CE DUP3 DUP13 SUB DUP4 PUSH2 0xD59 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD10 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x621 JUMPI POP POP POP DUP3 PUSH2 0x5D8 SWAP5 PUSH2 0x5CE SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0x5BD JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x603 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x5CE DUP3 PUSH2 0x5D8 DUP7 DUP1 PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x59E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x696 PUSH2 0xCDF JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x701 PUSH2 0xCFA JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI DUP1 CALLDATALOAD SWAP1 DUP2 ISZERO PUSH2 0x807 JUMPI PUSH2 0x762 DUP3 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 PUSH2 0x7EC JUMPI POP PUSH10 0x21E19E0C9BAB2400000 SWAP1 JUMPDEST CALLER ISZERO PUSH2 0x7D6 JUMPI POP PUSH2 0x240 SWAP3 SWAP4 PUSH2 0x790 DUP3 PUSH1 0x2 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE DUP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x6 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP7 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x801 SWAP1 PUSH2 0x7FC PUSH1 0x2 SLOAD DUP6 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST SWAP1 PUSH2 0x778 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH2 0x82F PUSH2 0xCDF JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x84C JUMPI POP PUSH2 0x1E3 SWAP2 SWAP3 CALLDATALOAD PUSH2 0xFFD JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0x1E3 SWAP2 CALLDATALOAD PUSH2 0x8B5 PUSH1 0x1 PUSH2 0x1CC PUSH2 0xCDF JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x9F1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9F1 JUMPI PUSH2 0x901 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x909 PUSH2 0xCDF JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x946 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x270 DUP10 DUP10 DUP10 PUSH2 0xEA0 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x9AC JUMPI DUP2 ISZERO PUSH2 0x996 JUMPI CALLER ISZERO PUSH2 0x980 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x270 DUP8 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0xA2D PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xA8F JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 DUP6 DUP6 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 DUP7 DUP7 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP1 DUP3 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xBA8 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xB95 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB73 JUMPI POP PUSH1 0x1 EQ PUSH2 0xB1A JUMPI JUMPDEST PUSH2 0x5D8 DUP7 DUP7 PUSH2 0x5CE DUP3 DUP12 SUB DUP4 PUSH2 0xD59 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xB60 JUMPI POP POP POP DUP3 PUSH2 0x5D8 SWAP5 PUSH2 0x5CE SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xB09 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x5CE DUP3 PUSH2 0x5D8 CODESIZE PUSH2 0xB09 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xAE9 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E7 JUMPI CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1E7 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xC29 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP CODESIZE PUSH2 0xC20 JUMP JUMPDEST SWAP1 SWAP2 POP CALLVALUE PUSH2 0x464 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x464 JUMPI PUSH1 0xFF PUSH2 0xC70 PUSH2 0xCDF JUMP JUMPDEST SWAP4 DUP6 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 DUP7 KECCAK256 CALLER DUP8 MSTORE PUSH1 0x20 MSTORE DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0xCC5 JUMPI POP SWAP1 PUSH2 0xCC2 SWAP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xE38 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP4 PUSH1 0x44 SWAP3 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCF5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCF5 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xD45 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xD23 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xDA4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xDC4 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xDA4 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xDA4 JUMPI JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xE1A JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0xD7B JUMPI PUSH2 0xE9E SWAP3 PUSH1 0x40 MSTORE PUSH2 0x10E0 JUMP JUMPDEST JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xF64 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xF1A JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xFF8 JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xFF8 JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0xD7B JUMPI PUSH2 0xE9E SWAP3 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 MLOAD SWAP2 ADD DUP3 DUP7 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x11C2 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x11AE JUMPI SWAP1 PUSH2 0x113D SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x112D PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0xD59 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE DUP5 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP5 PUSH2 0x11CE JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x1186 JUMPI JUMPDEST POP POP POP PUSH2 0x1155 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x158 JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO SUB PUSH2 0x9F1 JUMPI POP CODESIZE DUP1 DUP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x113D SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x1137 JUMP JUMPDEST SWAP1 PUSH2 0x120D JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x11E3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x1258 JUMPI JUMPDEST PUSH2 0x121E JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1216 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xAB 0x25 PUSH25 0x8F562D1572C1D8CD63B8E9C9973E8B8171B87E1609E4B88C0D 0xB4 KECCAK256 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER PUSH1 0x80 CALLVALUE PUSH3 0x338 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP1 DUP4 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR PUSH3 0x238 JUMPI DUP4 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH18 0x2437B732BCA837B7B6102628102A37B5B2B7 PUSH1 0x71 SHL DUP4 DUP4 ADD MSTORE DUP4 MLOAD DUP5 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR PUSH3 0x238 JUMPI DUP6 MSTORE PUSH1 0x3 SWAP1 DUP2 DUP2 MSTORE PUSH3 0x484C5 PUSH1 0xEC SHL DUP6 DUP3 ADD MSTORE DUP4 MLOAD SWAP1 DUP4 DUP3 GT PUSH3 0x238 JUMPI DUP3 SLOAD SWAP2 PUSH1 0x1 SWAP6 DUP7 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x32D JUMPI JUMPDEST DUP9 DUP6 LT EQ PUSH3 0x317 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x2C1 JUMPI JUMPDEST POP DUP9 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x25A JUMPI PUSH1 0x0 SWAP3 PUSH3 0x24E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP4 SSTORE JUMPDEST DUP1 MLOAD SWAP4 DUP5 GT PUSH3 0x238 JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP7 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x22D JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x218 JUMPI DUP4 DUP2 GT PUSH3 0x1CD JUMPI JUMPDEST POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH3 0x15F JUMPI POP SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x153 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x144 SWAP1 PUSH3 0x33D JUMP JUMPDEST POP MLOAD PUSH2 0xFD2 SWAP1 DUP2 PUSH3 0x3D0 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x114 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1F NOT DUP2 AND DUP9 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP4 DUP4 LT PUSH3 0x1B2 JUMPI POP POP POP LT PUSH3 0x197 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x124 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x188 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x175 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP10 LT PUSH3 0x20E JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x201 JUMPI POP POP PUSH3 0xF7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP8 SWAP1 PUSH3 0x1F1 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1E8 JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xB6 JUMP JUMPDEST SWAP1 DUP9 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP8 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x2AA JUMPI POP POP DUP5 GT PUSH3 0x291 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xC8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x283 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x270 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH3 0x30D JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2FD JUMPI POP POP PUSH3 0x9F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x2ED JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2DF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0x88 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x3CB JUMPI DUP2 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xF714CE EQ PUSH2 0xBDD JUMPI POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA47 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x99F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x980 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x875 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x822 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x806 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0x8F840DDD EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x70B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x9D7DE6B3 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D9 JUMPI PUSH4 0xE8078D94 EQ PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI CALLVALUE ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x6 SLOAD DUP1 PUSH2 0x1AD JUMPI POP PUSH10 0x21E19E0C9BAB2400000 SWAP2 JUMPDEST CALLER ISZERO PUSH2 0x198 JUMPI POP PUSH2 0x144 DUP3 PUSH1 0x2 SLOAD PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH2 0x192 CALLVALUE PUSH1 0x6 SLOAD PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP4 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1C2 SWAP1 PUSH2 0x1BD PUSH1 0x2 SLOAD CALLVALUE PUSH2 0xD20 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST SWAP2 PUSH2 0x131 JUMP JUMPDEST MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1F6 PUSH2 0xC89 JUMP JUMPDEST DUP3 PUSH2 0x1FF PUSH2 0xC6E JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x263 SWAP2 CALLDATALOAD PUSH2 0x25E PUSH1 0x1 PUSH2 0x24C PUSH2 0xC6E JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xF24 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP4 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x192 CALLVALUE PUSH1 0x6 SLOAD PUSH2 0xD69 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x2AC PUSH2 0x2A2 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xDC7 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 CALLDATALOAD DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x2FB PUSH2 0x2F2 PUSH1 0x6 SLOAD DUP4 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0xD49 JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x5E7 JUMPI CALLER ISZERO PUSH2 0x5D1 JUMPI CALLER DUP6 MSTORE PUSH1 0x20 SWAP2 DUP6 DUP4 MSTORE DUP2 DUP7 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x5A5 JUMPI SWAP1 DUP1 DUP8 SWAP3 CALLER DUP5 MSTORE DUP4 DUP7 MSTORE SUB DUP4 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 CALLER SWAP3 LOG3 DUP5 SELFBALANCE SWAP3 DUP6 DUP5 LT PUSH1 0x0 EQ PUSH2 0x563 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 PUSH1 0x7 SLOAD AND DUP7 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x5C42132E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x559 JUMPI DUP7 DUP10 DUP7 SWAP3 DUP4 SWAP6 PUSH2 0x520 JUMPI JUMPDEST POP DUP3 PUSH2 0x3CE DUP2 SWAP4 PUSH2 0x3C9 DUP9 DUP5 SWAP6 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST SWAP10 DUP2 DUP2 ISZERO PUSH2 0x517 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x50D JUMPI DUP3 PUSH1 0x7 SLOAD AND SWAP2 DUP6 MLOAD PUSH32 0x3FC8CEF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 DUP2 DUP11 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x503 JUMPI DUP7 SWAP4 PUSH2 0x4CA JUMPI JUMPDEST POP POP DUP3 EXTCODESIZE ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x84 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH32 0xA628B47F00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE CALLER DUP13 DUP8 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP8 ADD MSTORE AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH2 0x48A JUMPI JUMPDEST POP POP POP PUSH2 0x192 SWAP1 JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xD76 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SWAP6 SWAP4 SWAP6 GT PUSH2 0x4A9 JUMPI MSTORE SWAP2 POP PUSH2 0x192 CODESIZE DUP1 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH1 0x41 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4FC JUMPI JUMPDEST PUSH2 0x4E2 DUP2 DUP4 PUSH2 0xCE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4C6 JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x4C6 JUMPI SWAP1 CODESIZE DUP1 PUSH2 0x41F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4D8 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x3D7 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x552 JUMPI JUMPDEST PUSH2 0x53A DUP2 DUP4 PUSH2 0xCE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x54E JUMPI SWAP1 MLOAD SWAP1 DUP4 DUP7 DUP10 DUP3 PUSH2 0x3B7 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x530 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 DUP1 SWAP4 POP DUP1 SWAP3 SWAP6 SWAP5 POP PUSH2 0x577 CALLVALUE DUP7 PUSH2 0xD69 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x59C JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x591 JUMPI PUSH2 0x192 SWAP2 POP PUSH2 0x482 JUMP JUMPDEST POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x57F JUMP JUMPDEST DUP3 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER DUP2 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 DUP6 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x701 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x6EE JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x6CA JUMPI POP PUSH1 0x1 EQ PUSH2 0x672 JUMPI JUMPDEST PUSH2 0x66E DUP8 DUP8 PUSH2 0x664 DUP3 DUP13 SUB DUP4 PUSH2 0xCE8 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xC9F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x6B7 JUMPI POP POP POP DUP3 PUSH2 0x66E SWAP5 PUSH2 0x664 SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0x653 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x699 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x664 DUP3 PUSH2 0x66E DUP7 DUP1 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x634 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x72C PUSH2 0xC6E JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x225 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x797 PUSH2 0xC89 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH2 0x7C1 PUSH2 0xC6E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x7DE JUMPI POP PUSH2 0x263 SWAP2 SWAP3 CALLDATALOAD PUSH2 0xF24 JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x263 SWAP2 CALLDATALOAD PUSH2 0x845 PUSH1 0x1 PUSH2 0x24C PUSH2 0xC6E JUMP JUMPDEST PUSH2 0xEA3 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x27F JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI PUSH2 0x890 PUSH2 0xC89 JUMP JUMPDEST PUSH2 0x898 PUSH2 0xC6E JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x8D5 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x2AC DUP10 DUP10 DUP10 PUSH2 0xDC7 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x93B JUMPI DUP2 ISZERO PUSH2 0x925 JUMPI CALLER ISZERO PUSH2 0x90F JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x2AC CODESIZE PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x9B9 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xA31 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xA1B JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 DUP6 DUP6 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 DUP7 DUP7 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP1 DUP3 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xB32 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xB1F JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xAFD JUMPI POP PUSH1 0x1 EQ PUSH2 0xAA4 JUMPI JUMPDEST PUSH2 0x66E DUP7 DUP7 PUSH2 0x664 DUP3 DUP12 SUB DUP4 PUSH2 0xCE8 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xAEA JUMPI POP POP POP DUP3 PUSH2 0x66E SWAP5 PUSH2 0x664 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xA93 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xACD JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x664 DUP3 PUSH2 0x66E CODESIZE PUSH2 0xA93 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xA73 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xBB3 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP CODESIZE PUSH2 0xBAA JUMP JUMPDEST SWAP2 SWAP3 SWAP1 POP CALLVALUE PUSH2 0x54E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x54E JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xBFC PUSH2 0xC6E JUMP JUMPDEST SWAP2 DUP6 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 CALLER DUP8 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP6 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0xC53 JUMPI POP POP DUP4 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP3 SWAP1 DUP3 ISZERO PUSH2 0xC49 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALL ISZERO PUSH2 0xC3F JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xC2B JUMP JUMPDEST SWAP1 DUP6 PUSH1 0x44 SWAP3 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC84 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC84 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xCD4 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD0A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xD33 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xD53 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD33 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xD33 JUMPI JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xDA9 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xE8B JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xE41 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xF1F JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xF1F JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 CREATE PUSH11 0xA881FAE08C22F9FA14BB44 0xE6 LOG1 EQ LOG1 DUP9 0xAE 0xB3 0xBD COINBASE PUSH14 0x77A16C86030904A964736F6C6343 STOP ADDMOD XOR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 MLOAD DUP3 PREVRANDAO LOG4 0xD SWAP8 PUSH0 GASLIMIT SWAP16 SWAP15 0xF6 SWAP10 0xCF 0xDC TLOAD SWAP13 0xDE SWAP13 PUSH25 0x7AFC403747D7730E562B37EF64736F6C634300081800330000 ",
              "sourceMap": "630:3604:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2091:28;630:3604;2091:28;;;630:3604;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;630:3604:22;;;;;;:::i;:::-;1500:62:2;;;:::i;:::-;-1:-1:-1;;;;;630:3604:22;;;2627:22:2;;;2623:91;;630:3604:22;;;;;-1:-1:-1;;630:3604:22;;;;;;3052:40:2;630:3604:22;3052:40:2;;630:3604:22;;2623:91:2;630:3604:22;;;;;2672:31:2;;;;;;630:3604:22;2672:31:2;630:3604:22;;;;;;;;;;;;-1:-1:-1;;630:3604:22;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;630:3604:22;;;;;;:::i;:::-;;;;;1681:52:17;;630:3604:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:26:0;630:3604:22;;2475:4:0;630:3604:22;;;:::i;:::-;;;;;3901:6:0;630:3604:22;;;;3901:22:0;630:3604:22;2475:4:0;:::i;:::-;4747:26;:::i;:::-;;630:3604:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;746:30;630:3604;;;2954:6:0;630:3604:22;;;;;735:10:10;630:3604:22;;;;;;;;;;3519:23:0;3515:108;;630:3604:22;;;-1:-1:-1;;;;;630:3604:22;;;817:42;2313:13;;;;2309:185;817:42;;;630:3604;;;2357:6;630:3604;;;;;;;2343:54;;;;;;630:3604;;-1:-1:-1;;;2343:54:22;;;;;630:3604;;;735:10:10;630:3604:22;;;;;;;;;;;;;;;;;;2343:54;;;;;;;;;;;;;2309:185;;630:3604;;2343:54;;;;:::i;:::-;630:3604;;;;;;;2343:54;630:3604;;;;;;;;2343:54;630:3604;;;2309:185;630:3604;;-1:-1:-1;2441:6:22;630:3604;;;;;;;;2430:52;;;;;630:3604;;-1:-1:-1;;;2430:52:22;;;;;630:3604;;;735:10:10;630:3604:22;;;;;;;;;;;;;;;;;;2430:52;630:3604;3515:108:0;630:3604:22;;;;;3565:47:0;-1:-1:-1;;;3565:47:0;;735:10:10;3565:47:0;;;630:3604:22;;;;;3565:47:0;630:3604:22;;;;;;;-1:-1:-1;;630:3604:22;;;;;;;;;;;;;;;;;844:40:14;;630:3604:22;;;;;;;;;;;;;;;;;;-1:-1:-1;;630:3604:22;;;;-1:-1:-1;;;;;630:3604:22;;;;:::i;:::-;;;;;;3968:6;630:3604;;;;;;;;3968:27;3964:79;;630:3604;;;;;;;3968:6;630:3604;;;;;;;;;;;3964:79;630:3604;;4019:12;;;;630:3604;-1:-1:-1;630:3604:22;;-1:-1:-1;;630:3604:22;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;630:3604:22;;;;;;;;;;;;;;3230:35;;;;630:3604;;;;;;;;;;;;;3230:35;;630:3604;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3278:151;;;630:3604;3278:151;;630:3604;;3278:151;;;630:3604;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3230:35;;630:3604;;;;;3278:151;;3304:9;;3278:6;;630:3604;3278:151;;;;;;;;;;630:3604;;;3278:151;;;;;;;;;;;;:::i;:::-;;;630:3604;;;;3278:151;;630:3604;;;3278:151;;;;;;630:3604;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;630:3604:22;;;;;;-1:-1:-1;;;630:3604:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;630:3604:22;;;;;:::i;:::-;;;;;2954:6:0;630:3604:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;630:3604:22;;;;-1:-1:-1;;;;;630:3604:22;;;;:::i;:::-;;;;;;1532:6;630:3604;;;;;;;;1528:82;;817:42;1626:13;;817:42;;630:3604;;1680:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;630:3604;;1532:6;630:3604;;;;;;-1:-1:-1;;630:3604:22;;;;;;;;1680:18;630:3604;;;;;;;;;1680:18;630:3604;;;;-1:-1:-1;;;630:3604:22;;;;1622:172;630:3604;;1756:25;;;;;;;;;;;;;;;;630:3604;1756:25;;;;;;630:3604;;;1756:25;;;;;;;;;;630:3604;;1532:6;630:3604;;;;;;-1:-1:-1;;630:3604:22;;;;;;;;1528:82;630:3604;;1583:15;;;;630:3604;;;;;;;;;;;;;;-1:-1:-1;;;;;630:3604:22;;;;;;;;;;;-1:-1:-1;630:3604:22;;-1:-1:-1;;630:3604:22;;;;;;;-1:-1:-1;630:3604:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:6:14;;;630:3604:22;1350:10:14;:29;1346:87;;630:3604:22;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;4042:14:14;630:3604:22;4021:41:14;;;;:99;;;630:3604:22;-1:-1:-1;4003:282:14;;;630:3604:22;;;5056:29:14;;;;4003:282;630:3604:22;;;;;;;;;;;;;;;;:::i;:::-;;;;;4042:14:14;630:3604:22;;;:::i;:::-;;;;;;;;;4042:14:14;630:3604:22;;;;;;;2695:44;;;;;630:3604;2695:44;;630:3604;2695:44;;;630:3604;;;;;;2695:44;;;;;;;;;;;;;;4003:282:14;-1:-1:-1;817:42:22;;630:3604;2756:13;;;817:42;;630:3604;;;2800:6;630:3604;;;;;;;2786:54;;;;;630:3604;;-1:-1:-1;;;2786:54:22;;;;;630:3604;;;-1:-1:-1;;;;;630:3604:22;;;;;;;;;;;;;;;;;;2786:54;;;;;;;;;;2752:185;;;;2954:53;2752:185;630:3604;2752:185;;;;630:3604;;;;;;;;;;;2954:53;630:3604;;2786:54;;;;;;;;;:::i;:::-;630:3604;;2786:54;;;;;;;630:3604;;;;2786:54;630:3604;;;;;;;;;2752:185;630:3604;;;;;;;;;;;2884:6;630:3604;;;;;;;2873:52;;;;;;630:3604;;-1:-1:-1;;;2873:52:22;;;;;630:3604;;;-1:-1:-1;;;;;630:3604:22;;;;;;;;;;;;;;;;;;2873:52;;;;;;;;;;2752:185;;;630:3604;2752:185;;2954:53;2752:185;;;;2873:52;;2954:53;2873:52;;;;;630:3604;2873:52;;;:::i;:::-;;;;;;;;;;;630:3604;;;;;;;;;2695:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;630:3604;;;;;;;;;;;;2695:44;;;;;630:3604;;;;2695:44;;;;;;630:3604;;;;;;;;;4021:99:14;630:3604:22;;4100:20:14;630:3604:22;4079:41:14;;4021:99;;;1346:87;630:3604:22;;1401:32:14;;;1350:10;1401:32;;;630:3604:22;;;1401:32:14;630:3604:22;;;;;;;;;;;;;1500:62:2;;:::i;:::-;630:3604:22;-1:-1:-1;;;;;630:3604:22;;-1:-1:-1;;630:3604:22;;;;;3052:40:2;;;;630:3604:22;;;;;;;;;-1:-1:-1;;630:3604:22;;;;1405:43;630:3604;;:::i;:::-;2475:4:0;;:::i;:::-;1405:43:22;:::i;630:3604::-;;;;;;;;;-1:-1:-1;;630:3604:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3231:25:14;:54;;;;630:3604:22;3227:127:14;;;630:3604:22;;;;;;;;;;;;;;;;;;3227:127:14;630:3604:22;;;;;3309:33:14;;;;;;630:3604:22;3309:33:14;3231:54;3260:25;;;3231:54;;;630:3604:22;;;;;;;;;;;;;;;;2091:28;630:3604;2091:28;;2113:4;2091:28;;;630:3604;2091:28;:6;630:3604;2091:6;-1:-1:-1;;;;;2091:6:22;630:3604;2091:28;;;;;;;;;;;630:3604;2091:28;630:3604;;;;;;;2091:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;630:3604;;;;2091:28;630:3604;;;2091:28;;;;;;;-1:-1:-1;2091:28:22;;;630:3604;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;;;:::i;:::-;2466:41:14;;;2462:89;;2569:13;2584:25;;;;;;630:3604:22;;;2569:13:14;630:3604:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2569:13:14;;630:3604:22;;;;;-1:-1:-1;;;630:3604:22;;;;2462:89:14;630:3604:22;;;2529:22:14;;;;630:3604:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;817:42;630:3604;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:10;;-1:-1:-1;;;;;630:3604:22;;5421:34:0;5417:102;;630:3604:22;5529:37:0;630:3604:22;;;5529:37:0;:::i;5417:102::-;630:3604:22;;;5478:30:0;;;;630:3604:22;;;;;;;;;;;;;;4330:25:0;630:3604:22;;2475:4:0;630:3604:22;;;:::i;2475:4:0:-;4330:25;:::i;630:3604:22:-;;;;;;;;;;;;;;;;;746:30;630:3604;;;;;;;;;;-1:-1:-1;;630:3604:22;;;;1239:42;630:3604;;:::i;:::-;2475:4:0;;:::i;:::-;1239:42:22;:::i;630:3604::-;;;;;;;-1:-1:-1;;630:3604:22;;;;;;;;;;;;3901:6:0;630:3604:22;;;3901:22:0;630:3604:22;;;;;;;;;;;;;;;;-1:-1:-1;;630:3604:22;;;;;;;;;;;;;;2673:47:0;;2688:32;2673:47;;:87;;;;;630:3604:22;;;;;;;2673:87:0;876:25:12;861:40;;;2673:87:0;;;630:3604:22;;;;-1:-1:-1;;;;;630:3604:22;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;630:3604:22;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;630:3604:22;;;;;;;;;;;;;;;;:::o;:::-;;;3230:35;;630:3604;;;;;;;;;;;;;;;;:::o;3199:103:0:-;735:10:10;630:3604:22;;;;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;630:3604:22;;;;3565:47:0;-1:-1:-1;;;3565:47:0;;735:10:10;3565:47:0;;;630:3604:22;;;;;3565:47:0;3199:103;630:3604:22;-1:-1:-1;630:3604:22;2954:6:0;630:3604:22;;;-1:-1:-1;630:3604:22;735:10:10;-1:-1:-1;630:3604:22;;;;;-1:-1:-1;630:3604:22;;;3519:23:0;3515:108;;3199:103;:::o;6179:316::-;-1:-1:-1;;;;;630:3604:22;-1:-1:-1;630:3604:22;;;;;;;;;;-1:-1:-1;;630:3604:22;746:30;;630:3604;;;;;;;2954:6:0;630:3604:22;;;;;;;;;;;;;6347:4:0;630:3604:22;;;;;;;;6370:40:0;735:10:10;6370:40:0;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;;:::o;6179:316::-;;-1:-1:-1;630:3604:22;;;;2954:6:0;630:3604:22;;-1:-1:-1;;;;;630:3604:22;;;;;;;;;;;;;;;;;6276:23:0;6272:217;630:3604:22;;;;;;2954:6:0;630:3604:22;;;;;;;;;;;;;6347:4:0;630:3604:22;;;;;;;;6370:40:0;735:10:10;6370:40:0;;;6347:4;6424:11;:::o;6730:317::-;-1:-1:-1;;;;;630:3604:22;-1:-1:-1;630:3604:22;;;;;;;;;;-1:-1:-1;;630:3604:22;746:30;;630:3604;;;;;;;;2954:6:0;630:3604:22;;;;;;;;;;;;;;;;;;;;6922:40:0;735:10:10;6922:40:0;;;630:3604:22;6976:11:0;:::o;6730:317::-;;-1:-1:-1;630:3604:22;;;;2954:6:0;630:3604:22;;-1:-1:-1;;;;;630:3604:22;;;;;;;;;;;;;;;;;6824:217:0;630:3604:22;;;;;;2954:6:0;630:3604:22;;;;;;;;;;;;;;;;;;;;6922:40:0;735:10:10;6922:40:0;;;630:3604:22;6976:11:0;:::o;1796:162:2:-;-1:-1:-1;;;;;1710:6:2;630:3604:22;;735:10:10;1855:23:2;1851:101;;1796:162::o;1851:101::-;630:3604:22;;;1901:40:2;;;735:10:10;1901:40:2;;;630:3604:22;1901:40:2;630:3604:22;;;-1:-1:-1;;;;;630:3604:22;;;;;;:::o"
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "HONEY_ROUTER_ROLE()": "2ef3f1a5",
              "addRouter(address)": "24ca984e",
              "createPool(address)": "9049f9d2",
              "crossChainCall(address,uint256,address,uint256)": "a628b47f",
              "getEquitoFee()": "5c42132e",
              "getPeer(uint256)": "67ebb6b2",
              "getPool(address)": "bbe4f6db",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "owner()": "8da5cb5b",
              "peers(uint256)": "be4f3e8f",
              "receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)": "879d182d",
              "removeRouter(address)": "6ae0b154",
              "renounceOwnership()": "715018a6",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "setPeers(uint256[],(bytes32,bytes32)[])": "59a1aae1",
              "supportsInterface(bytes4)": "01ffc9a7",
              "toBase64(address)": "ef88e0e1",
              "transferOwnership(address)": "f2fde38b",
              "weth()": "3fc8cef3",
              "withdrawFromPool(address,uint256)": "c1bf9e58"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenMap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessageSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainSelector\",\"type\":\"uint256\"}],\"name\":\"InvalidPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCreated\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RouterAddressCannotBeZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceChainSelector\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReleasedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HONEY_ROUTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"honeyRouter\",\"type\":\"address\"}],\"name\":\"addRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"crossChainCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEquitoFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainSelector\",\"type\":\"uint256\"}],\"name\":\"getPeer\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"sender\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"receiver\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"hashedData\",\"type\":\"bytes32\"}],\"internalType\":\"struct EquitoMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"messageData\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"honeyRouter\",\"type\":\"address\"}],\"name\":\"removeRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"chainSelectors\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64[]\",\"name\":\"addresses\",\"type\":\"tuple[]\"}],\"name\":\"setPeers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toBase64\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidPeer(uint256)\":[{\"params\":{\"chainSelector\":\"The chain selector for which the peer address is requested.\"}}],\"InvalidRouter(address)\":[{\"params\":{\"router\":\"The address of the router that caused the error.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getPeer(uint256)\":{\"details\":\"Throws an error if the chain selector is not found in the mapping.\",\"params\":{\"chainSelector\":\"The chain selector for which the peer address is requested.\"},\"returns\":{\"_0\":\"The peer address for the given chain selector.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"params\":{\"message\":\"The Equito message received.\",\"messageData\":\"The data of the message received.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setPeers(uint256[],(bytes32,bytes32)[])\":{\"params\":{\"addresses\":\"The list of addresses corresponding to the chain selectors.\",\"chainSelectors\":\"The list of chain selectors.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidLength()\":[{\"notice\":\"Thrown when the lengths of arrays are invalid.\"}],\"InvalidMessageSender()\":[{\"notice\":\"Thrown when the sender of a message is invalid.\"}],\"InvalidPeer(uint256)\":[{\"notice\":\"Thrown when a Peer address is not found in the mapping, given a chain selector.\"}],\"InvalidRouter(address)\":[{\"notice\":\"Thrown when the router address is invalid.\"}],\"RouterAddressCannotBeZero()\":[{\"notice\":\"Thrown when the router address is zero.\"}]},\"kind\":\"user\",\"methods\":{\"getPeer(uint256)\":{\"notice\":\"Returns the peer address for a given chain selector.\"},\"receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"notice\":\"Receives a cross-chain message from the Router Contract.         It is a wrapper function for the `_receiveMessage` functions, that need to be overridden.         Only the Router Contract is allowed to call this function.\"},\"setPeers(uint256[],(bytes32,bytes32)[])\":{\"notice\":\"Allows the owner to set the peer addresses for different chain selectors.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/HoneyFactory.sol\":\"HoneyFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/lib/EquitoApp.sol\":{\"keccak256\":\"0x3fd9cacecc2f0ada3e3f72e06a7de12dd9db39982c4981d9c5fa55b5979426fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41c4bb2c7196db2d86b748a5faf4a202ba777221b0221cdfef725a6b80eefc42\",\"dweb:/ipfs/QmSJqvPFG8Cg9ydUardJ2yFwAGAoFtZgn8xf15FHW6R3Qu\"]},\"contracts/lib/interfaces/IEquitoReceiver.sol\":{\"keccak256\":\"0xb1a49c5d13767c28a6e85b5885875ae6d258889418ece768df5fe4eaf5be4b8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5d697503f7864da23d917e1d37b8c41fef312bf5abb9c2e117f91fce83b17da\",\"dweb:/ipfs/QmeGYrLkcuhVWDQiBLcnx8u59cbSRqcFCrvj21CTz1Kd1E\"]},\"contracts/lib/interfaces/IRouter.sol\":{\"keccak256\":\"0x24b22f083be3aa163f88bdaae0587ea376792ad1bc55d841997c26b1e8ced957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21dd2b7a66e183e060e53bc00e63707c25dddd9241c384c538dcb87923253f06\",\"dweb:/ipfs/QmVTHUby1iTKLwUyJkBopSKQkRaQsnPa6YAcFRuVTUzknV\"]},\"contracts/lib/libraries/EquitoMessageLibrary.sol\":{\"keccak256\":\"0x386baff13825e343923a5b485c4d52b7abddac795593a1e404c78cb628f21f83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d529602c7b277ac9b549079ae5834af55394d2366f9da6ba76341ae69c452fc\",\"dweb:/ipfs/QmdHQYSJF6VbYCpo6xwN43JQGAUQRGzo7H1BWyqbyfV4GF\"]},\"contracts/lib/libraries/Errors.sol\":{\"keccak256\":\"0xaa84c699e7fbd3b4cc94b826b886be9826840e3777d3fce856f493a8958e5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ba3e0894f331050f7d0ea9c8f34c5be6bbcef5fadba162ec7f0c69a0aae0e57\",\"dweb:/ipfs/QmWwttocsizy87A7eaDUSRth8f9DHoW8conNiw1iFAeh94\"]},\"contracts/src/HoneyErrors.sol\":{\"keccak256\":\"0xd499f330b12eac68b60213dc06cb857ca6dae670cb7e83304a03fe8595c685c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d0242cf4ceb86bca689e570bfbbb77fde41f8ab934b35691920b88155d6ced3\",\"dweb:/ipfs/Qmc15GDFempmUTg9ZahbjycsPmkXvRphx244CPeb3odWSH\"]},\"contracts/src/HoneyFactory.sol\":{\"keccak256\":\"0x140605c5a83130a02fe1f0bb167f88f1730dca17ebffbcb8f6ae3e2ed7666d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53dfc6ace582ed4ccebf7f9948235a9b1cd4253de4debe2a3bd71e0c42126407\",\"dweb:/ipfs/QmdQ3TuTe22JmwRbnhjQ59jfobKP74B1t1MvvgPLQ4ewpy\"]},\"contracts/src/interfaces/IHoneyETHPool.sol\":{\"keccak256\":\"0xd939b1de51bfdfde3d272ee4b3b6c10665267f4e0dc2d2f9b4c26873df77f8c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f37a152302e928be8d725306c0e97fd9154d10d32097aa1abc9eb75ffefdd4cb\",\"dweb:/ipfs/QmXk1Aczzo1HzdJgFKvKPLnF8XWD1y7trjM9mzA7qCjn8J\"]},\"contracts/src/interfaces/IHoneyFactory.sol\":{\"keccak256\":\"0xf375e60efb31c933035f70e6c37596ce7c038ec0f59d4ff00a438d64ab0b7725\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef616abd4c127e9ac0397b3e43929d454b46aadbde944a880ecb353e925a42d4\",\"dweb:/ipfs/QmV926RFns4LfPo8WfzqYML1eHrvxwLSKHZnp9QBCsvUoU\"]},\"contracts/src/interfaces/IHoneyPool.sol\":{\"keccak256\":\"0x2685f6643c7ab6db1870e1d5609f529a8d29215c2136a1dc19c0186b5ab8ace1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://360dbe7dfab9f0edf59b457f8985bffc8c4fce8896281fa6e49ac08d19755f82\",\"dweb:/ipfs/QmeG9cfHrCS6Gpzs5U85i6ncPWd9niQiVhFdHYBD9B9AK6\"]},\"contracts/src/interfaces/ITokenMap.sol\":{\"keccak256\":\"0xc91f0d8aa37d1313133bd087a81ab4472f2beeb169603aa0f3ee8d35c296ee7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://185045936f4d9204ed3b38c6490d4a7f8108eeaa558fd9f8b78989f430b54d67\",\"dweb:/ipfs/QmRMzokYioC2UWDMqH1R8qQH4JY1xmwMBD1ANpsgv8azuh\"]},\"contracts/src/pools/HoneyERC20Pool.sol\":{\"keccak256\":\"0xebe135162a336843f41d96b18958a1824e8c7e0006d316aeb3f9cd46adfb45f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d28f866360923941a23d197c8530e149042a584258353c943b61e1910c69995a\",\"dweb:/ipfs/QmTR6B1Y6paTMKQThHQPD732XjctPLMHt37dLsKEcNUk55\"]},\"contracts/src/pools/HoneyETHPool.sol\":{\"keccak256\":\"0x46c1cec9efb4413a906daab4d5e0159ec8c1e0f98e707b203288eb0ac3239d3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93578d25d5a731a942809a723f7b89ec0aec0ad5b9887dcec1b6336c25b321ff\",\"dweb:/ipfs/QmXsSPrhe9sscVn9bmF1qNX2Dpe1d62FnwGZECWsBhmFXj\"]}},\"version\":1}"
        }
      },
      "contracts/src/HoneyRouter01.sol": {
        "HoneyRouter01": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_tokenMap",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_router",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_treasury",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "AddressEmptyCode",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "AddressInsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FailedInnerCall",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidLength",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidMessageSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "chainSelector",
                  "type": "uint256"
                }
              ],
              "name": "InvalidPeer",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "router",
                  "type": "address"
                }
              ],
              "name": "InvalidRouter",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "RouterAddressCannotBeZero",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "TREASURY",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                }
              ],
              "name": "bestRouter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "routerURI",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct IHoneyExecutor.Router",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getEquitoFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "chainSelector",
                  "type": "uint256"
                }
              ],
              "name": "getPeer",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "lower",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "upper",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct bytes64",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "peers",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "lower",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "upper",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "blockNumber",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sourceChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "sender",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "destinationChainSelector",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "lower",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "bytes32",
                          "name": "upper",
                          "type": "bytes32"
                        }
                      ],
                      "internalType": "struct bytes64",
                      "name": "receiver",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "hashedData",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct EquitoMessage",
                  "name": "message",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "messageData",
                  "type": "bytes"
                }
              ],
              "name": "receiveMessage",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "chainSelectors",
                  "type": "uint256[]"
                },
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "lower",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "upper",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct bytes64[]",
                  "name": "addresses",
                  "type": "tuple[]"
                }
              ],
              "name": "setPeers",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "destinationChainSelector",
                  "type": "uint256"
                }
              ],
              "name": "swapETHToTokens",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "destinationChainSelector",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensToETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "destinationChainSelector",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensToTokens",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "value",
                  "type": "address"
                }
              ],
              "name": "toBase64",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "lower",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "upper",
                      "type": "bytes32"
                    }
                  ],
                  "internalType": "struct bytes64",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unPause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newExecutor",
                  "type": "address"
                }
              ],
              "name": "updateExecutor",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newFactory",
                  "type": "address"
                }
              ],
              "name": "updateFactory",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 392,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_grantRole": {
                  "entryPoint": 413,
                  "id": 256,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {
                "contracts/src/lib/HoneyFeeMath.sol": {
                  "HoneyFeeMath": [
                    {
                      "length": 20,
                      "start": 3124
                    }
                  ]
                }
              },
              "object": "60a0346200016d57601f62001e2838819003918201601f19168301916001600160401b0383118484101762000172578084926060946040528339810103126200016d576200004d8162000188565b906200006a6040620000626020840162000188565b920162000188565b91600154331562000154576001600160a81b0319811633600881811b610100600160a81b0316929092176001556040516001600160a01b0395909386939192911c83167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3169081156200014557506080528160018060a01b031993168360035416176003551690600454161760045562000108336200019d565b50604051611bf990816200022f8239608051818181610407015281816106f80152818161084601528181610efa0152818161113101526118a90152f35b635008268360e01b8152600490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200016d57565b6001600160a01b031660008181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205490919060ff166200022a57818052816020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b509056fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a71461144657508063248a9ca31461141d5780632d2c5565146113f55780632f2ff15d146113cc57806336568abe1461136c578381634cbb45051461108e5750806359a1aae114610f765780635c42132e14610ec65780635c975abb14610ea257806361ee103114610d0a57806367ebb6b214610c5e578063715018a614610bf257806374936c1614610ba65780638456cb5914610b4c578063879d182d146107e95780638da5cb5b146107be57806391d1485414610779578063a1e8320914610630578063a217fddf14610615578063a4c021e9146103db578063be4f3e8f146103aa578063d547741f1461036c578063d9f165dc1461031d578063ef88e0e114610295578063f2fde38b146101c85763f7b188a51461014357600080fd5b346101c457826003193601126101c45761015b611638565b6001549060ff82161561019d575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b82517f8dfc202b000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b50346101c45760203660031901126101c4576101e26114fb565b6101ea6119bf565b6001600160a01b039182821693841561026657505074ffffffffffffffffffffffffffffffffffffffff006001549160081b1674ffffffffffffffffffffffffffffffffffffffff001982161760015560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b908560249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b5050346103195760203660031901126103195790610315916102b56114fb565b916000602083516102c58161156f565b82815201526000602083516102d98161156f565b82815201526001600160a01b038251936102f28561156f565b168352602083015251918291829190916020806040830194805184520151910152565b0390f35b5080fd5b8334610369576020366003190112610369576001600160a01b0361033f6114fb565b610347611638565b1673ffffffffffffffffffffffffffffffffffffffff19600554161760055580f35b80fd5b5090346101c457806003193601126101c4576103a691356103a160016103906114e5565b9383875286602052862001546116a9565b61174e565b5080f35b50346101c45760203660031901126101c4579181923581526002602052206001815491015482519182526020820152f35b5060603660031901126101c4576103f06114fb565b6044356103fb6117c4565b6001600160a01b0393847f0000000000000000000000000000000000000000000000000000000000000000168151634e4bc84760e01b80825260209182818981875afa908115610563579086918b916105e4575b500361056d5734965b8289600654169960648751809b81937fd219d1f30000000000000000000000000000000000000000000000000000000083528c169d8e8784015260243560248401523060448401525af1978815610563578a98610532575b5090829185518095819382525afa92831561052957509083929188926104f3575b5050036104e85750506104e5913390611a1a565b80f35b6104e5935033611866565b8193508092503d8311610522575b61050b81836115a1565b8101031261051d5781905138806104d1565b600080fd5b503d610501565b513d89823e3d90fd5b919097508282813d831161055c575b61054b81836115a1565b8101031261051d57905196826104b0565b503d610541565b85513d8c823e3d90fd5b8351631711922960e31b815230888201528281602481875afa908115610563578a916105b7575b5034033481116105a45796610458565b60248a60118a634e487b7160e01b835252fd5b90508281813d83116105dd575b6105ce81836115a1565b8101031261051d575138610594565b503d6105c4565b809250848092503d831161060e575b6105fd81836115a1565b8101031261051d578590513861044f565b503d6105f3565b50503461031957816003193601126103195751908152602090f35b509060a03660031901126101c4576106466114fb565b9060243592610653611511565b91608435916106606117c4565b866001600160a01b038096169561067d888260065416338a6117fa565b8060065416978451977ffc7a6a230000000000000000000000000000000000000000000000000000000089528489015260248801528086169788604489015260643560648901523060848901528760a48160209586945af196871561076f578997610740575b508190845193848092634e4bc84760e01b82527f0000000000000000000000000000000000000000000000000000000000000000165afa92831561052957509083929188926104f3575050036104e85750506104e5913390611a1a565b9096508181813d8311610768575b61075881836115a1565b8101031261051d575195816106e3565b503d61074e565b84513d8b823e3d90fd5b50346101c457816003193601126101c4576001600160a01b038260209461079e6114e5565b93358152808652209116600052825260ff81600020541690519015158152f35b5050346103195781600319360112610319576020906001600160a01b0360015460081c169051908152f35b50913660031901610120811261031957610100136103695767ffffffffffffffff610104358181116101c457366023820112156101c45780850135828111610b48576024908201923682850111610b44576001600160a01b0391827f0000000000000000000000000000000000000000000000000000000000000000163303610b185780359081875260209560028752868989208a516108888161156f565b6001825492838352015492839101526044351490811591610b0b575b50156108d2578989517f7fee69a1000000000000000000000000000000000000000000000000000000008152fd5b906060868b939a999a0312610b075761095593876108f1838901611a06565b94606461090060448b01611a06565b990135958880875416918d51998a94859384937fb464631b000000000000000000000000000000000000000000000000000000008552168a8401602090939291936001600160a01b0360408201951681520152565b03915afa948515610afd578a95610ac2575b50856005541690813b15610abe578a8a5180937fc1bf9e580000000000000000000000000000000000000000000000000000000082528183816109c38b8d8c8401602090939291936001600160a01b0360408201951681520152565b03925af18015610ab457610a8f575b505090879182519384927fdbceb0050000000000000000000000000000000000000000000000000000000084528301528173__$cee652c4e9f55bc124e1380243e2f45138$__5af4948515610a855787968896610a4a575b5050506104e5948280610a409316941684611a1a565b6003541690611a1a565b91965091945085813d8111610a7e575b610a6481836115a1565b81010312610a7a57845194015192848280610a2a565b8580fd5b503d610a5a565b86513d89823e3d90fd5b819a929a11610aa257885297878a6109d2565b5060418992634e487b7160e01b835252fd5b8a513d8d823e3d90fd5b8a80fd5b9094508781813d8311610af6575b610ada81836115a1565b81010312610af257610aeb906115c3565b938a610967565b8980fd5b503d610ad0565b89513d8c823e3d90fd5b8880fd5b90506064351415386108a4565b86517fd7f7333400000000000000000000000000000000000000000000000000000000815233818a0152fd5b8480fd5b8380fd5b50503461031957816003193601126103195760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610b8a611638565b610b926117c4565b600160ff198154161760015551338152a180f35b8334610369576020366003190112610369576001600160a01b03610bc86114fb565b610bd0611638565b1673ffffffffffffffffffffffffffffffffffffffff19600654161760065580f35b8334610369578060031936011261036957610c0b6119bf565b806001600160a01b0360015474ffffffffffffffffffffffffffffffffffffffff0019811660015560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5082903461031957602036600319011261031957828135928060208351610c848161156f565b828152015283815260026020522091835192610c9f8461156f565b6001815491828652015490816020860152159081610d01575b50610cd25783518351815260208085015190820152604090f35b602492508351917f78d0dbfc000000000000000000000000000000000000000000000000000000008352820152fd5b90501585610cb8565b50919034610319576060806003193601126101c457610d276114e5565b90610d30611511565b9284815193610d3e8561156f565b8385528360208096015260646001600160a01b039889978880600654169187519c8d9687957f61ee10310000000000000000000000000000000000000000000000000000000087528035908701521660248501521660448301525afa938415610e98578580978196610ded575b50509181610315959493610dd9935198899889521684880152818188015284519187015260a086019061154a565b910151838203605f1901608085015261154a565b9650965093503d8087873e610e0281876115a1565b85018286820312610e9457855190610e1b8588016115c3565b968381015167ffffffffffffffff91828211610abe57018481840312610af257845199610e478b61156f565b81518381116103195784610e5c9184016115f3565b8b52878201519283116103695750610dd994926103159897969492610e8192016115f3565b858a015296979581935094919394610dab565b8680fd5b81513d87823e3d90fd5b50503461031957816003193601126103195760209060ff6001541690519015158152f35b5090346101c457826003193601126101c457805191631711922960e31b835230908301526020826024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa918215610f6c578392610f34575b6020838351908152f35b9091506020813d602011610f64575b81610f50602093836115a1565b810103126101c45760209250519038610f2a565b3d9150610f43565b81513d85823e3d90fd5b5090346101c457806003193601126101c45781359167ffffffffffffffff808411610b445736602385011215610b44578382013592818411610a7a5760249260059236858760051b8901011161108a57843591818311610b075736602384011215610b075782810135918211610b075760069136878260061b86010111610af257610fff6119bf565b6110076119bf565b80880361106257895b88811061101b578a80f35b818110156110505780871b8a018801358b526002602052858b2081851b86018981013582556044013560019182015501611010565b878b603285634e487b7160e01b835252fd5b5083517f947d5a84000000000000000000000000000000000000000000000000000000008152fd5b8780fd5b919050608036600319011261031957816110a66114fb565b60243592606435916110b66117c4565b6001600160a01b03809116946110d281836006541633896117fa565b8160065416908851967f95eb087000000000000000000000000000000000000000000000000000000000885284880152602487015260443560448701523060648701528560848160209788945af1948515611362578695611333575b507f0000000000000000000000000000000000000000000000000000000000000000168651634e4bc84760e01b815284818481855afa801561132957849188916112f8575b50036111a857505050508180809281811561119f575b3390f115611195575080f35b51903d90823e3d90fd5b506108fc611189565b91945091949283519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8783015233858301526060820152606081526080810181811067ffffffffffffffff8211176112e557808552631711922960e31b81523060848301528681602481865afa9081156112db57908793929189916112a9575b5060019394878a5260028652611266878b20938851998a978896879563dc20313760e01b875281549087015201546024850152604484015260806064840152608483019061154a565b03925af19081156112a0575061127b57505080f35b813d8311611299575b61128e81836115a1565b810103126103695780f35b503d611284565b513d85823e3d90fd5b93905081813d83116112d4575b6112c081876115a1565b8101031261108a579151869290600161121d565b503d6112b6565b85513d8a823e3d90fd5b602488604186634e487b7160e01b835252fd5b809250868092503d8311611322575b61131181836115a1565b81010312610e945783905138611173565b503d611307565b88513d89823e3d90fd5b9094508381813d831161135b575b61134b81836115a1565b81010312610a7a5751933861112e565b503d611341565b87513d88823e3d90fd5b509190346103195780600319360112610319576113876114e5565b90336001600160a01b038316036113a457506103a691923561174e565b8390517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b5090346101c457806003193601126101c4576103a691356113f060016103906114e5565b6116cf565b5050346103195781600319360112610319576020906001600160a01b03600354169051908152f35b50346101c45760203660031901126101c457816020936001923581528085522001549051908152f35b925050346101c45760203660031901126101c457357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101c457602092507f7965db0b0000000000000000000000000000000000000000000000000000000081149081156114bb575b5015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386114b4565b602435906001600160a01b038216820361051d57565b600435906001600160a01b038216820361051d57565b604435906001600160a01b038216820361051d57565b60005b83811061153a5750506000910152565b818101518382015260200161152a565b9060209161156381518092818552858086019101611527565b601f01601f1916010190565b6040810190811067ffffffffffffffff82111761158b57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761158b57604052565b51906001600160a01b038216820361051d57565b67ffffffffffffffff811161158b57601f01601f191660200190565b81601f8201121561051d578051611609816115d7565b9261161760405194856115a1565b8184526020828401011161051d576116359160208085019101611527565b90565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205460ff16156116725750565b604490604051907fe2517d3f0000000000000000000000000000000000000000000000000000000082523360048301526024820152fd5b80600052600060205260406000203360005260205260ff60406000205416156116725750565b90600091808352826020526001600160a01b036040842092169182845260205260ff6040842054161560001461174957808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b90600091808352826020526001600160a01b036040842092169182845260205260ff6040842054166000146117495780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b60ff600154166117d057565b60046040517fd93c0665000000000000000000000000000000000000000000000000000000008152fd5b6040517f23b872dd0000000000000000000000000000000000000000000000000000000060208201526001600160a01b03928316602482015292909116604483015260648201929092526118649161185f82608481015b03601f1981018452836115a1565b611a6c565b565b604080516001600160a01b039485166020808301919091529290941684820152606080850195909552938352929061189f6080846115a1565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168251631711922960e31b81523060048201528581602481855afa9081156119b4579086939291600091611983575b5060019083600052600285528560002061194187519889968795869463dc20313760e01b86528054600487015201546024850152604484015260806064840152608483019061154a565b03925af19081156119795750611955575050565b813d8311611972575b61196881836115a1565b8101031261051d57565b503d61195e565b513d6000823e3d90fd5b84819592503d83116119ad575b61199a81836115a1565b8101031261051d576001869351906118f7565b503d611990565b84513d6000823e3d90fd5b6001600160a01b0360015460081c1633036119d657565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b35906001600160a01b038216820361051d57565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000060208201526001600160a01b03909216602483015260448201929092526118649161185f8260648101611851565b6001600160a01b031690611ab7600080836020829551910182875af13d15611b28573d90611a99826115d7565b91611aa760405193846115a1565b82523d84602084013e5b84611b30565b908151918215159283611b00575b505050611acf5750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b8192935090602091810103126103195760200151908115918215036103695750388080611ac5565b606090611ab1565b90611b6f5750805115611b4557805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580611bba575b611b80575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15611b7856fea264697066735822122088b8aee2ac034802efdc5ca67be9c2f252433902f04fc8983996c87232b3b6aa64736f6c63430008180033",
              "opcodes": "PUSH1 0xA0 CALLVALUE PUSH3 0x16D JUMPI PUSH1 0x1F PUSH3 0x1E28 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x172 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x16D JUMPI PUSH3 0x4D DUP2 PUSH3 0x188 JUMP JUMPDEST SWAP1 PUSH3 0x6A PUSH1 0x40 PUSH3 0x62 PUSH1 0x20 DUP5 ADD PUSH3 0x188 JUMP JUMPDEST SWAP3 ADD PUSH3 0x188 JUMP JUMPDEST SWAP2 PUSH1 0x1 SLOAD CALLER ISZERO PUSH3 0x154 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP4 DUP7 SWAP4 SWAP2 SWAP3 SWAP2 SHR DUP4 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 AND SWAP1 DUP2 ISZERO PUSH3 0x145 JUMPI POP PUSH1 0x80 MSTORE DUP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP4 AND DUP4 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE AND SWAP1 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH3 0x108 CALLER PUSH3 0x19D JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1BF9 SWAP1 DUP2 PUSH3 0x22F DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x407 ADD MSTORE DUP2 DUP2 PUSH2 0x6F8 ADD MSTORE DUP2 DUP2 PUSH2 0x846 ADD MSTORE DUP2 DUP2 PUSH2 0xEFA ADD MSTORE DUP2 DUP2 PUSH2 0x1131 ADD MSTORE PUSH2 0x18A9 ADD MSTORE RETURN JUMPDEST PUSH4 0x50082683 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x16D JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x22A JUMPI DUP2 DUP1 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1446 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x141D JUMPI DUP1 PUSH4 0x2D2C5565 EQ PUSH2 0x13F5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x13CC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x136C JUMPI DUP4 DUP2 PUSH4 0x4CBB4505 EQ PUSH2 0x108E JUMPI POP DUP1 PUSH4 0x59A1AAE1 EQ PUSH2 0xF76 JUMPI DUP1 PUSH4 0x5C42132E EQ PUSH2 0xEC6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xEA2 JUMPI DUP1 PUSH4 0x61EE1031 EQ PUSH2 0xD0A JUMPI DUP1 PUSH4 0x67EBB6B2 EQ PUSH2 0xC5E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBF2 JUMPI DUP1 PUSH4 0x74936C16 EQ PUSH2 0xBA6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB4C JUMPI DUP1 PUSH4 0x879D182D EQ PUSH2 0x7E9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x779 JUMPI DUP1 PUSH4 0xA1E83209 EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xA4C021E9 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xBE4F3E8F EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xD9F165DC EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xEF88E0E1 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C8 JUMPI PUSH4 0xF7B188A5 EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C4 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x15B PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x19D JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x1E2 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP4 DUP5 ISZERO PUSH2 0x266 JUMPI POP POP PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x1 SLOAD SWAP2 PUSH1 0x8 SHL AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT DUP3 AND OR PUSH1 0x1 SSTORE PUSH1 0x8 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 DUP6 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI SWAP1 PUSH2 0x315 SWAP2 PUSH2 0x2B5 PUSH2 0x14FB JUMP JUMPDEST SWAP2 PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD PUSH2 0x2C5 DUP2 PUSH2 0x156F JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD PUSH2 0x2D9 DUP2 PUSH2 0x156F JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 MLOAD SWAP4 PUSH2 0x2F2 DUP6 PUSH2 0x156F JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP1 PUSH1 0x40 DUP4 ADD SWAP5 DUP1 MLOAD DUP5 MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x33F PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x347 PUSH2 0x1638 JUMP JUMPDEST AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x3A6 SWAP2 CALLDATALOAD PUSH2 0x3A1 PUSH1 0x1 PUSH2 0x390 PUSH2 0x14E5 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x174E JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI SWAP2 DUP2 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x3F0 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x3FB PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 PUSH32 0x0 AND DUP2 MLOAD PUSH4 0x4E4BC847 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP2 DUP10 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x563 JUMPI SWAP1 DUP7 SWAP2 DUP12 SWAP2 PUSH2 0x5E4 JUMPI JUMPDEST POP SUB PUSH2 0x56D JUMPI CALLVALUE SWAP7 JUMPDEST DUP3 DUP10 PUSH1 0x6 SLOAD AND SWAP10 PUSH1 0x64 DUP8 MLOAD DUP1 SWAP12 DUP2 SWAP4 PUSH32 0xD219D1F300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP13 AND SWAP14 DUP15 DUP8 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP5 ADD MSTORE ADDRESS PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP8 DUP9 ISZERO PUSH2 0x563 JUMPI DUP11 SWAP9 PUSH2 0x532 JUMPI JUMPDEST POP SWAP1 DUP3 SWAP2 DUP6 MLOAD DUP1 SWAP6 DUP2 SWAP4 DUP3 MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x529 JUMPI POP SWAP1 DUP4 SWAP3 SWAP2 DUP9 SWAP3 PUSH2 0x4F3 JUMPI JUMPDEST POP POP SUB PUSH2 0x4E8 JUMPI POP POP PUSH2 0x4E5 SWAP2 CALLER SWAP1 PUSH2 0x1A1A JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH2 0x4E5 SWAP4 POP CALLER PUSH2 0x1866 JUMP JUMPDEST DUP2 SWAP4 POP DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x522 JUMPI JUMPDEST PUSH2 0x50B DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI DUP2 SWAP1 MLOAD CODESIZE DUP1 PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x501 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP8 POP DUP3 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x55C JUMPI JUMPDEST PUSH2 0x54B DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI SWAP1 MLOAD SWAP7 DUP3 PUSH2 0x4B0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x541 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0x17119229 PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS DUP9 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x563 JUMPI DUP11 SWAP2 PUSH2 0x5B7 JUMPI JUMPDEST POP CALLVALUE SUB CALLVALUE DUP2 GT PUSH2 0x5A4 JUMPI SWAP7 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x24 DUP11 PUSH1 0x11 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x5DD JUMPI JUMPDEST PUSH2 0x5CE DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI MLOAD CODESIZE PUSH2 0x594 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5C4 JUMP JUMPDEST DUP1 SWAP3 POP DUP5 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x60E JUMPI JUMPDEST PUSH2 0x5FD DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI DUP6 SWAP1 MLOAD CODESIZE PUSH2 0x44F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5F3 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x646 PUSH2 0x14FB JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x653 PUSH2 0x1511 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH2 0x660 PUSH2 0x17C4 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP7 AND SWAP6 PUSH2 0x67D DUP9 DUP3 PUSH1 0x6 SLOAD AND CALLER DUP11 PUSH2 0x17FA JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD AND SWAP8 DUP5 MLOAD SWAP8 PUSH32 0xFC7A6A2300000000000000000000000000000000000000000000000000000000 DUP10 MSTORE DUP5 DUP10 ADD MSTORE PUSH1 0x24 DUP9 ADD MSTORE DUP1 DUP7 AND SWAP8 DUP9 PUSH1 0x44 DUP10 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP10 ADD MSTORE ADDRESS PUSH1 0x84 DUP10 ADD MSTORE DUP8 PUSH1 0xA4 DUP2 PUSH1 0x20 SWAP6 DUP7 SWAP5 GAS CALL SWAP7 DUP8 ISZERO PUSH2 0x76F JUMPI DUP10 SWAP8 PUSH2 0x740 JUMPI JUMPDEST POP DUP2 SWAP1 DUP5 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x4E4BC847 PUSH1 0xE0 SHL DUP3 MSTORE PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x529 JUMPI POP SWAP1 DUP4 SWAP3 SWAP2 DUP9 SWAP3 PUSH2 0x4F3 JUMPI POP POP SUB PUSH2 0x4E8 JUMPI POP POP PUSH2 0x4E5 SWAP2 CALLER SWAP1 PUSH2 0x1A1A JUMP JUMPDEST SWAP1 SWAP7 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x768 JUMPI JUMPDEST PUSH2 0x758 DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI MLOAD SWAP6 DUP2 PUSH2 0x6E3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x74E JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C4 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 PUSH1 0x20 SWAP5 PUSH2 0x79E PUSH2 0x14E5 JUMP JUMPDEST SWAP4 CALLDATALOAD DUP2 MSTORE DUP1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD PUSH1 0x8 SHR AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x120 DUP2 SLT PUSH2 0x319 JUMPI PUSH2 0x100 SGT PUSH2 0x369 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x104 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1C4 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1C4 JUMPI DUP1 DUP6 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0xB48 JUMPI PUSH1 0x24 SWAP1 DUP3 ADD SWAP3 CALLDATASIZE DUP3 DUP6 ADD GT PUSH2 0xB44 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH32 0x0 AND CALLER SUB PUSH2 0xB18 JUMPI DUP1 CALLDATALOAD SWAP1 DUP2 DUP8 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE DUP7 DUP10 DUP10 KECCAK256 DUP11 MLOAD PUSH2 0x888 DUP2 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x1 DUP3 SLOAD SWAP3 DUP4 DUP4 MSTORE ADD SLOAD SWAP3 DUP4 SWAP2 ADD MSTORE PUSH1 0x44 CALLDATALOAD EQ SWAP1 DUP2 ISZERO SWAP2 PUSH2 0xB0B JUMPI JUMPDEST POP ISZERO PUSH2 0x8D2 JUMPI DUP10 DUP10 MLOAD PUSH32 0x7FEE69A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x60 DUP7 DUP12 SWAP4 SWAP11 SWAP10 SWAP11 SUB SLT PUSH2 0xB07 JUMPI PUSH2 0x955 SWAP4 DUP8 PUSH2 0x8F1 DUP4 DUP10 ADD PUSH2 0x1A06 JUMP JUMPDEST SWAP5 PUSH1 0x64 PUSH2 0x900 PUSH1 0x44 DUP12 ADD PUSH2 0x1A06 JUMP JUMPDEST SWAP10 ADD CALLDATALOAD SWAP6 DUP9 DUP1 DUP8 SLOAD AND SWAP2 DUP14 MLOAD SWAP10 DUP11 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH32 0xB464631B00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND DUP11 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xAFD JUMPI DUP11 SWAP6 PUSH2 0xAC2 JUMPI JUMPDEST POP DUP6 PUSH1 0x5 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0xABE JUMPI DUP11 DUP11 MLOAD DUP1 SWAP4 PUSH32 0xC1BF9E5800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP4 DUP2 PUSH2 0x9C3 DUP12 DUP14 DUP13 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xAB4 JUMPI PUSH2 0xA8F JUMPI JUMPDEST POP POP SWAP1 DUP8 SWAP2 DUP3 MLOAD SWAP4 DUP5 SWAP3 PUSH32 0xDBCEB00500000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD MSTORE DUP2 PUSH20 0x0 GAS DELEGATECALL SWAP5 DUP6 ISZERO PUSH2 0xA85 JUMPI DUP8 SWAP7 DUP9 SWAP7 PUSH2 0xA4A JUMPI JUMPDEST POP POP POP PUSH2 0x4E5 SWAP5 DUP3 DUP1 PUSH2 0xA40 SWAP4 AND SWAP5 AND DUP5 PUSH2 0x1A1A JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 SWAP7 POP SWAP2 SWAP5 POP DUP6 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0xA7E JUMPI JUMPDEST PUSH2 0xA64 DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA7A JUMPI DUP5 MLOAD SWAP5 ADD MLOAD SWAP3 DUP5 DUP3 DUP1 PUSH2 0xA2A JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xA5A JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 SWAP11 SWAP3 SWAP11 GT PUSH2 0xAA2 JUMPI DUP9 MSTORE SWAP8 DUP8 DUP11 PUSH2 0x9D2 JUMP JUMPDEST POP PUSH1 0x41 DUP10 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST SWAP1 SWAP5 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xAF6 JUMPI JUMPDEST PUSH2 0xADA DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAF2 JUMPI PUSH2 0xAEB SWAP1 PUSH2 0x15C3 JUMP JUMPDEST SWAP4 DUP11 PUSH2 0x967 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xAD0 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x64 CALLDATALOAD EQ ISZERO CODESIZE PUSH2 0x8A4 JUMP JUMPDEST DUP7 MLOAD PUSH32 0xD7F7333400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP2 DUP11 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0xB8A PUSH2 0x1638 JUMP JUMPDEST PUSH2 0xB92 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBC8 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0xBD0 PUSH2 0x1638 JUMP JUMPDEST AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x369 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x369 JUMPI PUSH2 0xC0B PUSH2 0x19BF JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT DUP2 AND PUSH1 0x1 SSTORE PUSH1 0x8 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI DUP3 DUP2 CALLDATALOAD SWAP3 DUP1 PUSH1 0x20 DUP4 MLOAD PUSH2 0xC84 DUP2 PUSH2 0x156F JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE KECCAK256 SWAP2 DUP4 MLOAD SWAP3 PUSH2 0xC9F DUP5 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x1 DUP2 SLOAD SWAP2 DUP3 DUP7 MSTORE ADD SLOAD SWAP1 DUP2 PUSH1 0x20 DUP7 ADD MSTORE ISZERO SWAP1 DUP2 PUSH2 0xD01 JUMPI JUMPDEST POP PUSH2 0xCD2 JUMPI DUP4 MLOAD DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP DUP4 MLOAD SWAP2 PUSH32 0x78D0DBFC00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP6 PUSH2 0xCB8 JUMP JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x60 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0xD27 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 PUSH2 0xD30 PUSH2 0x1511 JUMP JUMPDEST SWAP3 DUP5 DUP2 MLOAD SWAP4 PUSH2 0xD3E DUP6 PUSH2 0x156F JUMP JUMPDEST DUP4 DUP6 MSTORE DUP4 PUSH1 0x20 DUP1 SWAP7 ADD MSTORE PUSH1 0x64 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 SWAP8 DUP9 DUP1 PUSH1 0x6 SLOAD AND SWAP2 DUP8 MLOAD SWAP13 DUP14 SWAP7 DUP8 SWAP6 PUSH32 0x61EE103100000000000000000000000000000000000000000000000000000000 DUP8 MSTORE DUP1 CALLDATALOAD SWAP1 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE AND PUSH1 0x44 DUP4 ADD MSTORE GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0xE98 JUMPI DUP6 DUP1 SWAP8 DUP2 SWAP7 PUSH2 0xDED JUMPI JUMPDEST POP POP SWAP2 DUP2 PUSH2 0x315 SWAP6 SWAP5 SWAP4 PUSH2 0xDD9 SWAP4 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE AND DUP5 DUP9 ADD MSTORE DUP2 DUP2 DUP9 ADD MSTORE DUP5 MLOAD SWAP2 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x154A JUMP JUMPDEST SWAP2 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x5F NOT ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x154A JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP4 POP RETURNDATASIZE DUP1 DUP8 DUP8 RETURNDATACOPY PUSH2 0xE02 DUP2 DUP8 PUSH2 0x15A1 JUMP JUMPDEST DUP6 ADD DUP3 DUP7 DUP3 SUB SLT PUSH2 0xE94 JUMPI DUP6 MLOAD SWAP1 PUSH2 0xE1B DUP6 DUP9 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP7 DUP4 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0xABE JUMPI ADD DUP5 DUP2 DUP5 SUB SLT PUSH2 0xAF2 JUMPI DUP5 MLOAD SWAP10 PUSH2 0xE47 DUP12 PUSH2 0x156F JUMP JUMPDEST DUP2 MLOAD DUP4 DUP2 GT PUSH2 0x319 JUMPI DUP5 PUSH2 0xE5C SWAP2 DUP5 ADD PUSH2 0x15F3 JUMP JUMPDEST DUP12 MSTORE DUP8 DUP3 ADD MLOAD SWAP3 DUP4 GT PUSH2 0x369 JUMPI POP PUSH2 0xDD9 SWAP5 SWAP3 PUSH2 0x315 SWAP9 SWAP8 SWAP7 SWAP5 SWAP3 PUSH2 0xE81 SWAP3 ADD PUSH2 0x15F3 JUMP JUMPDEST DUP6 DUP11 ADD MSTORE SWAP7 SWAP8 SWAP6 DUP2 SWAP4 POP SWAP5 SWAP2 SWAP4 SWAP5 PUSH2 0xDAB JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C4 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI DUP1 MLOAD SWAP2 PUSH4 0x17119229 PUSH1 0xE3 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xF6C JUMPI DUP4 SWAP3 PUSH2 0xF34 JUMPI JUMPDEST PUSH1 0x20 DUP4 DUP4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF64 JUMPI JUMPDEST DUP2 PUSH2 0xF50 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1C4 JUMPI PUSH1 0x20 SWAP3 POP MLOAD SWAP1 CODESIZE PUSH2 0xF2A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF43 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT PUSH2 0xB44 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0xB44 JUMPI DUP4 DUP3 ADD CALLDATALOAD SWAP3 DUP2 DUP5 GT PUSH2 0xA7A JUMPI PUSH1 0x24 SWAP3 PUSH1 0x5 SWAP3 CALLDATASIZE DUP6 DUP8 PUSH1 0x5 SHL DUP10 ADD ADD GT PUSH2 0x108A JUMPI DUP5 CALLDATALOAD SWAP2 DUP2 DUP4 GT PUSH2 0xB07 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0xB07 JUMPI DUP3 DUP2 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xB07 JUMPI PUSH1 0x6 SWAP2 CALLDATASIZE DUP8 DUP3 PUSH1 0x6 SHL DUP7 ADD ADD GT PUSH2 0xAF2 JUMPI PUSH2 0xFFF PUSH2 0x19BF JUMP JUMPDEST PUSH2 0x1007 PUSH2 0x19BF JUMP JUMPDEST DUP1 DUP9 SUB PUSH2 0x1062 JUMPI DUP10 JUMPDEST DUP9 DUP2 LT PUSH2 0x101B JUMPI DUP11 DUP1 RETURN JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1050 JUMPI DUP1 DUP8 SHL DUP11 ADD DUP9 ADD CALLDATALOAD DUP12 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP6 DUP12 KECCAK256 DUP2 DUP6 SHL DUP7 ADD DUP10 DUP2 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x44 ADD CALLDATALOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE ADD PUSH2 0x1010 JUMP JUMPDEST DUP8 DUP12 PUSH1 0x32 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST POP DUP4 MLOAD PUSH32 0x947D5A8400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI DUP2 PUSH2 0x10A6 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0x10B6 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP5 PUSH2 0x10D2 DUP2 DUP4 PUSH1 0x6 SLOAD AND CALLER DUP10 PUSH2 0x17FA JUMP JUMPDEST DUP2 PUSH1 0x6 SLOAD AND SWAP1 DUP9 MLOAD SWAP7 PUSH32 0x95EB087000000000000000000000000000000000000000000000000000000000 DUP9 MSTORE DUP5 DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP8 ADD MSTORE ADDRESS PUSH1 0x64 DUP8 ADD MSTORE DUP6 PUSH1 0x84 DUP2 PUSH1 0x20 SWAP8 DUP9 SWAP5 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x1362 JUMPI DUP7 SWAP6 PUSH2 0x1333 JUMPI JUMPDEST POP PUSH32 0x0 AND DUP7 MLOAD PUSH4 0x4E4BC847 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP5 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x1329 JUMPI DUP5 SWAP2 DUP9 SWAP2 PUSH2 0x12F8 JUMPI JUMPDEST POP SUB PUSH2 0x11A8 JUMPI POP POP POP POP DUP2 DUP1 DUP1 SWAP3 DUP2 DUP2 ISZERO PUSH2 0x119F JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x1195 JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1189 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 SWAP5 SWAP3 DUP4 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP8 DUP4 ADD MSTORE CALLER DUP6 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12E5 JUMPI DUP1 DUP6 MSTORE PUSH4 0x17119229 PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x84 DUP4 ADD MSTORE DUP7 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12DB JUMPI SWAP1 DUP8 SWAP4 SWAP3 SWAP2 DUP10 SWAP2 PUSH2 0x12A9 JUMPI JUMPDEST POP PUSH1 0x1 SWAP4 SWAP5 DUP8 DUP11 MSTORE PUSH1 0x2 DUP7 MSTORE PUSH2 0x1266 DUP8 DUP12 KECCAK256 SWAP4 DUP9 MLOAD SWAP10 DUP11 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0xDC203137 PUSH1 0xE0 SHL DUP8 MSTORE DUP2 SLOAD SWAP1 DUP8 ADD MSTORE ADD SLOAD PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x154A JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x12A0 JUMPI POP PUSH2 0x127B JUMPI POP POP DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1299 JUMPI JUMPDEST PUSH2 0x128E DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x369 JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x1284 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP1 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x12D4 JUMPI JUMPDEST PUSH2 0x12C0 DUP2 DUP8 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x108A JUMPI SWAP2 MLOAD DUP7 SWAP3 SWAP1 PUSH1 0x1 PUSH2 0x121D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x12B6 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP9 PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1322 JUMPI JUMPDEST PUSH2 0x1311 DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE94 JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x1173 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1307 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP5 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x135B JUMPI JUMPDEST PUSH2 0x134B DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA7A JUMPI MLOAD SWAP4 CODESIZE PUSH2 0x112E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1341 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x319 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH2 0x1387 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x13A4 JUMPI POP PUSH2 0x3A6 SWAP2 SWAP3 CALLDATALOAD PUSH2 0x174E JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x3A6 SWAP2 CALLDATALOAD PUSH2 0x13F0 PUSH1 0x1 PUSH2 0x390 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x16CF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x1C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1C4 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x14BB JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x51D JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x51D JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x51D JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x153A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x152A JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1563 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x158B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x158B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x51D JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x158B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x51D JUMPI DUP1 MLOAD PUSH2 0x1609 DUP2 PUSH2 0x15D7 JUMP JUMPDEST SWAP3 PUSH2 0x1617 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x15A1 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x51D JUMPI PUSH2 0x1635 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1672 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1672 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x1749 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1749 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0x17D0 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x1864 SWAP2 PUSH2 0x185F DUP3 PUSH1 0x84 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1A6C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 SWAP5 AND DUP5 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP4 MSTORE SWAP3 SWAP1 PUSH2 0x189F PUSH1 0x80 DUP5 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 MLOAD PUSH4 0x17119229 PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x19B4 JUMPI SWAP1 DUP7 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1983 JUMPI JUMPDEST POP PUSH1 0x1 SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP6 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH2 0x1941 DUP8 MLOAD SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0xDC203137 PUSH1 0xE0 SHL DUP7 MSTORE DUP1 SLOAD PUSH1 0x4 DUP8 ADD MSTORE ADD SLOAD PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x154A JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1979 JUMPI POP PUSH2 0x1955 JUMPI POP POP JUMP JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1972 JUMPI JUMPDEST PUSH2 0x1968 DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x195E JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP2 SWAP6 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x19AD JUMPI JUMPDEST PUSH2 0x199A DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI PUSH1 0x1 DUP7 SWAP4 MLOAD SWAP1 PUSH2 0x18F7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1990 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD PUSH1 0x8 SHR AND CALLER SUB PUSH2 0x19D6 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x51D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x1864 SWAP2 PUSH2 0x185F DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1AB7 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 DUP3 SWAP6 MLOAD SWAP2 ADD DUP3 DUP8 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x1B28 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1A99 DUP3 PUSH2 0x15D7 JUMP JUMPDEST SWAP2 PUSH2 0x1AA7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x15A1 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE DUP5 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP5 PUSH2 0x1B30 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x1B00 JUMPI JUMPDEST POP POP POP PUSH2 0x1ACF JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x319 JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO SUB PUSH2 0x369 JUMPI POP CODESIZE DUP1 DUP1 PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST SWAP1 PUSH2 0x1B6F JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1B45 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x1BBA JUMPI JUMPDEST PUSH2 0x1B80 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1B78 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xB8 0xAE 0xE2 0xAC SUB BASEFEE MUL 0xEF 0xDC TLOAD 0xA6 PUSH28 0xE9C2F252433902F04FC8983996C87232B3B6AA64736F6C6343000818 STOP CALLER ",
              "sourceMap": "854:6896:23:-:0;;;;;;;;;;;;;-1:-1:-1;;854:6896:23;;;;-1:-1:-1;;;;;854:6896:23;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;1231:15:11;854:6896:23;1070:10:14;1273:26:2;1269:95;;-1:-1:-1;;;;;;854:6896:23;;1070:10:14;854:6896:23;;;;-1:-1:-1;;;;;854:6896:23;;;;;;;;;-1:-1:-1;;;;;854:6896:23;;;;;;;1070:10:14;854:6896:23;;;3052:40:2;-1:-1:-1;;3052:40:2;854:6896:23;1097:21:14;;;1093:95;;1198:25;;;854:6896:23;;;;;;;;;;1328:20;854:6896;;;1328:20;854:6896;;;1361:31;854:6896;;;1361:31;854:6896;1405:44;1070:10:14;1405:44:23;:::i;:::-;;854:6896;;;;;;;;1198:25:14;854:6896:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1093:95:14;-1:-1:-1;;;1142:34:14;;;;;1269:95:2;854:6896:23;;-1:-1:-1;;;1322:31:2;;-1:-1:-1;1322:31:2;;;854:6896:23;;;1322:31:2;854:6896:23;-1:-1:-1;854:6896:23;;;;;;-1:-1:-1;854:6896:23;;;;;-1:-1:-1;854:6896:23;;;;-1:-1:-1;;;;;854:6896:23;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;854:6896:23;1241:5:11;854:6896:23;;;;;;;;;;1241:5:11;;854:6896:23;;;;;;;;;;;;;;;;;;;;;;6347:4:0;854:6896:23;;;;;;;;735:10:10;6370:40:0;;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 5393,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_17730": {
                  "entryPoint": 5349,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_17732": {
                  "entryPoint": 5371,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 5571,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_address_payable": {
                  "entryPoint": 6662,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_string_fromMemory": {
                  "entryPoint": 5619,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 5450,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_bytes64": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_allocation_size_string": {
                  "entryPoint": 5591,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 5415,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 5537,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_17736": {
                  "entryPoint": 5487,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_callOptionalReturn": {
                  "entryPoint": 6764,
                  "id": 1558,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 6591,
                  "id": 463,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_checkRole": {
                  "entryPoint": 5801,
                  "id": 93,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_checkRole_17741": {
                  "entryPoint": 5688,
                  "id": 93,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_crossChainCall": {
                  "entryPoint": 6246,
                  "id": 3971,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_grantRole": {
                  "entryPoint": 5839,
                  "id": 256,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_requireNotPaused": {
                  "entryPoint": 6084,
                  "id": 1962,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_revokeRole": {
                  "entryPoint": 5966,
                  "id": 294,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_safeTransfer": {
                  "entryPoint": 6682,
                  "id": 1368,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_safeTransferFrom": {
                  "entryPoint": 6138,
                  "id": 1395,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_verifyCallResultFromTarget": {
                  "entryPoint": 6960,
                  "id": 1820,
                  "parameterSlots": 3,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "2066": [
                  {
                    "length": 32,
                    "start": 1031
                  },
                  {
                    "length": 32,
                    "start": 1784
                  },
                  {
                    "length": 32,
                    "start": 2118
                  },
                  {
                    "length": 32,
                    "start": 3834
                  },
                  {
                    "length": 32,
                    "start": 4401
                  },
                  {
                    "length": 32,
                    "start": 6313
                  }
                ]
              },
              "linkReferences": {
                "contracts/src/lib/HoneyFeeMath.sol": {
                  "HoneyFeeMath": [
                    {
                      "length": 20,
                      "start": 2565
                    }
                  ]
                }
              },
              "object": "6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a71461144657508063248a9ca31461141d5780632d2c5565146113f55780632f2ff15d146113cc57806336568abe1461136c578381634cbb45051461108e5750806359a1aae114610f765780635c42132e14610ec65780635c975abb14610ea257806361ee103114610d0a57806367ebb6b214610c5e578063715018a614610bf257806374936c1614610ba65780638456cb5914610b4c578063879d182d146107e95780638da5cb5b146107be57806391d1485414610779578063a1e8320914610630578063a217fddf14610615578063a4c021e9146103db578063be4f3e8f146103aa578063d547741f1461036c578063d9f165dc1461031d578063ef88e0e114610295578063f2fde38b146101c85763f7b188a51461014357600080fd5b346101c457826003193601126101c45761015b611638565b6001549060ff82161561019d575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b82517f8dfc202b000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b50346101c45760203660031901126101c4576101e26114fb565b6101ea6119bf565b6001600160a01b039182821693841561026657505074ffffffffffffffffffffffffffffffffffffffff006001549160081b1674ffffffffffffffffffffffffffffffffffffffff001982161760015560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b908560249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b5050346103195760203660031901126103195790610315916102b56114fb565b916000602083516102c58161156f565b82815201526000602083516102d98161156f565b82815201526001600160a01b038251936102f28561156f565b168352602083015251918291829190916020806040830194805184520151910152565b0390f35b5080fd5b8334610369576020366003190112610369576001600160a01b0361033f6114fb565b610347611638565b1673ffffffffffffffffffffffffffffffffffffffff19600554161760055580f35b80fd5b5090346101c457806003193601126101c4576103a691356103a160016103906114e5565b9383875286602052862001546116a9565b61174e565b5080f35b50346101c45760203660031901126101c4579181923581526002602052206001815491015482519182526020820152f35b5060603660031901126101c4576103f06114fb565b6044356103fb6117c4565b6001600160a01b0393847f0000000000000000000000000000000000000000000000000000000000000000168151634e4bc84760e01b80825260209182818981875afa908115610563579086918b916105e4575b500361056d5734965b8289600654169960648751809b81937fd219d1f30000000000000000000000000000000000000000000000000000000083528c169d8e8784015260243560248401523060448401525af1978815610563578a98610532575b5090829185518095819382525afa92831561052957509083929188926104f3575b5050036104e85750506104e5913390611a1a565b80f35b6104e5935033611866565b8193508092503d8311610522575b61050b81836115a1565b8101031261051d5781905138806104d1565b600080fd5b503d610501565b513d89823e3d90fd5b919097508282813d831161055c575b61054b81836115a1565b8101031261051d57905196826104b0565b503d610541565b85513d8c823e3d90fd5b8351631711922960e31b815230888201528281602481875afa908115610563578a916105b7575b5034033481116105a45796610458565b60248a60118a634e487b7160e01b835252fd5b90508281813d83116105dd575b6105ce81836115a1565b8101031261051d575138610594565b503d6105c4565b809250848092503d831161060e575b6105fd81836115a1565b8101031261051d578590513861044f565b503d6105f3565b50503461031957816003193601126103195751908152602090f35b509060a03660031901126101c4576106466114fb565b9060243592610653611511565b91608435916106606117c4565b866001600160a01b038096169561067d888260065416338a6117fa565b8060065416978451977ffc7a6a230000000000000000000000000000000000000000000000000000000089528489015260248801528086169788604489015260643560648901523060848901528760a48160209586945af196871561076f578997610740575b508190845193848092634e4bc84760e01b82527f0000000000000000000000000000000000000000000000000000000000000000165afa92831561052957509083929188926104f3575050036104e85750506104e5913390611a1a565b9096508181813d8311610768575b61075881836115a1565b8101031261051d575195816106e3565b503d61074e565b84513d8b823e3d90fd5b50346101c457816003193601126101c4576001600160a01b038260209461079e6114e5565b93358152808652209116600052825260ff81600020541690519015158152f35b5050346103195781600319360112610319576020906001600160a01b0360015460081c169051908152f35b50913660031901610120811261031957610100136103695767ffffffffffffffff610104358181116101c457366023820112156101c45780850135828111610b48576024908201923682850111610b44576001600160a01b0391827f0000000000000000000000000000000000000000000000000000000000000000163303610b185780359081875260209560028752868989208a516108888161156f565b6001825492838352015492839101526044351490811591610b0b575b50156108d2578989517f7fee69a1000000000000000000000000000000000000000000000000000000008152fd5b906060868b939a999a0312610b075761095593876108f1838901611a06565b94606461090060448b01611a06565b990135958880875416918d51998a94859384937fb464631b000000000000000000000000000000000000000000000000000000008552168a8401602090939291936001600160a01b0360408201951681520152565b03915afa948515610afd578a95610ac2575b50856005541690813b15610abe578a8a5180937fc1bf9e580000000000000000000000000000000000000000000000000000000082528183816109c38b8d8c8401602090939291936001600160a01b0360408201951681520152565b03925af18015610ab457610a8f575b505090879182519384927fdbceb0050000000000000000000000000000000000000000000000000000000084528301528173__$cee652c4e9f55bc124e1380243e2f45138$__5af4948515610a855787968896610a4a575b5050506104e5948280610a409316941684611a1a565b6003541690611a1a565b91965091945085813d8111610a7e575b610a6481836115a1565b81010312610a7a57845194015192848280610a2a565b8580fd5b503d610a5a565b86513d89823e3d90fd5b819a929a11610aa257885297878a6109d2565b5060418992634e487b7160e01b835252fd5b8a513d8d823e3d90fd5b8a80fd5b9094508781813d8311610af6575b610ada81836115a1565b81010312610af257610aeb906115c3565b938a610967565b8980fd5b503d610ad0565b89513d8c823e3d90fd5b8880fd5b90506064351415386108a4565b86517fd7f7333400000000000000000000000000000000000000000000000000000000815233818a0152fd5b8480fd5b8380fd5b50503461031957816003193601126103195760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610b8a611638565b610b926117c4565b600160ff198154161760015551338152a180f35b8334610369576020366003190112610369576001600160a01b03610bc86114fb565b610bd0611638565b1673ffffffffffffffffffffffffffffffffffffffff19600654161760065580f35b8334610369578060031936011261036957610c0b6119bf565b806001600160a01b0360015474ffffffffffffffffffffffffffffffffffffffff0019811660015560081c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5082903461031957602036600319011261031957828135928060208351610c848161156f565b828152015283815260026020522091835192610c9f8461156f565b6001815491828652015490816020860152159081610d01575b50610cd25783518351815260208085015190820152604090f35b602492508351917f78d0dbfc000000000000000000000000000000000000000000000000000000008352820152fd5b90501585610cb8565b50919034610319576060806003193601126101c457610d276114e5565b90610d30611511565b9284815193610d3e8561156f565b8385528360208096015260646001600160a01b039889978880600654169187519c8d9687957f61ee10310000000000000000000000000000000000000000000000000000000087528035908701521660248501521660448301525afa938415610e98578580978196610ded575b50509181610315959493610dd9935198899889521684880152818188015284519187015260a086019061154a565b910151838203605f1901608085015261154a565b9650965093503d8087873e610e0281876115a1565b85018286820312610e9457855190610e1b8588016115c3565b968381015167ffffffffffffffff91828211610abe57018481840312610af257845199610e478b61156f565b81518381116103195784610e5c9184016115f3565b8b52878201519283116103695750610dd994926103159897969492610e8192016115f3565b858a015296979581935094919394610dab565b8680fd5b81513d87823e3d90fd5b50503461031957816003193601126103195760209060ff6001541690519015158152f35b5090346101c457826003193601126101c457805191631711922960e31b835230908301526020826024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa918215610f6c578392610f34575b6020838351908152f35b9091506020813d602011610f64575b81610f50602093836115a1565b810103126101c45760209250519038610f2a565b3d9150610f43565b81513d85823e3d90fd5b5090346101c457806003193601126101c45781359167ffffffffffffffff808411610b445736602385011215610b44578382013592818411610a7a5760249260059236858760051b8901011161108a57843591818311610b075736602384011215610b075782810135918211610b075760069136878260061b86010111610af257610fff6119bf565b6110076119bf565b80880361106257895b88811061101b578a80f35b818110156110505780871b8a018801358b526002602052858b2081851b86018981013582556044013560019182015501611010565b878b603285634e487b7160e01b835252fd5b5083517f947d5a84000000000000000000000000000000000000000000000000000000008152fd5b8780fd5b919050608036600319011261031957816110a66114fb565b60243592606435916110b66117c4565b6001600160a01b03809116946110d281836006541633896117fa565b8160065416908851967f95eb087000000000000000000000000000000000000000000000000000000000885284880152602487015260443560448701523060648701528560848160209788945af1948515611362578695611333575b507f0000000000000000000000000000000000000000000000000000000000000000168651634e4bc84760e01b815284818481855afa801561132957849188916112f8575b50036111a857505050508180809281811561119f575b3390f115611195575080f35b51903d90823e3d90fd5b506108fc611189565b91945091949283519073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8783015233858301526060820152606081526080810181811067ffffffffffffffff8211176112e557808552631711922960e31b81523060848301528681602481865afa9081156112db57908793929189916112a9575b5060019394878a5260028652611266878b20938851998a978896879563dc20313760e01b875281549087015201546024850152604484015260806064840152608483019061154a565b03925af19081156112a0575061127b57505080f35b813d8311611299575b61128e81836115a1565b810103126103695780f35b503d611284565b513d85823e3d90fd5b93905081813d83116112d4575b6112c081876115a1565b8101031261108a579151869290600161121d565b503d6112b6565b85513d8a823e3d90fd5b602488604186634e487b7160e01b835252fd5b809250868092503d8311611322575b61131181836115a1565b81010312610e945783905138611173565b503d611307565b88513d89823e3d90fd5b9094508381813d831161135b575b61134b81836115a1565b81010312610a7a5751933861112e565b503d611341565b87513d88823e3d90fd5b509190346103195780600319360112610319576113876114e5565b90336001600160a01b038316036113a457506103a691923561174e565b8390517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b5090346101c457806003193601126101c4576103a691356113f060016103906114e5565b6116cf565b5050346103195781600319360112610319576020906001600160a01b03600354169051908152f35b50346101c45760203660031901126101c457816020936001923581528085522001549051908152f35b925050346101c45760203660031901126101c457357fffffffff0000000000000000000000000000000000000000000000000000000081168091036101c457602092507f7965db0b0000000000000000000000000000000000000000000000000000000081149081156114bb575b5015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386114b4565b602435906001600160a01b038216820361051d57565b600435906001600160a01b038216820361051d57565b604435906001600160a01b038216820361051d57565b60005b83811061153a5750506000910152565b818101518382015260200161152a565b9060209161156381518092818552858086019101611527565b601f01601f1916010190565b6040810190811067ffffffffffffffff82111761158b57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761158b57604052565b51906001600160a01b038216820361051d57565b67ffffffffffffffff811161158b57601f01601f191660200190565b81601f8201121561051d578051611609816115d7565b9261161760405194856115a1565b8184526020828401011161051d576116359160208085019101611527565b90565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604081205460ff16156116725750565b604490604051907fe2517d3f0000000000000000000000000000000000000000000000000000000082523360048301526024820152fd5b80600052600060205260406000203360005260205260ff60406000205416156116725750565b90600091808352826020526001600160a01b036040842092169182845260205260ff6040842054161560001461174957808352826020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b90600091808352826020526001600160a01b036040842092169182845260205260ff6040842054166000146117495780835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b60ff600154166117d057565b60046040517fd93c0665000000000000000000000000000000000000000000000000000000008152fd5b6040517f23b872dd0000000000000000000000000000000000000000000000000000000060208201526001600160a01b03928316602482015292909116604483015260648201929092526118649161185f82608481015b03601f1981018452836115a1565b611a6c565b565b604080516001600160a01b039485166020808301919091529290941684820152606080850195909552938352929061189f6080846115a1565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168251631711922960e31b81523060048201528581602481855afa9081156119b4579086939291600091611983575b5060019083600052600285528560002061194187519889968795869463dc20313760e01b86528054600487015201546024850152604484015260806064840152608483019061154a565b03925af19081156119795750611955575050565b813d8311611972575b61196881836115a1565b8101031261051d57565b503d61195e565b513d6000823e3d90fd5b84819592503d83116119ad575b61199a81836115a1565b8101031261051d576001869351906118f7565b503d611990565b84513d6000823e3d90fd5b6001600160a01b0360015460081c1633036119d657565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b35906001600160a01b038216820361051d57565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000060208201526001600160a01b03909216602483015260448201929092526118649161185f8260648101611851565b6001600160a01b031690611ab7600080836020829551910182875af13d15611b28573d90611a99826115d7565b91611aa760405193846115a1565b82523d84602084013e5b84611b30565b908151918215159283611b00575b505050611acf5750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b8192935090602091810103126103195760200151908115918215036103695750388080611ac5565b606090611ab1565b90611b6f5750805115611b4557805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580611bba575b611b80575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15611b7856fea264697066735822122088b8aee2ac034802efdc5ca67be9c2f252433902f04fc8983996c87232b3b6aa64736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1446 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x141D JUMPI DUP1 PUSH4 0x2D2C5565 EQ PUSH2 0x13F5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x13CC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x136C JUMPI DUP4 DUP2 PUSH4 0x4CBB4505 EQ PUSH2 0x108E JUMPI POP DUP1 PUSH4 0x59A1AAE1 EQ PUSH2 0xF76 JUMPI DUP1 PUSH4 0x5C42132E EQ PUSH2 0xEC6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xEA2 JUMPI DUP1 PUSH4 0x61EE1031 EQ PUSH2 0xD0A JUMPI DUP1 PUSH4 0x67EBB6B2 EQ PUSH2 0xC5E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBF2 JUMPI DUP1 PUSH4 0x74936C16 EQ PUSH2 0xBA6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB4C JUMPI DUP1 PUSH4 0x879D182D EQ PUSH2 0x7E9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x779 JUMPI DUP1 PUSH4 0xA1E83209 EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xA4C021E9 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0xBE4F3E8F EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xD9F165DC EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xEF88E0E1 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C8 JUMPI PUSH4 0xF7B188A5 EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C4 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x15B PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0x19D JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x1E2 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 AND SWAP4 DUP5 ISZERO PUSH2 0x266 JUMPI POP POP PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x1 SLOAD SWAP2 PUSH1 0x8 SHL AND PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT DUP3 AND OR PUSH1 0x1 SSTORE PUSH1 0x8 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 DUP6 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI SWAP1 PUSH2 0x315 SWAP2 PUSH2 0x2B5 PUSH2 0x14FB JUMP JUMPDEST SWAP2 PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD PUSH2 0x2C5 DUP2 PUSH2 0x156F JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD PUSH2 0x2D9 DUP2 PUSH2 0x156F JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 MLOAD SWAP4 PUSH2 0x2F2 DUP6 PUSH2 0x156F JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP1 PUSH1 0x40 DUP4 ADD SWAP5 DUP1 MLOAD DUP5 MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x33F PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x347 PUSH2 0x1638 JUMP JUMPDEST AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x3A6 SWAP2 CALLDATALOAD PUSH2 0x3A1 PUSH1 0x1 PUSH2 0x390 PUSH2 0x14E5 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE DUP7 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x174E JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI SWAP2 DUP2 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x3F0 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH2 0x3FB PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 PUSH32 0x0 AND DUP2 MLOAD PUSH4 0x4E4BC847 PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP2 DUP10 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x563 JUMPI SWAP1 DUP7 SWAP2 DUP12 SWAP2 PUSH2 0x5E4 JUMPI JUMPDEST POP SUB PUSH2 0x56D JUMPI CALLVALUE SWAP7 JUMPDEST DUP3 DUP10 PUSH1 0x6 SLOAD AND SWAP10 PUSH1 0x64 DUP8 MLOAD DUP1 SWAP12 DUP2 SWAP4 PUSH32 0xD219D1F300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP13 AND SWAP14 DUP15 DUP8 DUP5 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP5 ADD MSTORE ADDRESS PUSH1 0x44 DUP5 ADD MSTORE GAS CALL SWAP8 DUP9 ISZERO PUSH2 0x563 JUMPI DUP11 SWAP9 PUSH2 0x532 JUMPI JUMPDEST POP SWAP1 DUP3 SWAP2 DUP6 MLOAD DUP1 SWAP6 DUP2 SWAP4 DUP3 MSTORE GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x529 JUMPI POP SWAP1 DUP4 SWAP3 SWAP2 DUP9 SWAP3 PUSH2 0x4F3 JUMPI JUMPDEST POP POP SUB PUSH2 0x4E8 JUMPI POP POP PUSH2 0x4E5 SWAP2 CALLER SWAP1 PUSH2 0x1A1A JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH2 0x4E5 SWAP4 POP CALLER PUSH2 0x1866 JUMP JUMPDEST DUP2 SWAP4 POP DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x522 JUMPI JUMPDEST PUSH2 0x50B DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI DUP2 SWAP1 MLOAD CODESIZE DUP1 PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x501 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP8 POP DUP3 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x55C JUMPI JUMPDEST PUSH2 0x54B DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI SWAP1 MLOAD SWAP7 DUP3 PUSH2 0x4B0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x541 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0x17119229 PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS DUP9 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x563 JUMPI DUP11 SWAP2 PUSH2 0x5B7 JUMPI JUMPDEST POP CALLVALUE SUB CALLVALUE DUP2 GT PUSH2 0x5A4 JUMPI SWAP7 PUSH2 0x458 JUMP JUMPDEST PUSH1 0x24 DUP11 PUSH1 0x11 DUP11 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x5DD JUMPI JUMPDEST PUSH2 0x5CE DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI MLOAD CODESIZE PUSH2 0x594 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5C4 JUMP JUMPDEST DUP1 SWAP3 POP DUP5 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x60E JUMPI JUMPDEST PUSH2 0x5FD DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI DUP6 SWAP1 MLOAD CODESIZE PUSH2 0x44F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5F3 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x646 PUSH2 0x14FB JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x653 PUSH2 0x1511 JUMP JUMPDEST SWAP2 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH2 0x660 PUSH2 0x17C4 JUMP JUMPDEST DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP7 AND SWAP6 PUSH2 0x67D DUP9 DUP3 PUSH1 0x6 SLOAD AND CALLER DUP11 PUSH2 0x17FA JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD AND SWAP8 DUP5 MLOAD SWAP8 PUSH32 0xFC7A6A2300000000000000000000000000000000000000000000000000000000 DUP10 MSTORE DUP5 DUP10 ADD MSTORE PUSH1 0x24 DUP9 ADD MSTORE DUP1 DUP7 AND SWAP8 DUP9 PUSH1 0x44 DUP10 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x64 DUP10 ADD MSTORE ADDRESS PUSH1 0x84 DUP10 ADD MSTORE DUP8 PUSH1 0xA4 DUP2 PUSH1 0x20 SWAP6 DUP7 SWAP5 GAS CALL SWAP7 DUP8 ISZERO PUSH2 0x76F JUMPI DUP10 SWAP8 PUSH2 0x740 JUMPI JUMPDEST POP DUP2 SWAP1 DUP5 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x4E4BC847 PUSH1 0xE0 SHL DUP3 MSTORE PUSH32 0x0 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x529 JUMPI POP SWAP1 DUP4 SWAP3 SWAP2 DUP9 SWAP3 PUSH2 0x4F3 JUMPI POP POP SUB PUSH2 0x4E8 JUMPI POP POP PUSH2 0x4E5 SWAP2 CALLER SWAP1 PUSH2 0x1A1A JUMP JUMPDEST SWAP1 SWAP7 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x768 JUMPI JUMPDEST PUSH2 0x758 DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI MLOAD SWAP6 DUP2 PUSH2 0x6E3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x74E JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1C4 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 PUSH1 0x20 SWAP5 PUSH2 0x79E PUSH2 0x14E5 JUMP JUMPDEST SWAP4 CALLDATALOAD DUP2 MSTORE DUP1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD PUSH1 0x8 SHR AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLDATASIZE PUSH1 0x3 NOT ADD PUSH2 0x120 DUP2 SLT PUSH2 0x319 JUMPI PUSH2 0x100 SGT PUSH2 0x369 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x104 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1C4 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1C4 JUMPI DUP1 DUP6 ADD CALLDATALOAD DUP3 DUP2 GT PUSH2 0xB48 JUMPI PUSH1 0x24 SWAP1 DUP3 ADD SWAP3 CALLDATASIZE DUP3 DUP6 ADD GT PUSH2 0xB44 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 PUSH32 0x0 AND CALLER SUB PUSH2 0xB18 JUMPI DUP1 CALLDATALOAD SWAP1 DUP2 DUP8 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE DUP7 DUP10 DUP10 KECCAK256 DUP11 MLOAD PUSH2 0x888 DUP2 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x1 DUP3 SLOAD SWAP3 DUP4 DUP4 MSTORE ADD SLOAD SWAP3 DUP4 SWAP2 ADD MSTORE PUSH1 0x44 CALLDATALOAD EQ SWAP1 DUP2 ISZERO SWAP2 PUSH2 0xB0B JUMPI JUMPDEST POP ISZERO PUSH2 0x8D2 JUMPI DUP10 DUP10 MLOAD PUSH32 0x7FEE69A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x60 DUP7 DUP12 SWAP4 SWAP11 SWAP10 SWAP11 SUB SLT PUSH2 0xB07 JUMPI PUSH2 0x955 SWAP4 DUP8 PUSH2 0x8F1 DUP4 DUP10 ADD PUSH2 0x1A06 JUMP JUMPDEST SWAP5 PUSH1 0x64 PUSH2 0x900 PUSH1 0x44 DUP12 ADD PUSH2 0x1A06 JUMP JUMPDEST SWAP10 ADD CALLDATALOAD SWAP6 DUP9 DUP1 DUP8 SLOAD AND SWAP2 DUP14 MLOAD SWAP10 DUP11 SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH32 0xB464631B00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND DUP11 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0xAFD JUMPI DUP11 SWAP6 PUSH2 0xAC2 JUMPI JUMPDEST POP DUP6 PUSH1 0x5 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0xABE JUMPI DUP11 DUP11 MLOAD DUP1 SWAP4 PUSH32 0xC1BF9E5800000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 DUP4 DUP2 PUSH2 0x9C3 DUP12 DUP14 DUP13 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xAB4 JUMPI PUSH2 0xA8F JUMPI JUMPDEST POP POP SWAP1 DUP8 SWAP2 DUP3 MLOAD SWAP4 DUP5 SWAP3 PUSH32 0xDBCEB00500000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD MSTORE DUP2 PUSH20 0x0 GAS DELEGATECALL SWAP5 DUP6 ISZERO PUSH2 0xA85 JUMPI DUP8 SWAP7 DUP9 SWAP7 PUSH2 0xA4A JUMPI JUMPDEST POP POP POP PUSH2 0x4E5 SWAP5 DUP3 DUP1 PUSH2 0xA40 SWAP4 AND SWAP5 AND DUP5 PUSH2 0x1A1A JUMP JUMPDEST PUSH1 0x3 SLOAD AND SWAP1 PUSH2 0x1A1A JUMP JUMPDEST SWAP2 SWAP7 POP SWAP2 SWAP5 POP DUP6 DUP2 RETURNDATASIZE DUP2 GT PUSH2 0xA7E JUMPI JUMPDEST PUSH2 0xA64 DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA7A JUMPI DUP5 MLOAD SWAP5 ADD MLOAD SWAP3 DUP5 DUP3 DUP1 PUSH2 0xA2A JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xA5A JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 SWAP11 SWAP3 SWAP11 GT PUSH2 0xAA2 JUMPI DUP9 MSTORE SWAP8 DUP8 DUP11 PUSH2 0x9D2 JUMP JUMPDEST POP PUSH1 0x41 DUP10 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP11 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST SWAP1 SWAP5 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xAF6 JUMPI JUMPDEST PUSH2 0xADA DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xAF2 JUMPI PUSH2 0xAEB SWAP1 PUSH2 0x15C3 JUMP JUMPDEST SWAP4 DUP11 PUSH2 0x967 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xAD0 JUMP JUMPDEST DUP10 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x64 CALLDATALOAD EQ ISZERO CODESIZE PUSH2 0x8A4 JUMP JUMPDEST DUP7 MLOAD PUSH32 0xD7F7333400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER DUP2 DUP11 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0xB8A PUSH2 0x1638 JUMP JUMPDEST PUSH2 0xB92 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT DUP2 SLOAD AND OR PUSH1 0x1 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBC8 PUSH2 0x14FB JUMP JUMPDEST PUSH2 0xBD0 PUSH2 0x1638 JUMP JUMPDEST AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x369 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x369 JUMPI PUSH2 0xC0B PUSH2 0x19BF JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT DUP2 AND PUSH1 0x1 SSTORE PUSH1 0x8 SHR AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI DUP3 DUP2 CALLDATALOAD SWAP3 DUP1 PUSH1 0x20 DUP4 MLOAD PUSH2 0xC84 DUP2 PUSH2 0x156F JUMP JUMPDEST DUP3 DUP2 MSTORE ADD MSTORE DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE KECCAK256 SWAP2 DUP4 MLOAD SWAP3 PUSH2 0xC9F DUP5 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x1 DUP2 SLOAD SWAP2 DUP3 DUP7 MSTORE ADD SLOAD SWAP1 DUP2 PUSH1 0x20 DUP7 ADD MSTORE ISZERO SWAP1 DUP2 PUSH2 0xD01 JUMPI JUMPDEST POP PUSH2 0xCD2 JUMPI DUP4 MLOAD DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP DUP4 MLOAD SWAP2 PUSH32 0x78D0DBFC00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP6 PUSH2 0xCB8 JUMP JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x319 JUMPI PUSH1 0x60 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0xD27 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 PUSH2 0xD30 PUSH2 0x1511 JUMP JUMPDEST SWAP3 DUP5 DUP2 MLOAD SWAP4 PUSH2 0xD3E DUP6 PUSH2 0x156F JUMP JUMPDEST DUP4 DUP6 MSTORE DUP4 PUSH1 0x20 DUP1 SWAP7 ADD MSTORE PUSH1 0x64 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 SWAP8 DUP9 DUP1 PUSH1 0x6 SLOAD AND SWAP2 DUP8 MLOAD SWAP13 DUP14 SWAP7 DUP8 SWAP6 PUSH32 0x61EE103100000000000000000000000000000000000000000000000000000000 DUP8 MSTORE DUP1 CALLDATALOAD SWAP1 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE AND PUSH1 0x44 DUP4 ADD MSTORE GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0xE98 JUMPI DUP6 DUP1 SWAP8 DUP2 SWAP7 PUSH2 0xDED JUMPI JUMPDEST POP POP SWAP2 DUP2 PUSH2 0x315 SWAP6 SWAP5 SWAP4 PUSH2 0xDD9 SWAP4 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE AND DUP5 DUP9 ADD MSTORE DUP2 DUP2 DUP9 ADD MSTORE DUP5 MLOAD SWAP2 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x154A JUMP JUMPDEST SWAP2 ADD MLOAD DUP4 DUP3 SUB PUSH1 0x5F NOT ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x154A JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP4 POP RETURNDATASIZE DUP1 DUP8 DUP8 RETURNDATACOPY PUSH2 0xE02 DUP2 DUP8 PUSH2 0x15A1 JUMP JUMPDEST DUP6 ADD DUP3 DUP7 DUP3 SUB SLT PUSH2 0xE94 JUMPI DUP6 MLOAD SWAP1 PUSH2 0xE1B DUP6 DUP9 ADD PUSH2 0x15C3 JUMP JUMPDEST SWAP7 DUP4 DUP2 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0xABE JUMPI ADD DUP5 DUP2 DUP5 SUB SLT PUSH2 0xAF2 JUMPI DUP5 MLOAD SWAP10 PUSH2 0xE47 DUP12 PUSH2 0x156F JUMP JUMPDEST DUP2 MLOAD DUP4 DUP2 GT PUSH2 0x319 JUMPI DUP5 PUSH2 0xE5C SWAP2 DUP5 ADD PUSH2 0x15F3 JUMP JUMPDEST DUP12 MSTORE DUP8 DUP3 ADD MLOAD SWAP3 DUP4 GT PUSH2 0x369 JUMPI POP PUSH2 0xDD9 SWAP5 SWAP3 PUSH2 0x315 SWAP9 SWAP8 SWAP7 SWAP5 SWAP3 PUSH2 0xE81 SWAP3 ADD PUSH2 0x15F3 JUMP JUMPDEST DUP6 DUP11 ADD MSTORE SWAP7 SWAP8 SWAP6 DUP2 SWAP4 POP SWAP5 SWAP2 SWAP4 SWAP5 PUSH2 0xDAB JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C4 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI DUP1 MLOAD SWAP2 PUSH4 0x17119229 PUSH1 0xE3 SHL DUP4 MSTORE ADDRESS SWAP1 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xF6C JUMPI DUP4 SWAP3 PUSH2 0xF34 JUMPI JUMPDEST PUSH1 0x20 DUP4 DUP4 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF64 JUMPI JUMPDEST DUP2 PUSH2 0xF50 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1C4 JUMPI PUSH1 0x20 SWAP3 POP MLOAD SWAP1 CODESIZE PUSH2 0xF2A JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF43 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT PUSH2 0xB44 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0xB44 JUMPI DUP4 DUP3 ADD CALLDATALOAD SWAP3 DUP2 DUP5 GT PUSH2 0xA7A JUMPI PUSH1 0x24 SWAP3 PUSH1 0x5 SWAP3 CALLDATASIZE DUP6 DUP8 PUSH1 0x5 SHL DUP10 ADD ADD GT PUSH2 0x108A JUMPI DUP5 CALLDATALOAD SWAP2 DUP2 DUP4 GT PUSH2 0xB07 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0xB07 JUMPI DUP3 DUP2 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xB07 JUMPI PUSH1 0x6 SWAP2 CALLDATASIZE DUP8 DUP3 PUSH1 0x6 SHL DUP7 ADD ADD GT PUSH2 0xAF2 JUMPI PUSH2 0xFFF PUSH2 0x19BF JUMP JUMPDEST PUSH2 0x1007 PUSH2 0x19BF JUMP JUMPDEST DUP1 DUP9 SUB PUSH2 0x1062 JUMPI DUP10 JUMPDEST DUP9 DUP2 LT PUSH2 0x101B JUMPI DUP11 DUP1 RETURN JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1050 JUMPI DUP1 DUP8 SHL DUP11 ADD DUP9 ADD CALLDATALOAD DUP12 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP6 DUP12 KECCAK256 DUP2 DUP6 SHL DUP7 ADD DUP10 DUP2 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x44 ADD CALLDATALOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE ADD PUSH2 0x1010 JUMP JUMPDEST DUP8 DUP12 PUSH1 0x32 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST POP DUP4 MLOAD PUSH32 0x947D5A8400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x319 JUMPI DUP2 PUSH2 0x10A6 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0x10B6 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND SWAP5 PUSH2 0x10D2 DUP2 DUP4 PUSH1 0x6 SLOAD AND CALLER DUP10 PUSH2 0x17FA JUMP JUMPDEST DUP2 PUSH1 0x6 SLOAD AND SWAP1 DUP9 MLOAD SWAP7 PUSH32 0x95EB087000000000000000000000000000000000000000000000000000000000 DUP9 MSTORE DUP5 DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP8 ADD MSTORE ADDRESS PUSH1 0x64 DUP8 ADD MSTORE DUP6 PUSH1 0x84 DUP2 PUSH1 0x20 SWAP8 DUP9 SWAP5 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x1362 JUMPI DUP7 SWAP6 PUSH2 0x1333 JUMPI JUMPDEST POP PUSH32 0x0 AND DUP7 MLOAD PUSH4 0x4E4BC847 PUSH1 0xE0 SHL DUP2 MSTORE DUP5 DUP2 DUP5 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x1329 JUMPI DUP5 SWAP2 DUP9 SWAP2 PUSH2 0x12F8 JUMPI JUMPDEST POP SUB PUSH2 0x11A8 JUMPI POP POP POP POP DUP2 DUP1 DUP1 SWAP3 DUP2 DUP2 ISZERO PUSH2 0x119F JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x1195 JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1189 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 SWAP5 SWAP3 DUP4 MLOAD SWAP1 PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE DUP8 DUP4 ADD MSTORE CALLER DUP6 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x80 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x12E5 JUMPI DUP1 DUP6 MSTORE PUSH4 0x17119229 PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x84 DUP4 ADD MSTORE DUP7 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12DB JUMPI SWAP1 DUP8 SWAP4 SWAP3 SWAP2 DUP10 SWAP2 PUSH2 0x12A9 JUMPI JUMPDEST POP PUSH1 0x1 SWAP4 SWAP5 DUP8 DUP11 MSTORE PUSH1 0x2 DUP7 MSTORE PUSH2 0x1266 DUP8 DUP12 KECCAK256 SWAP4 DUP9 MLOAD SWAP10 DUP11 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0xDC203137 PUSH1 0xE0 SHL DUP8 MSTORE DUP2 SLOAD SWAP1 DUP8 ADD MSTORE ADD SLOAD PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x154A JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x12A0 JUMPI POP PUSH2 0x127B JUMPI POP POP DUP1 RETURN JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1299 JUMPI JUMPDEST PUSH2 0x128E DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x369 JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x1284 JUMP JUMPDEST MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP1 POP DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x12D4 JUMPI JUMPDEST PUSH2 0x12C0 DUP2 DUP8 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x108A JUMPI SWAP2 MLOAD DUP7 SWAP3 SWAP1 PUSH1 0x1 PUSH2 0x121D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x12B6 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x24 DUP9 PUSH1 0x41 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1322 JUMPI JUMPDEST PUSH2 0x1311 DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE94 JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x1173 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1307 JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP5 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x135B JUMPI JUMPDEST PUSH2 0x134B DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA7A JUMPI MLOAD SWAP4 CODESIZE PUSH2 0x112E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1341 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP SWAP2 SWAP1 CALLVALUE PUSH2 0x319 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH2 0x1387 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x13A4 JUMPI POP PUSH2 0x3A6 SWAP2 SWAP3 CALLDATALOAD PUSH2 0x174E JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1C4 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C4 JUMPI PUSH2 0x3A6 SWAP2 CALLDATALOAD PUSH2 0x13F0 PUSH1 0x1 PUSH2 0x390 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x16CF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x319 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x319 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x1C4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1C4 JUMPI CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1C4 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x14BB JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x51D JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x51D JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x51D JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x153A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x152A JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1563 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1527 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x158B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x158B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x51D JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x158B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x51D JUMPI DUP1 MLOAD PUSH2 0x1609 DUP2 PUSH2 0x15D7 JUMP JUMPDEST SWAP3 PUSH2 0x1617 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x15A1 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x51D JUMPI PUSH2 0x1635 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1672 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x1672 JUMPI POP JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x1749 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x1749 JUMPI DUP1 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x1 SLOAD AND PUSH2 0x17D0 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x1864 SWAP2 PUSH2 0x185F DUP3 PUSH1 0x84 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP5 MSTORE DUP4 PUSH2 0x15A1 JUMP JUMPDEST PUSH2 0x1A6C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 SWAP5 AND DUP5 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP4 MSTORE SWAP3 SWAP1 PUSH2 0x189F PUSH1 0x80 DUP5 PUSH2 0x15A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 MLOAD PUSH4 0x17119229 PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP6 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x19B4 JUMPI SWAP1 DUP7 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1983 JUMPI JUMPDEST POP PUSH1 0x1 SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 DUP6 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH2 0x1941 DUP8 MLOAD SWAP9 DUP10 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0xDC203137 PUSH1 0xE0 SHL DUP7 MSTORE DUP1 SLOAD PUSH1 0x4 DUP8 ADD MSTORE ADD SLOAD PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x154A JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1979 JUMPI POP PUSH2 0x1955 JUMPI POP POP JUMP JUMPDEST DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1972 JUMPI JUMPDEST PUSH2 0x1968 DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x195E JUMP JUMPDEST MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP2 SWAP6 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x19AD JUMPI JUMPDEST PUSH2 0x199A DUP2 DUP4 PUSH2 0x15A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x51D JUMPI PUSH1 0x1 DUP7 SWAP4 MLOAD SWAP1 PUSH2 0x18F7 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1990 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 SLOAD PUSH1 0x8 SHR AND CALLER SUB PUSH2 0x19D6 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x51D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x1864 SWAP2 PUSH2 0x185F DUP3 PUSH1 0x64 DUP2 ADD PUSH2 0x1851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1AB7 PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 DUP3 SWAP6 MLOAD SWAP2 ADD DUP3 DUP8 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x1B28 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1A99 DUP3 PUSH2 0x15D7 JUMP JUMPDEST SWAP2 PUSH2 0x1AA7 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x15A1 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE DUP5 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP5 PUSH2 0x1B30 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x1B00 JUMPI JUMPDEST POP POP POP PUSH2 0x1ACF JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x319 JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO SUB PUSH2 0x369 JUMPI POP CODESIZE DUP1 DUP1 PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST SWAP1 PUSH2 0x1B6F JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1B45 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x1BBA JUMPI JUMPDEST PUSH2 0x1B80 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1B78 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xB8 0xAE 0xE2 0xAC SUB BASEFEE MUL 0xEF 0xDC TLOAD 0xA6 PUSH28 0xE9C2F252433902F04FC8983996C87232B3B6AA64736F6C6343000818 STOP CALLER ",
              "sourceMap": "854:6896:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5049:28;854:6896;5049:28;;;854:6896;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:4:0;;:::i;:::-;1920:7:11;854:6896:23;;;;;2264:9:11;2260:62;;-1:-1:-1;;;854:6896:23;1920:7:11;854:6896:23;;735:10:10;854:6896:23;;2798:22:11;;854:6896:23;;2798:22:11;854:6896:23;;2260:62:11;854:6896:23;;2296:15:11;;;;854:6896:23;;;;;;;;;;;-1:-1:-1;;854:6896:23;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;854:6896:23;;;;2627:22:2;;;2623:91;;854:6896:23;;;3004:6:2;854:6896:23;;;;;-1:-1:-1;;854:6896:23;;;3004:6:2;854:6896:23;;;;3052:40:2;854:6896:23;3052:40:2;;854:6896:23;;2623:91:2;854:6896:23;;;;;2672:31:2;;;;;;854:6896:23;2672:31:2;854:6896:23;;;;;;;;-1:-1:-1;;854:6896:23;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;854:6896:23;;;;;;:::i;:::-;;;;;1681:52:17;;854:6896:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;854:6896:23;;;;-1:-1:-1;;;;;854:6896:23;;:::i;:::-;2475:4:0;;:::i;:::-;854:6896:23;-1:-1:-1;;5530:35:23;854:6896;;;5530:35;854:6896;;;;;;;;;;;;;;;;;;;;4747:26:0;854:6896:23;;2475:4:0;854:6896:23;;;:::i;:::-;;;;;;;;;;3901:22:0;854:6896:23;2475:4:0;:::i;:::-;4747:26;:::i;:::-;;854:6896:23;;;;;;;;;-1:-1:-1;;854:6896:23;;;;;;;;;;844:40:14;854:6896:23;;;;;;844:40:14;;854:6896:23;;;;;;;;;;;;-1:-1:-1;854:6896:23;;-1:-1:-1;;854:6896:23;;;;;;:::i;:::-;;;1439:72:11;;:::i;:::-;-1:-1:-1;;;;;1790:6:23;;;854:6896;;;-1:-1:-1;;;1790:22:23;;;854:6896;1790:22;;;;;;;;;;;;;;;;;;;;854:6896;-1:-1:-1;1790:50:23;;;1868:9;1786:264;;854:6896;;2082:8;854:6896;;;;;;2082:130;;;;854:6896;2082:130;;854:6896;;2082:130;;;;;854:6896;;;;;;;2196:4;854:6896;;;;2082:130;;;;;;;;;;;1786:264;854:6896;;;;;;2229:22;;;;;;;;;;;;;;;;;;;;;;1786:264;-1:-1:-1;;2229:50:23;;;735:10:10;;2412:9:23;735:10:10;;2412:9:23;;:::i;:::-;854:6896;;2225:472;2661:9;735:10:10;;;2661:9:23;:::i;2229:22::-;;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;;;2229:22;;;;854:6896;;;;2229:22;;;;;;854:6896;;;;;;;;2082:130;;;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;;;;2082:130;;;;;;;;854:6896;;;;;;;;;1786:264;854:6896;;-1:-1:-1;;;1963:28:23;;1985:4;1963:28;;;854:6896;1963:28;;854:6896;1963:28;;;;;;;;;;;;;1786:264;2017:9;;854:6896;2017:9;854:6896;;;;1786:264;;;854:6896;;;;;-1:-1:-1;;;854:6896:23;;;;1963:28;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;1963:28;;;;;;;;1790:22;;;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;;;1790:22;;;;;;;;854:6896;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;854:6896:23;;;-1:-1:-1;;854:6896:23;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;1439:72:11;;;:::i;:::-;854:6896:23;-1:-1:-1;;;;;854:6896:23;;;;4047:8;854:6896;;4036:8;854:6896;;735:10:10;4047:8:23;;:::i;:::-;854:6896;4036:8;854:6896;;;;;4089:161;854:6896;4089:161;;;;;854:6896;;;;;;;;;;;;;;;;;;;;4234:4;854:6896;;;;;;;;4089:161;;;;;;;;;;;;;;854:6896;;;;;;4267:22;;;;-1:-1:-1;;;4267:22:23;;:6;854:6896;4267:22;;;;;;;;;;;;;;;;-1:-1:-1;;4267:50:23;;;735:10:10;;4450:9:23;735:10:10;;4450:9:23;;:::i;4089:161::-;;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;;;4089:161;;;;;;;;854:6896;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;854:6896:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1710:6:2;854:6896:23;;;;;;;;;;;-1:-1:-1;854:6896:23;;-1:-1:-1;;854:6896:23;;;;;;;-1:-1:-1;854:6896:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:6:14;;;854:6896:23;1350:10:14;:29;1346:87;;854:6896:23;;;;;;;;3956:5:14;854:6896:23;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;4042:14:14;854:6896:23;4021:41:14;;;;:99;;;854:6896:23;-1:-1:-1;4003:282:14;;;854:6896:23;;;5056:29:14;;;;4003:282;854:6896:23;;;;;;;;;;;;6180:44;854:6896;;;;;;;:::i;:::-;;;;4042:14:14;854:6896:23;;;:::i;:::-;;;;;;;;;;;;;6180:44;;;;;;;854:6896;6180:44;;854:6896;6180:44;;;854:6896;;;;;;-1:-1:-1;;;;;854:6896:23;;;;;;;;;;6180:44;;;;;;;;;;;;;;4003:282:14;854:6896:23;;6280:7;854:6896;;6280:42;;;;;;854:6896;;;6280:42;;854:6896;6280:42;;;;;;;;;;;854:6896;;;;;;-1:-1:-1;;;;;854:6896:23;;;;;;;;;;6280:42;;;;;;;;;;;4003:282:14;854:6896:23;;;;;;;6386:53;;;854:6896;6386:53;;;;854:6896;6386:12;;:53;;;;;;;;;;;;;4003:282:14;854:6896:23;;;6662:14;854:6896;;;6540:14;854:6896;;;;6540:14;;:::i;:::-;6652:8;854:6896;;6662:14;;:::i;6386:53::-;;;-1:-1:-1;6386:53:23;;-1:-1:-1;6386:53:23;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;;;;;;;;;6386:53;;854:6896;;;;6386:53;;;;;;854:6896;;;;;;;;;6280:42;854:6896;;;;;;;;;;;6280:42;;;854:6896;;;;;-1:-1:-1;;;854:6896:23;;;;6280:42;854:6896;;;;;;;;;6280:42;854:6896;;;6180:44;;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;;;:::i;:::-;6180:44;;;;854:6896;;;;6180:44;;;;;;854:6896;;;;;;;;;;;;;4021:99:14;854:6896:23;;4100:20:14;854:6896:23;4079:41:14;;4021:99;;;1346:87;854:6896:23;;1401:32:14;;;1350:10;1401:32;;;854:6896:23;1401:32:14;854:6896:23;;;;;;;;;;;;;;;;;;;;;;;2551:20:11;2475:4:0;;;:::i;:::-;1439:72:11;;:::i;:::-;2532:4;854:6896:23;;;;;;2532:4:11;854:6896:23;;735:10:10;854:6896:23;;2551:20:11;854:6896:23;;;;;;;;;-1:-1:-1;;854:6896:23;;;;-1:-1:-1;;;;;854:6896:23;;:::i;:::-;2475:4:0;;:::i;:::-;854:6896:23;-1:-1:-1;;5691:38:23;854:6896;;;5691:38;854:6896;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;854:6896:23;-1:-1:-1;;;;;3004:6:2;854:6896:23;-1:-1:-1;;854:6896:23;;3004:6:2;854:6896:23;;;;3052:40:2;;;;854:6896:23;;;;;;;;;;;-1:-1:-1;;854:6896:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;3196:5:14;854:6896:23;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3231:25:14;:54;;;;854:6896:23;3227:127:14;;;854:6896:23;;;;;;;;;;;;;;;;;;3227:127:14;854:6896:23;;;;;3309:33:14;;;;;;854:6896:23;3309:33:14;3231:54;3260:25;;;3231:54;;;854:6896:23;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;854:6896:23;;;;;5289:8;854:6896;;;;;5289:48;;;;;854:6896;5289:48;;854:6896;;5289:48;;;854:6896;;;;;;;;;;;5289:48;;;;;;;;854:6896;;;5289:48;;;854:6896;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;854:6896:23;;;;;;:::i;5289:48::-;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;5289:48;;;;;;;;;;;;854:6896;;;;5289:48;854:6896;;;;;;;;;;;;;;;;;;;;;;;;;;1920:7:11;854:6896:23;;;;;;;;;;;;;;;;;;;;;;;;;;5049:28;-1:-1:-1;;;5049:28:23;;5071:4;5049:28;;;854:6896;5049:28;:6;854:6896;5049:6;-1:-1:-1;;;;;5049:6:23;854:6896;5049:28;;;;;;;;;;;854:6896;5049:28;854:6896;;;;;;;5049:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;5049:28;854:6896;;;5049:28;;;;;;;-1:-1:-1;5049:28:23;;;854:6896;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;;;:::i;:::-;2466:41:14;;;2462:89;;2569:13;2584:25;;;;;;854:6896:23;;;2569:13:14;854:6896:23;;;;;;;;;;;;;;;;2628:5:14;854:6896:23;;;;;;;;;;;;;;;;;;;;;;;;;2569:13:14;;854:6896:23;;;;;-1:-1:-1;;;854:6896:23;;;;2462:89:14;854:6896:23;;;2529:22:14;;;;854:6896:23;;;;;;;-1:-1:-1;854:6896:23;;-1:-1:-1;;854:6896:23;;;;;;;:::i;:::-;;;;;;1439:72:11;;;:::i;:::-;-1:-1:-1;;;;;854:6896:23;;;;3076:8;854:6896;;3065:8;854:6896;;735:10:10;3076:8:23;;:::i;:::-;854:6896;3065:8;854:6896;;;;;3118:135;854:6896;3118:135;;;;;854:6896;;;;;;;;;;;3237:4;854:6896;;;;;;;;3118:135;;;;;;;;;;;;;;854:6896;3270:6;;854:6896;;;-1:-1:-1;;;3270:22:23;;;;;;;;;;;;;;;;;;;854:6896;-1:-1:-1;3270:50:23;;;3415:35;;;;;;;;;;;;;3266:372;735:10:10;3415:35:23;;;;;3266:372;854:6896;;3415:35;854:6896;;;;;;;;;3415:35;;;;;3266:372;854:6896;;;;;;;;6955:41;1005:42;6955:41;;;854:6896;735:10:10;854:6896:23;;;;;;;;;6955:41;;854:6896;;;;;;;;;;;;;;;-1:-1:-1;;;7029:28:23;;3237:4;854:6896;7029:28;;854:6896;7029:28;;854:6896;7029:28;;;;;;;;;;;;;;;;;;3266:372;854:6896;;;;;;;7121:5;854:6896;;;;;;;;;7070:151;;;;;;;-1:-1:-1;;;7070:151:23;;854:6896;;7070:151;;;854:6896;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7070:151;;;;;;;;;;;;3266:372;;854:6896;;7070:151;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;;7070:151;;;;;;854:6896;;;;;;;;7029:28;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;;;;-1:-1:-1;854:6896:23;7029:28;;;;;;;;854:6896;;;;;;;;;;;;;;-1:-1:-1;;;854:6896:23;;;;3270:22;;;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;;;3270:22;;;;;;;;;854:6896;;;;;;;;;3118:135;;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;3118:135;;;;;;;;;;854:6896;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:10;;-1:-1:-1;;;;;854:6896:23;;5421:34:0;5417:102;;854:6896:23;5529:37:0;854:6896:23;;;5529:37:0;:::i;5417:102::-;854:6896:23;;;5478:30:0;;;;854:6896:23;;;;;;;;;;;;;;4330:25:0;854:6896:23;;2475:4:0;854:6896:23;;;:::i;2475:4:0:-;4330:25;:::i;854:6896:23:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1056:23:23;854:6896;;;;;;;;;;;;;;;-1:-1:-1;;854:6896:23;;;;;;;;;;;;;;;;3901:22:0;854:6896:23;;;;;;;;;;;;;;;;-1:-1:-1;;854:6896:23;;;;;;;;;;;;;;2673:47:0;;2688:32;2673:47;;:87;;;;;854:6896:23;;;;;;;2673:87:0;876:25:12;861:40;;;2673:87:0;;;854:6896:23;;;;-1:-1:-1;;;;;854:6896:23;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;854:6896:23;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;854:6896:23;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;854:6896:23;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;854:6896:23;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;854:6896:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;854:6896:23;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;854:6896:23;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;3199:103:0:-;735:10:10;854:6896:23;;;;;;;;;;;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;854:6896:23;;;;3565:47:0;;;;735:10:10;3565:47:0;;;854:6896:23;;;;;3565:47:0;3199:103;854:6896:23;2954:6:0;854:6896:23;2954:6:0;854:6896:23;;;2954:6:0;854:6896:23;735:10:10;2954:6:0;854:6896:23;;;;;2954:6:0;854:6896:23;;;3519:23:0;3515:108;;3199:103;:::o;6179:316::-;;2954:6;854:6896:23;;;;;;;-1:-1:-1;;;;;854:6896:23;;;;;;;;;;;;;;;;;6276:23:0;6272:217;854:6896:23;;;;;;;;;;;;;;;;;;;;6347:4:0;854:6896:23;;;;;;;;6370:40:0;735:10:10;6370:40:0;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;;:::o;6730:317::-;;2954:6;854:6896:23;;;;;;;-1:-1:-1;;;;;854:6896:23;;;;;;;;;;;;;;;;;6824:217:0;854:6896:23;;;;;;;;;;;;;;;;;;;;;;;;;;;6922:40:0;735:10:10;6922:40:0;;;854:6896:23;6976:11:0;:::o;2002:128:11:-;854:6896:23;1920:7:11;854:6896:23;;2063:61:11;;2002:128::o;2063:61::-;2098:15;854:6896:23;;2098:15:11;;;;1702:188:8;854:6896:23;;;1829:53:8;;;;-1:-1:-1;;;;;854:6896:23;;;1829:53:8;;;854:6896:23;;;;;;;;;;;;;;;;1829:53:8;;;854:6896:23;;;;1829:53:8;;854:6896:23;;1829:53:8;;;;;;:::i;:::-;;:::i;:::-;1702:188::o;6758:471:23:-;854:6896;;;-1:-1:-1;;;;;854:6896:23;;;6955:41;;;;854:6896;;;;;;;;;;;;;;;;;;;;6955:41;;;;854:6896;6955:41;854:6896;;6955:41;:::i;:::-;-1:-1:-1;;;;;7029:6:23;854:6896;;;-1:-1:-1;;;7029:28:23;;7051:4;7029:28;;;854:6896;7029:28;;854:6896;7029:28;;;;;;;;;;;;;;-1:-1:-1;7029:28:23;;;6758:471;854:6896;;;;-1:-1:-1;854:6896:23;7121:5;854:6896;;;-1:-1:-1;854:6896:23;;;;7070:151;;;;;;;-1:-1:-1;;;7070:151:23;;854:6896;;7029:28;7070:151;;854:6896;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7070:151;;;;;;;;;;;;6758:471;;:::o;7070:151::-;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;6758:471::o;7070:151::-;;;;;;854:6896;;-1:-1:-1;854:6896:23;;;;;7029:28;;;;;;;;;;;;;;;;:::i;:::-;;;854:6896;;;;;;;;7029:28;;;;;;;;;854:6896;;;-1:-1:-1;854:6896:23;;;;;1796:162:2;-1:-1:-1;;;;;1710:6:2;854:6896:23;;;;735:10:10;1855:23:2;1851:101;;1796:162::o;1851:101::-;854:6896:23;;;1901:40:2;;;735:10:10;1901:40:2;;;854:6896:23;1901:40:2;854:6896:23;;;-1:-1:-1;;;;;854:6896:23;;;;;;:::o;1303:160:8:-;854:6896:23;;;1412:43:8;;;;-1:-1:-1;;;;;854:6896:23;;;1412:43:8;;;854:6896:23;;;;;;;;1412:43:8;;;854:6896:23;;;;1412:43:8;854:6896:23;4059:629:8;-1:-1:-1;;;;;854:6896:23;2847:1:9;3510:55;2847:1;3462:31;;;;;;;;;;;;854:6896:23;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;3462:31:9;854:6896:23;;;;3510:55:9;;:::i;:::-;854:6896:23;;;4551:22:8;;;;:57;;;;854:6896:23;4547:135:8;;;;;4059:629;:::o;4547:135::-;854:6896:23;;;;4631:40:8;;;;;;;854:6896:23;4631:40:8;4551:57;4578:30;;;;;3462:31:9;4578:30:8;;;854:6896:23;;;;3462:31:9;4578:30:8;854:6896:23;;;;;;;;;;4551:57:8;;;;;;854:6896:23;;;;;4625:582:9;;4797:8;;-1:-1:-1;854:6896:23;;5874:21:9;:17;;6046:142;;;;;;5870:383;6225:17;854:6896:23;;6225:17:9;;;;4793:408;854:6896:23;;5045:22:9;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;854:6896:23;;-1:-1:-1;;;;;854:6896:23;;5121:24:9;;;;854:6896:23;5121:24:9;;;854:6896:23;5121:24:9;5045:49;5071:18;;;:23;5045:49;"
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "TREASURY()": "2d2c5565",
              "bestRouter(uint256,address,address)": "61ee1031",
              "getEquitoFee()": "5c42132e",
              "getPeer(uint256)": "67ebb6b2",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "peers(uint256)": "be4f3e8f",
              "receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)": "879d182d",
              "renounceOwnership()": "715018a6",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "setPeers(uint256[],(bytes32,bytes32)[])": "59a1aae1",
              "supportsInterface(bytes4)": "01ffc9a7",
              "swapETHToTokens(address,uint256,uint256)": "a4c021e9",
              "swapTokensToETH(address,uint256,uint256,uint256)": "4cbb4505",
              "swapTokensToTokens(address,uint256,address,uint256,uint256)": "a1e83209",
              "toBase64(address)": "ef88e0e1",
              "transferOwnership(address)": "f2fde38b",
              "unPause()": "f7b188a5",
              "updateExecutor(address)": "74936c16",
              "updateFactory(address)": "d9f165dc"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenMap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMessageSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainSelector\",\"type\":\"uint256\"}],\"name\":\"InvalidPeer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RouterAddressCannotBeZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"bestRouter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"routerURI\",\"type\":\"string\"}],\"internalType\":\"struct IHoneyExecutor.Router\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEquitoFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainSelector\",\"type\":\"uint256\"}],\"name\":\"getPeer\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"peers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"sender\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"receiver\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"hashedData\",\"type\":\"bytes32\"}],\"internalType\":\"struct EquitoMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"messageData\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"chainSelectors\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64[]\",\"name\":\"addresses\",\"type\":\"tuple[]\"}],\"name\":\"setPeers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"}],\"name\":\"swapETHToTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"}],\"name\":\"swapTokensToETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"}],\"name\":\"swapTokensToTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toBase64\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"lower\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"upper\",\"type\":\"bytes32\"}],\"internalType\":\"struct bytes64\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newExecutor\",\"type\":\"address\"}],\"name\":\"updateExecutor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"updateFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidPeer(uint256)\":[{\"params\":{\"chainSelector\":\"The chain selector for which the peer address is requested.\"}}],\"InvalidRouter(address)\":[{\"params\":{\"router\":\"The address of the router that caused the error.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getPeer(uint256)\":{\"details\":\"Throws an error if the chain selector is not found in the mapping.\",\"params\":{\"chainSelector\":\"The chain selector for which the peer address is requested.\"},\"returns\":{\"_0\":\"The peer address for the given chain selector.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"params\":{\"message\":\"The Equito message received.\",\"messageData\":\"The data of the message received.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setPeers(uint256[],(bytes32,bytes32)[])\":{\"params\":{\"addresses\":\"The list of addresses corresponding to the chain selectors.\",\"chainSelectors\":\"The list of chain selectors.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidLength()\":[{\"notice\":\"Thrown when the lengths of arrays are invalid.\"}],\"InvalidMessageSender()\":[{\"notice\":\"Thrown when the sender of a message is invalid.\"}],\"InvalidPeer(uint256)\":[{\"notice\":\"Thrown when a Peer address is not found in the mapping, given a chain selector.\"}],\"InvalidRouter(address)\":[{\"notice\":\"Thrown when the router address is invalid.\"}],\"RouterAddressCannotBeZero()\":[{\"notice\":\"Thrown when the router address is zero.\"}]},\"kind\":\"user\",\"methods\":{\"getPeer(uint256)\":{\"notice\":\"Returns the peer address for a given chain selector.\"},\"receiveMessage((uint256,uint256,(bytes32,bytes32),uint256,(bytes32,bytes32),bytes32),bytes)\":{\"notice\":\"Receives a cross-chain message from the Router Contract.         It is a wrapper function for the `_receiveMessage` functions, that need to be overridden.         Only the Router Contract is allowed to call this function.\"},\"setPeers(uint256[],(bytes32,bytes32)[])\":{\"notice\":\"Allows the owner to set the peer addresses for different chain selectors.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/HoneyRouter01.sol\":\"HoneyRouter01\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/lib/EquitoApp.sol\":{\"keccak256\":\"0x3fd9cacecc2f0ada3e3f72e06a7de12dd9db39982c4981d9c5fa55b5979426fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41c4bb2c7196db2d86b748a5faf4a202ba777221b0221cdfef725a6b80eefc42\",\"dweb:/ipfs/QmSJqvPFG8Cg9ydUardJ2yFwAGAoFtZgn8xf15FHW6R3Qu\"]},\"contracts/lib/interfaces/IEquitoReceiver.sol\":{\"keccak256\":\"0xb1a49c5d13767c28a6e85b5885875ae6d258889418ece768df5fe4eaf5be4b8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5d697503f7864da23d917e1d37b8c41fef312bf5abb9c2e117f91fce83b17da\",\"dweb:/ipfs/QmeGYrLkcuhVWDQiBLcnx8u59cbSRqcFCrvj21CTz1Kd1E\"]},\"contracts/lib/interfaces/IRouter.sol\":{\"keccak256\":\"0x24b22f083be3aa163f88bdaae0587ea376792ad1bc55d841997c26b1e8ced957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21dd2b7a66e183e060e53bc00e63707c25dddd9241c384c538dcb87923253f06\",\"dweb:/ipfs/QmVTHUby1iTKLwUyJkBopSKQkRaQsnPa6YAcFRuVTUzknV\"]},\"contracts/lib/libraries/EquitoMessageLibrary.sol\":{\"keccak256\":\"0x386baff13825e343923a5b485c4d52b7abddac795593a1e404c78cb628f21f83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d529602c7b277ac9b549079ae5834af55394d2366f9da6ba76341ae69c452fc\",\"dweb:/ipfs/QmdHQYSJF6VbYCpo6xwN43JQGAUQRGzo7H1BWyqbyfV4GF\"]},\"contracts/lib/libraries/Errors.sol\":{\"keccak256\":\"0xaa84c699e7fbd3b4cc94b826b886be9826840e3777d3fce856f493a8958e5139\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ba3e0894f331050f7d0ea9c8f34c5be6bbcef5fadba162ec7f0c69a0aae0e57\",\"dweb:/ipfs/QmWwttocsizy87A7eaDUSRth8f9DHoW8conNiw1iFAeh94\"]},\"contracts/src/HoneyErrors.sol\":{\"keccak256\":\"0xd499f330b12eac68b60213dc06cb857ca6dae670cb7e83304a03fe8595c685c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d0242cf4ceb86bca689e570bfbbb77fde41f8ab934b35691920b88155d6ced3\",\"dweb:/ipfs/Qmc15GDFempmUTg9ZahbjycsPmkXvRphx244CPeb3odWSH\"]},\"contracts/src/HoneyFactory.sol\":{\"keccak256\":\"0x140605c5a83130a02fe1f0bb167f88f1730dca17ebffbcb8f6ae3e2ed7666d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53dfc6ace582ed4ccebf7f9948235a9b1cd4253de4debe2a3bd71e0c42126407\",\"dweb:/ipfs/QmdQ3TuTe22JmwRbnhjQ59jfobKP74B1t1MvvgPLQ4ewpy\"]},\"contracts/src/HoneyRouter01.sol\":{\"keccak256\":\"0xcfc5773211fee7175841cb50f1ca471ce2721bf9b7c5c45ee3aa42d08b5f2bf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4fc215d705f5a3ee3e72f22bc34d9b47fc953b219b62e5a6323886221acddf3\",\"dweb:/ipfs/QmbYT7iB4ggzW5PwyUvY6atA6f5HEWpgUWpS2TnZEDjyqh\"]},\"contracts/src/interfaces/IHoneyETHPool.sol\":{\"keccak256\":\"0xd939b1de51bfdfde3d272ee4b3b6c10665267f4e0dc2d2f9b4c26873df77f8c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f37a152302e928be8d725306c0e97fd9154d10d32097aa1abc9eb75ffefdd4cb\",\"dweb:/ipfs/QmXk1Aczzo1HzdJgFKvKPLnF8XWD1y7trjM9mzA7qCjn8J\"]},\"contracts/src/interfaces/IHoneyExecutor.sol\":{\"keccak256\":\"0x4ec0d9d3f0d7972062394e3eb090f31d0e54f647c8ed40419356e1be089e45d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2289fdcc640850a41d8f8e70fd055711a32316d0df723c05afbdd34951674c1e\",\"dweb:/ipfs/QmYnG4LFNxLeRhuaN949mc3uZm5J1GjnyjuzSXt3DgTUbf\"]},\"contracts/src/interfaces/IHoneyFactory.sol\":{\"keccak256\":\"0xf375e60efb31c933035f70e6c37596ce7c038ec0f59d4ff00a438d64ab0b7725\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef616abd4c127e9ac0397b3e43929d454b46aadbde944a880ecb353e925a42d4\",\"dweb:/ipfs/QmV926RFns4LfPo8WfzqYML1eHrvxwLSKHZnp9QBCsvUoU\"]},\"contracts/src/interfaces/IHoneyPool.sol\":{\"keccak256\":\"0x2685f6643c7ab6db1870e1d5609f529a8d29215c2136a1dc19c0186b5ab8ace1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://360dbe7dfab9f0edf59b457f8985bffc8c4fce8896281fa6e49ac08d19755f82\",\"dweb:/ipfs/QmeG9cfHrCS6Gpzs5U85i6ncPWd9niQiVhFdHYBD9B9AK6\"]},\"contracts/src/interfaces/IHoneyRouter01.sol\":{\"keccak256\":\"0x923f331fdb50d6d58ee4b63dee17a45665c992ee67634d789b0b5d33e83cb1ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://896bfe2a6bae2c0df3c39fb00598837cab20596e5a7630e48c05c433c202e683\",\"dweb:/ipfs/QmToqRDj1f715jmhVtpT2C85hER4tbGjmv64aNZAe3AcGh\"]},\"contracts/src/interfaces/ITokenMap.sol\":{\"keccak256\":\"0xc91f0d8aa37d1313133bd087a81ab4472f2beeb169603aa0f3ee8d35c296ee7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://185045936f4d9204ed3b38c6490d4a7f8108eeaa558fd9f8b78989f430b54d67\",\"dweb:/ipfs/QmRMzokYioC2UWDMqH1R8qQH4JY1xmwMBD1ANpsgv8azuh\"]},\"contracts/src/lib/HoneyFeeMath.sol\":{\"keccak256\":\"0x4c2a4a2ed03211fb946af8c6224cb34c5af1f8882b2b605be70189fde90fca73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d1da11267c024b5d34d3b9888e79ad0524e907002547225c63df79246f05ec6\",\"dweb:/ipfs/QmbAKm7sh1a8EjqohfPhYXSiKmUSJzEYjEyDG4H5wmrzMr\"]},\"contracts/src/pools/HoneyERC20Pool.sol\":{\"keccak256\":\"0xebe135162a336843f41d96b18958a1824e8c7e0006d316aeb3f9cd46adfb45f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d28f866360923941a23d197c8530e149042a584258353c943b61e1910c69995a\",\"dweb:/ipfs/QmTR6B1Y6paTMKQThHQPD732XjctPLMHt37dLsKEcNUk55\"]},\"contracts/src/pools/HoneyETHPool.sol\":{\"keccak256\":\"0x46c1cec9efb4413a906daab4d5e0159ec8c1e0f98e707b203288eb0ac3239d3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93578d25d5a731a942809a723f7b89ec0aec0ad5b9887dcec1b6336c25b321ff\",\"dweb:/ipfs/QmXsSPrhe9sscVn9bmF1qNX2Dpe1d62FnwGZECWsBhmFXj\"]}},\"version\":1}"
        }
      },
      "contracts/src/interfaces/IHoneyETHPool.sol": {
        "IHoneyETHPool": {
          "abi": [
            {
              "inputs": [],
              "name": "addLiquidity",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "secondaryChainSelector",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidity",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addLiquidity()": "e8078d94",
              "deposit()": "d0e30db0",
              "removeLiquidity(uint256,uint256)": "9d7de6b3",
              "withdraw(uint256,address)": "00f714ce"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondaryChainSelector\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IHoneyETHPool.sol\":\"IHoneyETHPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/src/interfaces/IHoneyETHPool.sol\":{\"keccak256\":\"0xd939b1de51bfdfde3d272ee4b3b6c10665267f4e0dc2d2f9b4c26873df77f8c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f37a152302e928be8d725306c0e97fd9154d10d32097aa1abc9eb75ffefdd4cb\",\"dweb:/ipfs/QmXk1Aczzo1HzdJgFKvKPLnF8XWD1y7trjM9mzA7qCjn8J\"]}},\"version\":1}"
        }
      },
      "contracts/src/interfaces/IHoneyExecutor.sol": {
        "IHoneyExecutor": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "routerURI",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "routerId",
                  "type": "address"
                }
              ],
              "name": "addRouter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                }
              ],
              "name": "bestRouter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "routerId",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "routerURI",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct IHoneyExecutor.Router",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRouterCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "routerId",
                  "type": "address"
                }
              ],
              "name": "removeRouter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "swapETHToTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "swapTokensToETH",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "swapTokensToTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addRouter(string,string,address)": "b89eb11d",
              "bestRouter(uint256,address,address)": "61ee1031",
              "getRouterCount()": "a5be5f7a",
              "removeRouter(address)": "6ae0b154",
              "swapETHToTokens(address,uint256,address)": "d219d1f3",
              "swapTokensToETH(address,uint256,uint256,address)": "95eb0870",
              "swapTokensToTokens(address,uint256,address,uint256,address)": "fc7a6a23"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"routerURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"routerId\",\"type\":\"address\"}],\"name\":\"addRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"bestRouter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"routerId\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"routerURI\",\"type\":\"string\"}],\"internalType\":\"struct IHoneyExecutor.Router\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouterCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"routerId\",\"type\":\"address\"}],\"name\":\"removeRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapETHToTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapTokensToETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swapTokensToTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IHoneyExecutor.sol\":\"IHoneyExecutor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/src/interfaces/IHoneyExecutor.sol\":{\"keccak256\":\"0x4ec0d9d3f0d7972062394e3eb090f31d0e54f647c8ed40419356e1be089e45d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2289fdcc640850a41d8f8e70fd055711a32316d0df723c05afbdd34951674c1e\",\"dweb:/ipfs/QmYnG4LFNxLeRhuaN949mc3uZm5J1GjnyjuzSXt3DgTUbf\"]}},\"version\":1}"
        }
      },
      "contracts/src/interfaces/IHoneyFactory.sol": {
        "IHoneyFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "sourceChainSelector",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "ReleasedTokens",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "createPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "destinationChainSelector",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "crossChainCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getEquitoFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "getPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "weth",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawFromPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createPool(address)": "9049f9d2",
              "crossChainCall(address,uint256,address,uint256)": "a628b47f",
              "getEquitoFee()": "5c42132e",
              "getPool(address)": "bbe4f6db",
              "weth()": "3fc8cef3",
              "withdrawFromPool(address,uint256)": "c1bf9e58"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceChainSelector\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReleasedTokens\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"crossChainCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEquitoFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IHoneyFactory.sol\":\"IHoneyFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/src/interfaces/IHoneyFactory.sol\":{\"keccak256\":\"0xf375e60efb31c933035f70e6c37596ce7c038ec0f59d4ff00a438d64ab0b7725\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef616abd4c127e9ac0397b3e43929d454b46aadbde944a880ecb353e925a42d4\",\"dweb:/ipfs/QmV926RFns4LfPo8WfzqYML1eHrvxwLSKHZnp9QBCsvUoU\"]}},\"version\":1}"
        }
      },
      "contracts/src/interfaces/IHoneyPool.sol": {
        "IHoneyPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidity",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "secondaryChainSelector",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidity",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "addLiquidity(uint256)": "51c6590a",
              "deposit(uint256)": "b6b55f25",
              "removeLiquidity(uint256,uint256)": "9d7de6b3",
              "withdraw(uint256,address)": "00f714ce"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondaryChainSelector\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IHoneyPool.sol\":\"IHoneyPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/src/interfaces/IHoneyPool.sol\":{\"keccak256\":\"0x2685f6643c7ab6db1870e1d5609f529a8d29215c2136a1dc19c0186b5ab8ace1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://360dbe7dfab9f0edf59b457f8985bffc8c4fce8896281fa6e49ac08d19755f82\",\"dweb:/ipfs/QmeG9cfHrCS6Gpzs5U85i6ncPWd9niQiVhFdHYBD9B9AK6\"]}},\"version\":1}"
        }
      },
      "contracts/src/interfaces/IHoneyRouter01.sol": {
        "IHoneyRouter01": {
          "abi": [
            {
              "inputs": [],
              "name": "getEquitoFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "destinationChainSelector",
                  "type": "uint256"
                }
              ],
              "name": "swapETHToTokens",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "destinationChainSelector",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensToETH",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "destinationChainSelector",
                  "type": "uint256"
                }
              ],
              "name": "swapTokensToTokens",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getEquitoFee()": "5c42132e",
              "swapETHToTokens(address,uint256,uint256)": "a4c021e9",
              "swapTokensToETH(address,uint256,uint256,uint256)": "4cbb4505",
              "swapTokensToTokens(address,uint256,address,uint256,uint256)": "a1e83209"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getEquitoFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"}],\"name\":\"swapETHToTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"}],\"name\":\"swapTokensToETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainSelector\",\"type\":\"uint256\"}],\"name\":\"swapTokensToTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/IHoneyRouter01.sol\":\"IHoneyRouter01\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/src/interfaces/IHoneyRouter01.sol\":{\"keccak256\":\"0x923f331fdb50d6d58ee4b63dee17a45665c992ee67634d789b0b5d33e83cb1ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://896bfe2a6bae2c0df3c39fb00598837cab20596e5a7630e48c05c433c202e683\",\"dweb:/ipfs/QmToqRDj1f715jmhVtpT2C85hER4tbGjmv64aNZAe3AcGh\"]}},\"version\":1}"
        }
      },
      "contracts/src/interfaces/ITokenMap.sol": {
        "ITokenMap": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
                }
              ],
              "name": "get",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "mappedToken",
                  "type": "address"
                }
              ],
              "name": "set",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "get(address,uint256)": "b464631b",
              "set(address,uint256,address)": "c9365cd5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"mappedToken\",\"type\":\"address\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/ITokenMap.sol\":\"ITokenMap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/src/interfaces/ITokenMap.sol\":{\"keccak256\":\"0xc91f0d8aa37d1313133bd087a81ab4472f2beeb169603aa0f3ee8d35c296ee7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://185045936f4d9204ed3b38c6490d4a7f8108eeaa558fd9f8b78989f430b54d67\",\"dweb:/ipfs/QmRMzokYioC2UWDMqH1R8qQH4JY1xmwMBD1ANpsgv8azuh\"]}},\"version\":1}"
        }
      },
      "contracts/src/lib/HoneyFeeMath.sol": {
        "HoneyFeeMath": {
          "abi": [
            {
              "inputs": [],
              "name": "DENOMINATOR",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "HONEY_FEE_PERCENTAGE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "percentage",
                  "type": "uint256"
                }
              ],
              "name": "extract",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "split",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523461001a576101cd9081610020823930815050f35b600080fdfe608060409080825260048036101561001657600080fd5b600091823560e01c9081637968669714610180575080638139e0f6146100d4578063918f8674146100bb5763dbceb0051461005057600080fd5b60203660031901126100b7578035916103e88084029084820414841517156100a457620f424090049182840393841161009157505082519182526020820152f35b906011602492634e487b7160e01b835252fd5b506011602492634e487b7160e01b835252fd5b5080fd5b8284816003193601126100b75760209051620f42408152f35b5091806003193601126100b75782359060243592620f424092838511610123578481029481860414901517156101105750602093505191048152f35b80601186634e487b7160e01b6024945252fd5b60648660208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f50657263656e746167652063616e6e6f742065786365656420313030250000006044820152fd5b8390816003193601126100b757806103e860209252f3fea26469706673582212203555b9dd6bf27bb3011cc04c88cdeb145df4ec576db291e7f543d8a4461b2b7a64736f6c63430008180033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1A JUMPI PUSH2 0x1CD SWAP1 DUP2 PUSH2 0x20 DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79686697 EQ PUSH2 0x180 JUMPI POP DUP1 PUSH4 0x8139E0F6 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x918F8674 EQ PUSH2 0xBB JUMPI PUSH4 0xDBCEB005 EQ PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB7 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x3E8 DUP1 DUP5 MUL SWAP1 DUP5 DUP3 DIV EQ DUP5 ISZERO OR ISZERO PUSH2 0xA4 JUMPI PUSH3 0xF4240 SWAP1 DIV SWAP2 DUP3 DUP5 SUB SWAP4 DUP5 GT PUSH2 0x91 JUMPI POP POP DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x11 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST POP PUSH1 0x11 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP5 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB7 JUMPI DUP3 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH3 0xF4240 SWAP3 DUP4 DUP6 GT PUSH2 0x123 JUMPI DUP5 DUP2 MUL SWAP5 DUP2 DUP7 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x110 JUMPI POP PUSH1 0x20 SWAP4 POP MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x24 SWAP5 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E746167652063616E6E6F74206578636565642031303025000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB7 JUMPI DUP1 PUSH2 0x3E8 PUSH1 0x20 SWAP3 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SSTORE 0xB9 0xDD PUSH12 0xF27BB3011CC04C88CDEB145D DELEGATECALL 0xEC JUMPI PUSH14 0xB291E7F543D8A4461B2B7A64736F PUSH13 0x63430008180033000000000000 ",
              "sourceMap": "62:820:30:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060409080825260048036101561001657600080fd5b600091823560e01c9081637968669714610180575080638139e0f6146100d4578063918f8674146100bb5763dbceb0051461005057600080fd5b60203660031901126100b7578035916103e88084029084820414841517156100a457620f424090049182840393841161009157505082519182526020820152f35b906011602492634e487b7160e01b835252fd5b506011602492634e487b7160e01b835252fd5b5080fd5b8284816003193601126100b75760209051620f42408152f35b5091806003193601126100b75782359060243592620f424092838511610123578481029481860414901517156101105750602093505191048152f35b80601186634e487b7160e01b6024945252fd5b60648660208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f50657263656e746167652063616e6e6f742065786365656420313030250000006044820152fd5b8390816003193601126100b757806103e860209252f3fea26469706673582212203555b9dd6bf27bb3011cc04c88cdeb145df4ec576db291e7f543d8a4461b2b7a64736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x79686697 EQ PUSH2 0x180 JUMPI POP DUP1 PUSH4 0x8139E0F6 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x918F8674 EQ PUSH2 0xBB JUMPI PUSH4 0xDBCEB005 EQ PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB7 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x3E8 DUP1 DUP5 MUL SWAP1 DUP5 DUP3 DIV EQ DUP5 ISZERO OR ISZERO PUSH2 0xA4 JUMPI PUSH3 0xF4240 SWAP1 DIV SWAP2 DUP3 DUP5 SUB SWAP4 DUP5 GT PUSH2 0x91 JUMPI POP POP DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x11 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST POP PUSH1 0x11 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP3 DUP5 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB7 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0xF4240 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB7 JUMPI DUP3 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH3 0xF4240 SWAP3 DUP4 DUP6 GT PUSH2 0x123 JUMPI DUP5 DUP2 MUL SWAP5 DUP2 DUP7 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x110 JUMPI POP PUSH1 0x20 SWAP4 POP MLOAD SWAP2 DIV DUP2 MSTORE RETURN JUMPDEST DUP1 PUSH1 0x11 DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x24 SWAP5 MSTORE MSTORE REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E746167652063616E6E6F74206578636565642031303025000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB7 JUMPI DUP1 PUSH2 0x3E8 PUSH1 0x20 SWAP3 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SSTORE 0xB9 0xDD PUSH12 0xF27BB3011CC04C88CDEB145D DELEGATECALL 0xEC JUMPI PUSH14 0xB291E7F543D8A4461B2B7A64736F PUSH13 0x63430008180033000000000000 ",
              "sourceMap": "62:820:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;62:820:30;;;;;;191:5;;62:820;;;;;;;;;;;;;;128:9;62:820;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;62:820:30;;;;;;;;;-1:-1:-1;;;62:820:30;;;;;;;;;;;;;;;;;;;;;;128:9;62:820;;;;;;;;;;;;;;;;;;;128:9;;760:25;;;;62:820;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;62:820:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;191:5;62:820;;;"
            },
            "methodIdentifiers": {
              "DENOMINATOR()": "918f8674",
              "HONEY_FEE_PERCENTAGE()": "79686697",
              "extract(uint256,uint256)": "8139e0f6",
              "split(uint256)": "dbceb005"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HONEY_FEE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"extract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/lib/HoneyFeeMath.sol\":\"HoneyFeeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/src/lib/HoneyFeeMath.sol\":{\"keccak256\":\"0x4c2a4a2ed03211fb946af8c6224cb34c5af1f8882b2b605be70189fde90fca73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d1da11267c024b5d34d3b9888e79ad0524e907002547225c63df79246f05ec6\",\"dweb:/ipfs/QmbAKm7sh1a8EjqohfPhYXSiKmUSJzEYjEyDG4H5wmrzMr\"]}},\"version\":1}"
        }
      },
      "contracts/src/pools/HoneyERC20Pool.sol": {
        "HoneyERC20Pool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "AddressEmptyCode",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "AddressInsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "AmountInIsZero",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FailedInnerCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "SafeERC20FailedOperation",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "addLiquidity",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "secondaryChainSelector",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidity",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalReserves",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 921,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_grantRole": {
                  "entryPoint": 953,
                  "id": 256,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a0346200039457601f90601f196001600160401b03620016e33881900385810184168501838111868210176200029857859282916040528339602094859181010312620003945751936001600160a01b038516850362000394576200006462000399565b60128152712437b732bca837b7b6102628102a37b5b2b760711b858201526200008c62000399565b91600392838152620484c560ec1b878201528251858111620002985784546001948582811c9216801562000389575b8a831014620003735781858493116200031d575b508990858311600114620002ba57600092620002ae575b505060001982871b1c191690841b1784555b8051948511620002985760049687548481811c911680156200028d575b8282101462000278578381116200022d575b5080928611600114620001c1575084955090849291600095620001b5575b50501b92600019911b1c19161790555b608052600780546001600160a01b031916339081179091556200017890620003b9565b5060405161129790816200044c82396080518181816101340152818161021301528181610393015281816104b60152818161073d0152610c9d0152f35b01519350388062000145565b939295859081168860005285600020956000905b89838310620002125750505010620001f7575b50505050811b01905562000155565b01519060f884600019921b161c1916905538808080620001e8565b858701518955909701969485019488935090810190620001d5565b88600052816000208480890160051c820192848a106200026e575b0160051c019085905b8281106200026157505062000127565b6000815501859062000251565b9250819262000248565b602289634e487b7160e01b6000525260246000fd5b90607f169062000115565b634e487b7160e01b600052604160045260246000fd5b015190503880620000e6565b908987941691886000528b6000209260005b8d828210620003065750508411620002ed575b505050811b018455620000f8565b015160001983891b60f8161c19169055388080620002df565b8385015186558a97909501949384019301620002cc565b90915086600052896000208580850160051c8201928c861062000369575b918891869594930160051c01915b82811062000359575050620000cf565b6000815585945088910162000349565b925081926200033b565b634e487b7160e01b600052602260045260246000fd5b91607f1691620000bb565b600080fd5b60408051919082016001600160401b038111838210176200029857604052565b6001600160a01b031660008181527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc602052604081205490919060ff16620004475781805260056020526040822081835260205260408220600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b509056fe608060408181526004918236101561001657600080fd5b600092833560e01c918262f714ce14610c535750816301ffc9a714610bb257816306fdde0314610abb578163095ea7b314610a1357816318160ddd146109f457816323b872dd146108e5578163248a9ca3146108ba5781632f2ff15d14610890578163313ce5671461087457816336568abe1461081557816351c6590a1461071057816370a08231146106da5781638f840ddd146106bb57816391d148541461067557816395d89b41146105705781639d7de6b314610292578163a217fddf14610277578163a9059cbb14610246578163b6b55f25146101eb578163d547741f146101a757508063dd62ed3e1461015c5763fc0c546a1461011657600080fd5b34610158578160031936011261015857602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b5034610158578060031936011261015857602091610178610cfa565b82610181610cdf565b926001600160a01b03809316815260018652209116600052825280600020549051908152f35b919050346101e757806003193601126101e7576101e391356101de60016101cc610cdf565b93838752600560205286200154610df4565b610ffd565b5080f35b8280fd5b8390346101585760203660031901126101585761024090356102388130336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611075565b600654610dda565b60065580f35b505034610158578060031936011261015857602090610270610266610cfa565b6024359033610ea0565b5160018152f35b50503461015857816003193601126101585751908152602090f35b9050816003193601126101e75780358015610561576102bf6102b660065483610d91565b60025490610dba565b92831561055257331561053c573385526020918583528186205481811061051057908087923384528386520383832055806002540360025582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a33085528482528481812054928584106000146104a0576001600160a01b0390858183600754168651928380927f5c42132e0000000000000000000000000000000000000000000000000000000082525afa918215610496578492610468575b505061038c8588610de7565b916103bb817f000000000000000000000000000000000000000000000000000000000000000016963388610e38565b6007541694853b1561046457608491855196879485937fa628b47f000000000000000000000000000000000000000000000000000000008552338b8601526024356024860152604485015260648401525af1801561045a57610428575b505050610240905b600654610de7565b67ffffffffffffffff8295939511610447575291506102403880610418565b602483604187634e487b7160e01b835252fd5b81513d87823e3d90fd5b8380fd5b90809250813d831161048f575b61047f8183610d59565b810103126101e757513880610380565b503d610475565b85513d86823e3d90fd5b5050928092506104db9150336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610e38565b82803415610507575b8180809234903390f1156104fc576102409150610420565b5051903d90823e3d90fd5b506108fc6104e4565b825163391434e360e21b8152338187019081526020810192909252604082018390529081906060010390fd5b82856024925191634b637e8f60e11b8352820152fd5b905051636067798b60e01b8152fd5b509051636067798b60e01b8152fd5b83833461015857816003193601126101585780519180938054916001908360011c926001851694851561066b575b60209586861081146106585785895290811561063457506001146105dc575b6105d887876105ce828c0383610d59565b5191829182610d10565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061062157505050826105d8946105ce928201019486806105bd565b8054868501880152928601928101610603565b60ff19168887015250505050151560051b83010192506105ce826105d886806105bd565b602484602285634e487b7160e01b835252fd5b93607f169361059e565b9050346101e757816003193601126101e7578160209360ff92610696610cdf565b90358252600586526001600160a01b0383832091168252855220541690519015158152f35b5050346101585781600319360112610158576020906006549051908152f35b50503461015857602036600319011261015857806020926001600160a01b03610701610cfa565b16815280845220549051908152f35b83915034610158576020366003190112610158578035908115610807576107628230336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611075565b600654806107ec575069021e19e0c9bab2400000905b33156107d65750610240929361079082600254610dda565b6002553385528460205280852082815401905551908152837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a3600654610dda565b6024908486519163ec442f0560e01b8352820152fd5b610801906107fc60025485610d91565b610dba565b90610778565b8351636067798b60e01b8152fd5b83833461015857806003193601126101585761082f610cdf565b90336001600160a01b0383160361084c57506101e3919235610ffd565b8390517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b5050346101585781600319360112610158576020905160128152f35b919050346101e757806003193601126101e7576101e391356108b560016101cc610cdf565b610f7c565b9050346101e75760203660031901126101e75781602093600192358152600585522001549051908152f35b905082346109f15760603660031901126109f157610901610cfa565b610909610cdf565b91604435936001600160a01b038316808352600160205286832033845260205286832054916000198303610946575b602088610270898989610ea0565b8683106109ac5781156109965733156109805750825260016020908152868320338452815291869020908590039055829061027087610938565b60249084895191634a1406b160e11b8352820152fd5b6024908489519163e602df0560e01b8352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346101585781600319360112610158576020906002549051908152f35b9050346101e757816003193601126101e757610a2d610cfa565b602435903315610aa5576001600160a01b0316918215610a8f57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b60249085855191634a1406b160e11b8352820152fd5b6024838686519163e602df0560e01b8352820152fd5b919050346101e757826003193601126101e75780519183600354906001908260011c92600181168015610ba8575b6020958686108214610b955750848852908115610b735750600114610b1a575b6105d886866105ce828b0383610d59565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610b6057505050826105d8946105ce928201019438610b09565b8054868501880152928601928101610b43565b60ff191687860152505050151560051b83010192506105ce826105d838610b09565b836022602492634e487b7160e01b835252fd5b93607f1693610ae9565b9050346101e75760203660031901126101e75735907fffffffff0000000000000000000000000000000000000000000000000000000082168092036101e757602092507f7965db0b000000000000000000000000000000000000000000000000000000008214918215610c29575b50519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000014915038610c20565b9091503461046457826003193601126104645760ff610c70610cdf565b9385805260056020528086203387526020528520541615610cc5575090610cc29135906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610e38565b80f35b8360449263e2517d3f60e01b835233908301526024820152fd5b602435906001600160a01b0382168203610cf557565b600080fd5b600435906001600160a01b0382168203610cf557565b6020808252825181830181905290939260005b828110610d4557505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610d23565b90601f8019910116810190811067ffffffffffffffff821117610d7b57604052565b634e487b7160e01b600052604160045260246000fd5b81810292918115918404141715610da457565b634e487b7160e01b600052601160045260246000fd5b8115610dc4570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610da457565b91908203918211610da457565b80600052600560205260406000203360005260205260ff6040600020541615610e1a5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b916001600160a01b03604051927fa9059cbb000000000000000000000000000000000000000000000000000000006020850152166024830152604482015260448152608081019181831067ffffffffffffffff841117610d7b57610e9e926040526110e0565b565b916001600160a01b03808416928315610f645716928315610f4c5760009083825281602052604082205490838210610f1a575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b602460405163ec442f0560e01b815260006004820152fd5b6024604051634b637e8f60e11b815260006004820152fd5b9060009180835260056020526001600160a01b036040842092169182845260205260ff60408420541615600014610ff85780835260056020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835260056020526001600160a01b036040842092169182845260205260ff604084205416600014610ff8578083526005602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b9290604051927f23b872dd0000000000000000000000000000000000000000000000000000000060208501526001600160a01b03809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff841117610d7b57610e9e926040525b6001600160a01b031690600080826020829451910182865af13d156111c2573d9067ffffffffffffffff82116111ae579061113d916040519161112d6020601f19601f8401160184610d59565b82523d84602084013e5b846111ce565b908151918215159283611186575b5050506111555750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b8192935090602091810103126101585760200151908115918215036109f1575038808061114b565b602483634e487b7160e01b81526041600452fd5b61113d90606090611137565b9061120d57508051156111e357805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580611258575b61121e575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b1561121656fea264697066735822122012ab25788f562d1572c1d8cd63b8e9c9973e8b8171b87e1609e4b88c0db420c164736f6c63430008180033",
              "opcodes": "PUSH1 0xA0 CALLVALUE PUSH3 0x394 JUMPI PUSH1 0x1F SWAP1 PUSH1 0x1F NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH3 0x16E3 CODESIZE DUP2 SWAP1 SUB DUP6 DUP2 ADD DUP5 AND DUP6 ADD DUP4 DUP2 GT DUP7 DUP3 LT OR PUSH3 0x298 JUMPI DUP6 SWAP3 DUP3 SWAP2 PUSH1 0x40 MSTORE DUP4 CODECOPY PUSH1 0x20 SWAP5 DUP6 SWAP2 DUP2 ADD SUB SLT PUSH3 0x394 JUMPI MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH3 0x394 JUMPI PUSH3 0x64 PUSH3 0x399 JUMP JUMPDEST PUSH1 0x12 DUP2 MSTORE PUSH18 0x2437B732BCA837B7B6102628102A37B5B2B7 PUSH1 0x71 SHL DUP6 DUP3 ADD MSTORE PUSH3 0x8C PUSH3 0x399 JUMP JUMPDEST SWAP2 PUSH1 0x3 SWAP3 DUP4 DUP2 MSTORE PUSH3 0x484C5 PUSH1 0xEC SHL DUP8 DUP3 ADD MSTORE DUP3 MLOAD DUP6 DUP2 GT PUSH3 0x298 JUMPI DUP5 SLOAD PUSH1 0x1 SWAP5 DUP6 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x389 JUMPI JUMPDEST DUP11 DUP4 LT EQ PUSH3 0x373 JUMPI DUP2 DUP6 DUP5 SWAP4 GT PUSH3 0x31D JUMPI JUMPDEST POP DUP10 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x2BA JUMPI PUSH1 0x0 SWAP3 PUSH3 0x2AE JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP8 SHL SHR NOT AND SWAP1 DUP5 SHL OR DUP5 SSTORE JUMPDEST DUP1 MLOAD SWAP5 DUP6 GT PUSH3 0x298 JUMPI PUSH1 0x4 SWAP7 DUP8 SLOAD DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x28D JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x278 JUMPI DUP4 DUP2 GT PUSH3 0x22D JUMPI JUMPDEST POP DUP1 SWAP3 DUP7 GT PUSH1 0x1 EQ PUSH3 0x1C1 JUMPI POP DUP5 SWAP6 POP SWAP1 DUP5 SWAP3 SWAP2 PUSH1 0x0 SWAP6 PUSH3 0x1B5 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x80 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x178 SWAP1 PUSH3 0x3B9 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1297 SWAP1 DUP2 PUSH3 0x44C DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x134 ADD MSTORE DUP2 DUP2 PUSH2 0x213 ADD MSTORE DUP2 DUP2 PUSH2 0x393 ADD MSTORE DUP2 DUP2 PUSH2 0x4B6 ADD MSTORE DUP2 DUP2 PUSH2 0x73D ADD MSTORE PUSH2 0xC9D ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x145 JUMP JUMPDEST SWAP4 SWAP3 SWAP6 DUP6 SWAP1 DUP2 AND DUP9 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP4 DUP4 LT PUSH3 0x212 JUMPI POP POP POP LT PUSH3 0x1F7 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x155 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x1E8 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x1D5 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP10 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP11 LT PUSH3 0x26E JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x261 JUMPI POP POP PUSH3 0x127 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x251 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x248 JUMP JUMPDEST PUSH1 0x22 DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x115 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xE6 JUMP JUMPDEST SWAP1 DUP10 DUP8 SWAP5 AND SWAP2 DUP9 PUSH1 0x0 MSTORE DUP12 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP14 DUP3 DUP3 LT PUSH3 0x306 JUMPI POP POP DUP5 GT PUSH3 0x2ED JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP5 SSTORE PUSH3 0xF8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP10 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x2DF JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP11 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x2CC JUMP JUMPDEST SWAP1 SWAP2 POP DUP7 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP7 LT PUSH3 0x369 JUMPI JUMPDEST SWAP2 DUP9 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x359 JUMPI POP POP PUSH3 0xCF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP9 SWAP2 ADD PUSH3 0x349 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x33B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0xBB JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x298 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x447 JUMPI DUP2 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH3 0xF714CE EQ PUSH2 0xC53 JUMPI POP DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xBB2 JUMPI DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xABB JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0xA13 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x9F4 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x8E5 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x8BA JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x890 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x874 JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x815 JUMPI DUP2 PUSH4 0x51C6590A EQ PUSH2 0x710 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x6DA JUMPI DUP2 PUSH4 0x8F840DDD EQ PUSH2 0x6BB JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x675 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x570 JUMPI DUP2 PUSH4 0x9D7DE6B3 EQ PUSH2 0x292 JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x277 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x246 JUMPI DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x1EB JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1A7 JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x15C JUMPI PUSH4 0xFC0C546A EQ PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x178 PUSH2 0xCFA JUMP JUMPDEST DUP3 PUSH2 0x181 PUSH2 0xCDF JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0x1E3 SWAP2 CALLDATALOAD PUSH2 0x1DE PUSH1 0x1 PUSH2 0x1CC PUSH2 0xCDF JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI PUSH2 0x240 SWAP1 CALLDATALOAD PUSH2 0x238 DUP2 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x270 PUSH2 0x266 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xEA0 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP1 CALLDATALOAD DUP1 ISZERO PUSH2 0x561 JUMPI PUSH2 0x2BF PUSH2 0x2B6 PUSH1 0x6 SLOAD DUP4 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0xDBA JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x552 JUMPI CALLER ISZERO PUSH2 0x53C JUMPI CALLER DUP6 MSTORE PUSH1 0x20 SWAP2 DUP6 DUP4 MSTORE DUP2 DUP7 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x510 JUMPI SWAP1 DUP1 DUP8 SWAP3 CALLER DUP5 MSTORE DUP4 DUP7 MSTORE SUB DUP4 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 CALLER SWAP3 LOG3 ADDRESS DUP6 MSTORE DUP5 DUP3 MSTORE DUP5 DUP2 DUP2 KECCAK256 SLOAD SWAP3 DUP6 DUP5 LT PUSH1 0x0 EQ PUSH2 0x4A0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP6 DUP2 DUP4 PUSH1 0x7 SLOAD AND DUP7 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C42132E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x496 JUMPI DUP5 SWAP3 PUSH2 0x468 JUMPI JUMPDEST POP POP PUSH2 0x38C DUP6 DUP9 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 PUSH2 0x3BB DUP2 PUSH32 0x0 AND SWAP7 CALLER DUP9 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x7 SLOAD AND SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0x464 JUMPI PUSH1 0x84 SWAP2 DUP6 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH32 0xA628B47F00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER DUP12 DUP7 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x45A JUMPI PUSH2 0x428 JUMPI JUMPDEST POP POP POP PUSH2 0x240 SWAP1 JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDE7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SWAP6 SWAP4 SWAP6 GT PUSH2 0x447 JUMPI MSTORE SWAP2 POP PUSH2 0x240 CODESIZE DUP1 PUSH2 0x418 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH1 0x41 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x48F JUMPI JUMPDEST PUSH2 0x47F DUP2 DUP4 PUSH2 0xD59 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E7 JUMPI MLOAD CODESIZE DUP1 PUSH2 0x380 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x475 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP SWAP3 DUP1 SWAP3 POP PUSH2 0x4DB SWAP2 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xE38 JUMP JUMPDEST DUP3 DUP1 CALLVALUE ISZERO PUSH2 0x507 JUMPI JUMPDEST DUP2 DUP1 DUP1 SWAP3 CALLVALUE SWAP1 CALLER SWAP1 CALL ISZERO PUSH2 0x4FC JUMPI PUSH2 0x240 SWAP2 POP PUSH2 0x420 JUMP JUMPDEST POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x4E4 JUMP JUMPDEST DUP3 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER DUP2 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 DUP6 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x66B JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x658 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x634 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5DC JUMPI JUMPDEST PUSH2 0x5D8 DUP8 DUP8 PUSH2 0x5CE DUP3 DUP13 SUB DUP4 PUSH2 0xD59 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD10 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x621 JUMPI POP POP POP DUP3 PUSH2 0x5D8 SWAP5 PUSH2 0x5CE SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0x5BD JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x603 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x5CE DUP3 PUSH2 0x5D8 DUP7 DUP1 PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x59E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x696 PUSH2 0xCDF JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x701 PUSH2 0xCFA JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI DUP1 CALLDATALOAD SWAP1 DUP2 ISZERO PUSH2 0x807 JUMPI PUSH2 0x762 DUP3 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 PUSH2 0x7EC JUMPI POP PUSH10 0x21E19E0C9BAB2400000 SWAP1 JUMPDEST CALLER ISZERO PUSH2 0x7D6 JUMPI POP PUSH2 0x240 SWAP3 SWAP4 PUSH2 0x790 DUP3 PUSH1 0x2 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE DUP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x6 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP7 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x801 SWAP1 PUSH2 0x7FC PUSH1 0x2 SLOAD DUP6 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST SWAP1 PUSH2 0x778 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH2 0x82F PUSH2 0xCDF JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x84C JUMPI POP PUSH2 0x1E3 SWAP2 SWAP3 CALLDATALOAD PUSH2 0xFFD JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0x1E3 SWAP2 CALLDATALOAD PUSH2 0x8B5 PUSH1 0x1 PUSH2 0x1CC PUSH2 0xCDF JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x9F1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9F1 JUMPI PUSH2 0x901 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x909 PUSH2 0xCDF JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x946 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x270 DUP10 DUP10 DUP10 PUSH2 0xEA0 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x9AC JUMPI DUP2 ISZERO PUSH2 0x996 JUMPI CALLER ISZERO PUSH2 0x980 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x270 DUP8 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0xA2D PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xA8F JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 DUP6 DUP6 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 DUP7 DUP7 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP1 DUP3 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xBA8 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xB95 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB73 JUMPI POP PUSH1 0x1 EQ PUSH2 0xB1A JUMPI JUMPDEST PUSH2 0x5D8 DUP7 DUP7 PUSH2 0x5CE DUP3 DUP12 SUB DUP4 PUSH2 0xD59 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xB60 JUMPI POP POP POP DUP3 PUSH2 0x5D8 SWAP5 PUSH2 0x5CE SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xB09 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x5CE DUP3 PUSH2 0x5D8 CODESIZE PUSH2 0xB09 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xAE9 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E7 JUMPI CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1E7 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xC29 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP CODESIZE PUSH2 0xC20 JUMP JUMPDEST SWAP1 SWAP2 POP CALLVALUE PUSH2 0x464 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x464 JUMPI PUSH1 0xFF PUSH2 0xC70 PUSH2 0xCDF JUMP JUMPDEST SWAP4 DUP6 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 DUP7 KECCAK256 CALLER DUP8 MSTORE PUSH1 0x20 MSTORE DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0xCC5 JUMPI POP SWAP1 PUSH2 0xCC2 SWAP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xE38 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP4 PUSH1 0x44 SWAP3 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCF5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCF5 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xD45 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xD23 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xDA4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xDC4 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xDA4 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xDA4 JUMPI JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xE1A JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0xD7B JUMPI PUSH2 0xE9E SWAP3 PUSH1 0x40 MSTORE PUSH2 0x10E0 JUMP JUMPDEST JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xF64 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xF1A JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xFF8 JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xFF8 JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0xD7B JUMPI PUSH2 0xE9E SWAP3 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 MLOAD SWAP2 ADD DUP3 DUP7 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x11C2 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x11AE JUMPI SWAP1 PUSH2 0x113D SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x112D PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0xD59 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE DUP5 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP5 PUSH2 0x11CE JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x1186 JUMPI JUMPDEST POP POP POP PUSH2 0x1155 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x158 JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO SUB PUSH2 0x9F1 JUMPI POP CODESIZE DUP1 DUP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x113D SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x1137 JUMP JUMPDEST SWAP1 PUSH2 0x120D JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x11E3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x1258 JUMPI JUMPDEST PUSH2 0x121E JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1216 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xAB 0x25 PUSH25 0x8F562D1572C1D8CD63B8E9C9973E8B8171B87E1609E4B88C0D 0xB4 KECCAK256 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "451:3549:31:-:0;;;;;;-1:-1:-1;;;;;;;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;451:3549:31;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;451:3549:31;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;-1:-1:-1;451:3549:31;;;;-1:-1:-1;;;;451:3549:31;;;;;;;;;;;;;;;;;;;;1985:17:4;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;;;;;;;914:14;;941:38;451:3549;;-1:-1:-1;;;;;;451:3549:31;735:10:10;451:3549:31;;;;;;992:44;;;:::i;:::-;;451:3549;;;;;;;;914:14;451:3549;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;-1:-1:-1;451:3549:31;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;-1:-1:-1;451:3549:31;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;-1:-1:-1;451:3549:31;;1985:17:4;451:3549:31;;-1:-1:-1;451:3549:31;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;-1:-1:-1;451:3549:31;;-1:-1:-1;451:3549:31;;-1:-1:-1;451:3549:31;;;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;;;;-1:-1:-1;;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;;;;-1:-1:-1;451:3549:31;;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;-1:-1:-1;;;;;451:3549:31;;;;;;;;;;:::o;6179:316:0:-;-1:-1:-1;;;;;451:3549:31;;;;;;;;;;;;;;;;;;;;;;2954:6:0;451:3549:31;;;;;;;;;;;;;6347:4:0;451:3549:31;;;;;;;;735:10:10;6370:40:0;;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 3295,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_8273": {
                  "entryPoint": 3322,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 3344,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 3546,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 3514,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 3473,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 3559,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 3417,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_callOptionalReturn": {
                  "entryPoint": 4320,
                  "id": 1558,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkRole": {
                  "entryPoint": 3572,
                  "id": 93,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_grantRole": {
                  "entryPoint": 3964,
                  "id": 256,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_revokeRole": {
                  "entryPoint": 4093,
                  "id": 294,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_safeTransfer": {
                  "entryPoint": 3640,
                  "id": 1368,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_safeTransferFrom": {
                  "entryPoint": 4213,
                  "id": 1395,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 3744,
                  "id": 908,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_verifyCallResultFromTarget": {
                  "entryPoint": 4558,
                  "id": 1820,
                  "parameterSlots": 3,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "4340": [
                  {
                    "length": 32,
                    "start": 308
                  },
                  {
                    "length": 32,
                    "start": 531
                  },
                  {
                    "length": 32,
                    "start": 915
                  },
                  {
                    "length": 32,
                    "start": 1206
                  },
                  {
                    "length": 32,
                    "start": 1853
                  },
                  {
                    "length": 32,
                    "start": 3229
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060408181526004918236101561001657600080fd5b600092833560e01c918262f714ce14610c535750816301ffc9a714610bb257816306fdde0314610abb578163095ea7b314610a1357816318160ddd146109f457816323b872dd146108e5578163248a9ca3146108ba5781632f2ff15d14610890578163313ce5671461087457816336568abe1461081557816351c6590a1461071057816370a08231146106da5781638f840ddd146106bb57816391d148541461067557816395d89b41146105705781639d7de6b314610292578163a217fddf14610277578163a9059cbb14610246578163b6b55f25146101eb578163d547741f146101a757508063dd62ed3e1461015c5763fc0c546a1461011657600080fd5b34610158578160031936011261015857602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b5034610158578060031936011261015857602091610178610cfa565b82610181610cdf565b926001600160a01b03809316815260018652209116600052825280600020549051908152f35b919050346101e757806003193601126101e7576101e391356101de60016101cc610cdf565b93838752600560205286200154610df4565b610ffd565b5080f35b8280fd5b8390346101585760203660031901126101585761024090356102388130336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611075565b600654610dda565b60065580f35b505034610158578060031936011261015857602090610270610266610cfa565b6024359033610ea0565b5160018152f35b50503461015857816003193601126101585751908152602090f35b9050816003193601126101e75780358015610561576102bf6102b660065483610d91565b60025490610dba565b92831561055257331561053c573385526020918583528186205481811061051057908087923384528386520383832055806002540360025582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a33085528482528481812054928584106000146104a0576001600160a01b0390858183600754168651928380927f5c42132e0000000000000000000000000000000000000000000000000000000082525afa918215610496578492610468575b505061038c8588610de7565b916103bb817f000000000000000000000000000000000000000000000000000000000000000016963388610e38565b6007541694853b1561046457608491855196879485937fa628b47f000000000000000000000000000000000000000000000000000000008552338b8601526024356024860152604485015260648401525af1801561045a57610428575b505050610240905b600654610de7565b67ffffffffffffffff8295939511610447575291506102403880610418565b602483604187634e487b7160e01b835252fd5b81513d87823e3d90fd5b8380fd5b90809250813d831161048f575b61047f8183610d59565b810103126101e757513880610380565b503d610475565b85513d86823e3d90fd5b5050928092506104db9150336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610e38565b82803415610507575b8180809234903390f1156104fc576102409150610420565b5051903d90823e3d90fd5b506108fc6104e4565b825163391434e360e21b8152338187019081526020810192909252604082018390529081906060010390fd5b82856024925191634b637e8f60e11b8352820152fd5b905051636067798b60e01b8152fd5b509051636067798b60e01b8152fd5b83833461015857816003193601126101585780519180938054916001908360011c926001851694851561066b575b60209586861081146106585785895290811561063457506001146105dc575b6105d887876105ce828c0383610d59565b5191829182610d10565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061062157505050826105d8946105ce928201019486806105bd565b8054868501880152928601928101610603565b60ff19168887015250505050151560051b83010192506105ce826105d886806105bd565b602484602285634e487b7160e01b835252fd5b93607f169361059e565b9050346101e757816003193601126101e7578160209360ff92610696610cdf565b90358252600586526001600160a01b0383832091168252855220541690519015158152f35b5050346101585781600319360112610158576020906006549051908152f35b50503461015857602036600319011261015857806020926001600160a01b03610701610cfa565b16815280845220549051908152f35b83915034610158576020366003190112610158578035908115610807576107628230336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611075565b600654806107ec575069021e19e0c9bab2400000905b33156107d65750610240929361079082600254610dda565b6002553385528460205280852082815401905551908152837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a3600654610dda565b6024908486519163ec442f0560e01b8352820152fd5b610801906107fc60025485610d91565b610dba565b90610778565b8351636067798b60e01b8152fd5b83833461015857806003193601126101585761082f610cdf565b90336001600160a01b0383160361084c57506101e3919235610ffd565b8390517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b5050346101585781600319360112610158576020905160128152f35b919050346101e757806003193601126101e7576101e391356108b560016101cc610cdf565b610f7c565b9050346101e75760203660031901126101e75781602093600192358152600585522001549051908152f35b905082346109f15760603660031901126109f157610901610cfa565b610909610cdf565b91604435936001600160a01b038316808352600160205286832033845260205286832054916000198303610946575b602088610270898989610ea0565b8683106109ac5781156109965733156109805750825260016020908152868320338452815291869020908590039055829061027087610938565b60249084895191634a1406b160e11b8352820152fd5b6024908489519163e602df0560e01b8352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b80fd5b5050346101585781600319360112610158576020906002549051908152f35b9050346101e757816003193601126101e757610a2d610cfa565b602435903315610aa5576001600160a01b0316918215610a8f57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b60249085855191634a1406b160e11b8352820152fd5b6024838686519163e602df0560e01b8352820152fd5b919050346101e757826003193601126101e75780519183600354906001908260011c92600181168015610ba8575b6020958686108214610b955750848852908115610b735750600114610b1a575b6105d886866105ce828b0383610d59565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610b6057505050826105d8946105ce928201019438610b09565b8054868501880152928601928101610b43565b60ff191687860152505050151560051b83010192506105ce826105d838610b09565b836022602492634e487b7160e01b835252fd5b93607f1693610ae9565b9050346101e75760203660031901126101e75735907fffffffff0000000000000000000000000000000000000000000000000000000082168092036101e757602092507f7965db0b000000000000000000000000000000000000000000000000000000008214918215610c29575b50519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000014915038610c20565b9091503461046457826003193601126104645760ff610c70610cdf565b9385805260056020528086203387526020528520541615610cc5575090610cc29135906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610e38565b80f35b8360449263e2517d3f60e01b835233908301526024820152fd5b602435906001600160a01b0382168203610cf557565b600080fd5b600435906001600160a01b0382168203610cf557565b6020808252825181830181905290939260005b828110610d4557505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610d23565b90601f8019910116810190811067ffffffffffffffff821117610d7b57604052565b634e487b7160e01b600052604160045260246000fd5b81810292918115918404141715610da457565b634e487b7160e01b600052601160045260246000fd5b8115610dc4570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610da457565b91908203918211610da457565b80600052600560205260406000203360005260205260ff6040600020541615610e1a5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b916001600160a01b03604051927fa9059cbb000000000000000000000000000000000000000000000000000000006020850152166024830152604482015260448152608081019181831067ffffffffffffffff841117610d7b57610e9e926040526110e0565b565b916001600160a01b03808416928315610f645716928315610f4c5760009083825281602052604082205490838210610f1a575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b602460405163ec442f0560e01b815260006004820152fd5b6024604051634b637e8f60e11b815260006004820152fd5b9060009180835260056020526001600160a01b036040842092169182845260205260ff60408420541615600014610ff85780835260056020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835260056020526001600160a01b036040842092169182845260205260ff604084205416600014610ff8578083526005602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b9290604051927f23b872dd0000000000000000000000000000000000000000000000000000000060208501526001600160a01b03809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff841117610d7b57610e9e926040525b6001600160a01b031690600080826020829451910182865af13d156111c2573d9067ffffffffffffffff82116111ae579061113d916040519161112d6020601f19601f8401160184610d59565b82523d84602084013e5b846111ce565b908151918215159283611186575b5050506111555750565b602490604051907f5274afe70000000000000000000000000000000000000000000000000000000082526004820152fd5b8192935090602091810103126101585760200151908115918215036109f1575038808061114b565b602483634e487b7160e01b81526041600452fd5b61113d90606090611137565b9061120d57508051156111e357805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580611258575b61121e575090565b6024906001600160a01b03604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b1561121656fea264697066735822122012ab25788f562d1572c1d8cd63b8e9c9973e8b8171b87e1609e4b88c0db420c164736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH3 0xF714CE EQ PUSH2 0xC53 JUMPI POP DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0xBB2 JUMPI DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0xABB JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0xA13 JUMPI DUP2 PUSH4 0x18160DDD EQ PUSH2 0x9F4 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x8E5 JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x8BA JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x890 JUMPI DUP2 PUSH4 0x313CE567 EQ PUSH2 0x874 JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x815 JUMPI DUP2 PUSH4 0x51C6590A EQ PUSH2 0x710 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x6DA JUMPI DUP2 PUSH4 0x8F840DDD EQ PUSH2 0x6BB JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x675 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x570 JUMPI DUP2 PUSH4 0x9D7DE6B3 EQ PUSH2 0x292 JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x277 JUMPI DUP2 PUSH4 0xA9059CBB EQ PUSH2 0x246 JUMPI DUP2 PUSH4 0xB6B55F25 EQ PUSH2 0x1EB JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x1A7 JUMPI POP DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x15C JUMPI PUSH4 0xFC0C546A EQ PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x178 PUSH2 0xCFA JUMP JUMPDEST DUP3 PUSH2 0x181 PUSH2 0xCDF JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0x1E3 SWAP2 CALLDATALOAD PUSH2 0x1DE PUSH1 0x1 PUSH2 0x1CC PUSH2 0xCDF JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0xFFD JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI PUSH2 0x240 SWAP1 CALLDATALOAD PUSH2 0x238 DUP2 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x270 PUSH2 0x266 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xEA0 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP1 CALLDATALOAD DUP1 ISZERO PUSH2 0x561 JUMPI PUSH2 0x2BF PUSH2 0x2B6 PUSH1 0x6 SLOAD DUP4 PUSH2 0xD91 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0xDBA JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x552 JUMPI CALLER ISZERO PUSH2 0x53C JUMPI CALLER DUP6 MSTORE PUSH1 0x20 SWAP2 DUP6 DUP4 MSTORE DUP2 DUP7 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x510 JUMPI SWAP1 DUP1 DUP8 SWAP3 CALLER DUP5 MSTORE DUP4 DUP7 MSTORE SUB DUP4 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 CALLER SWAP3 LOG3 ADDRESS DUP6 MSTORE DUP5 DUP3 MSTORE DUP5 DUP2 DUP2 KECCAK256 SLOAD SWAP3 DUP6 DUP5 LT PUSH1 0x0 EQ PUSH2 0x4A0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP6 DUP2 DUP4 PUSH1 0x7 SLOAD AND DUP7 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C42132E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x496 JUMPI DUP5 SWAP3 PUSH2 0x468 JUMPI JUMPDEST POP POP PUSH2 0x38C DUP6 DUP9 PUSH2 0xDE7 JUMP JUMPDEST SWAP2 PUSH2 0x3BB DUP2 PUSH32 0x0 AND SWAP7 CALLER DUP9 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x7 SLOAD AND SWAP5 DUP6 EXTCODESIZE ISZERO PUSH2 0x464 JUMPI PUSH1 0x84 SWAP2 DUP6 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH32 0xA628B47F00000000000000000000000000000000000000000000000000000000 DUP6 MSTORE CALLER DUP12 DUP7 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x45A JUMPI PUSH2 0x428 JUMPI JUMPDEST POP POP POP PUSH2 0x240 SWAP1 JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xDE7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SWAP6 SWAP4 SWAP6 GT PUSH2 0x447 JUMPI MSTORE SWAP2 POP PUSH2 0x240 CODESIZE DUP1 PUSH2 0x418 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH1 0x41 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x48F JUMPI JUMPDEST PUSH2 0x47F DUP2 DUP4 PUSH2 0xD59 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1E7 JUMPI MLOAD CODESIZE DUP1 PUSH2 0x380 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x475 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP SWAP3 DUP1 SWAP3 POP PUSH2 0x4DB SWAP2 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xE38 JUMP JUMPDEST DUP3 DUP1 CALLVALUE ISZERO PUSH2 0x507 JUMPI JUMPDEST DUP2 DUP1 DUP1 SWAP3 CALLVALUE SWAP1 CALLER SWAP1 CALL ISZERO PUSH2 0x4FC JUMPI PUSH2 0x240 SWAP2 POP PUSH2 0x420 JUMP JUMPDEST POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x4E4 JUMP JUMPDEST DUP3 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER DUP2 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 DUP6 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x66B JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x658 JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x634 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5DC JUMPI JUMPDEST PUSH2 0x5D8 DUP8 DUP8 PUSH2 0x5CE DUP3 DUP13 SUB DUP4 PUSH2 0xD59 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD10 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x621 JUMPI POP POP POP DUP3 PUSH2 0x5D8 SWAP5 PUSH2 0x5CE SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0x5BD JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x603 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x5CE DUP3 PUSH2 0x5D8 DUP7 DUP1 PUSH2 0x5BD JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x59E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x696 PUSH2 0xCDF JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x701 PUSH2 0xCFA JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x158 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x158 JUMPI DUP1 CALLDATALOAD SWAP1 DUP2 ISZERO PUSH2 0x807 JUMPI PUSH2 0x762 DUP3 ADDRESS CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP1 PUSH2 0x7EC JUMPI POP PUSH10 0x21E19E0C9BAB2400000 SWAP1 JUMPDEST CALLER ISZERO PUSH2 0x7D6 JUMPI POP PUSH2 0x240 SWAP3 SWAP4 PUSH2 0x790 DUP3 PUSH1 0x2 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP6 MSTORE DUP5 PUSH1 0x20 MSTORE DUP1 DUP6 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE DUP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x6 SLOAD PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP7 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x801 SWAP1 PUSH2 0x7FC PUSH1 0x2 SLOAD DUP6 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0xDBA JUMP JUMPDEST SWAP1 PUSH2 0x778 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x158 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH2 0x82F PUSH2 0xCDF JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x84C JUMPI POP PUSH2 0x1E3 SWAP2 SWAP3 CALLDATALOAD PUSH2 0xFFD JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0x1E3 SWAP2 CALLDATALOAD PUSH2 0x8B5 PUSH1 0x1 PUSH2 0x1CC PUSH2 0xCDF JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x9F1 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x9F1 JUMPI PUSH2 0x901 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x909 PUSH2 0xCDF JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x946 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x270 DUP10 DUP10 DUP10 PUSH2 0xEA0 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x9AC JUMPI DUP2 ISZERO PUSH2 0x996 JUMPI CALLER ISZERO PUSH2 0x980 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x270 DUP8 PUSH2 0x938 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x158 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x158 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI PUSH2 0xA2D PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xA8F JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 DUP6 DUP6 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 DUP7 DUP7 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E7 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP1 DUP3 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xBA8 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xB95 JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xB73 JUMPI POP PUSH1 0x1 EQ PUSH2 0xB1A JUMPI JUMPDEST PUSH2 0x5D8 DUP7 DUP7 PUSH2 0x5CE DUP3 DUP12 SUB DUP4 PUSH2 0xD59 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xB60 JUMPI POP POP POP DUP3 PUSH2 0x5D8 SWAP5 PUSH2 0x5CE SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xB09 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xB43 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x5CE DUP3 PUSH2 0x5D8 CODESIZE PUSH2 0xB09 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xAE9 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1E7 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E7 JUMPI CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1E7 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xC29 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP CODESIZE PUSH2 0xC20 JUMP JUMPDEST SWAP1 SWAP2 POP CALLVALUE PUSH2 0x464 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x464 JUMPI PUSH1 0xFF PUSH2 0xC70 PUSH2 0xCDF JUMP JUMPDEST SWAP4 DUP6 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 DUP7 KECCAK256 CALLER DUP8 MSTORE PUSH1 0x20 MSTORE DUP6 KECCAK256 SLOAD AND ISZERO PUSH2 0xCC5 JUMPI POP SWAP1 PUSH2 0xCC2 SWAP2 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xE38 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP4 PUSH1 0x44 SWAP3 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCF5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xCF5 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xD45 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xD23 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD7B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xDA4 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xDC4 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xDA4 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xDA4 JUMPI JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xE1A JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP3 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x44 DUP2 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0xD7B JUMPI PUSH2 0xE9E SWAP3 PUSH1 0x40 MSTORE PUSH2 0x10E0 JUMP JUMPDEST JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xF64 JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xF1A JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xFF8 JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xFF8 JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT OR PUSH2 0xD7B JUMPI PUSH2 0xE9E SWAP3 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x0 DUP1 DUP3 PUSH1 0x20 DUP3 SWAP5 MLOAD SWAP2 ADD DUP3 DUP7 GAS CALL RETURNDATASIZE ISZERO PUSH2 0x11C2 JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x11AE JUMPI SWAP1 PUSH2 0x113D SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x112D PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0xD59 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE DUP5 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMPDEST DUP5 PUSH2 0x11CE JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 DUP3 ISZERO ISZERO SWAP3 DUP4 PUSH2 0x1186 JUMPI JUMPDEST POP POP POP PUSH2 0x1155 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 SWAP3 SWAP4 POP SWAP1 PUSH1 0x20 SWAP2 DUP2 ADD SUB SLT PUSH2 0x158 JUMPI PUSH1 0x20 ADD MLOAD SWAP1 DUP2 ISZERO SWAP2 DUP3 ISZERO SUB PUSH2 0x9F1 JUMPI POP CODESIZE DUP1 DUP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x113D SWAP1 PUSH1 0x60 SWAP1 PUSH2 0x1137 JUMP JUMPDEST SWAP1 PUSH2 0x120D JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x11E3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x1258 JUMPI JUMPDEST PUSH2 0x121E JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1216 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xAB 0x25 PUSH25 0x8F562D1572C1D8CD63B8E9C9973E8B8171B87E1609E4B88C0D 0xB4 KECCAK256 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "451:3549:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;677:30:31;451:3549;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;451:3549:31;;;;;3952:11:4;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:26:0;451:3549:31;;2475:4:0;451:3549:31;;;:::i;:::-;;;;;3901:6:0;451:3549:31;;;;3901:22:0;451:3549:31;2475:4:0;:::i;:::-;4747:26;:::i;:::-;;451:3549:31;;;;;;;;;;;;;;-1:-1:-1;;451:3549:31;;;;3724:23;451:3549;;3704:6;3697:4;;735:10:10;-1:-1:-1;;;;;3657:5:31;451:3549;3704:6;:::i;:::-;3724:23;451:3549;3724:23;:::i;:::-;;597:13;451:3549;;;;;;;;;;;;;;;;;;3754:5:4;451:3549:31;;:::i;:::-;;;735:10:10;;3754:5:4;:::i;:::-;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2165:13;;2161:69;;2380:42;2381:24;2392:13;451:3549;2381:24;;:::i;:::-;3222:12:4;451:3549:31;2380:42;;:::i;:::-;2439:11;;;2435:67;;735:10:10;8317:21:4;8313:89;;735:10:10;451:3549:31;;;;;;;;;;;6603:19:4;;;6599:115;;735:10:10;;;;;451:3549:31;;;;;;;;;597:13;451:3549;3222:12:4;451:3549:31;;3222:12:4;597:13:31;451:3549;;;;;7346:25:4;735:10:10;;7346:25:4;;2621:4:31;451:3549;;;;;;;;;;2644:20;;;;2640:764;2644:20;;;-1:-1:-1;;;;;451:3549:31;;;;2701:8;451:3549;;;;2701:23;;;;451:3549;2701:23;;;;;;;;;;;;;2640:764;2814:20;;;;;;:::i;:::-;2931:5;2959:11;2931:5;;451:3549;735:10:10;;2959:11:31;;:::i;:::-;2701:8;451:3549;;2988:180;;;;;;451:3549;;;;2988:180;;;;;451:3549;2988:180;;735:10:10;2988:180:31;;;451:3549;;;;;;;;;;;;;;;2988:180;;;;;;;;2640:764;;;;3450:23;2640:764;;2392:13;451:3549;3450:23;:::i;2988:180::-;451:3549;;;;;;;;;2988:180;-1:-1:-1;3450:23:31;2988:180;;;;451:3549;;;;;-1:-1:-1;;;451:3549:31;;;;2988:180;451:3549;;;;;;;;;2988:180;451:3549;;;2701:23;;;;;;;;;;;;;;;;:::i;:::-;;;451:3549;;;;;2701:23;;;;;;;;;;451:3549;;;;;;;;;2640:764;735:10:10;;;;;;3299:6:31;735:10:10;;;-1:-1:-1;;;;;3271:5:31;451:3549;3299:6;:::i;:::-;3357:35;;3382:9;3357:35;;;2640:764;3382:9;;;;;735:10:10;;3357:35:31;;;;;3450:23;2640:764;;;;3357:35;451:3549;;;;;;;;;;3357:35;-1:-1:-1;3357:35:31;;;6599:115:4;451:3549:31;;-1:-1:-1;;;6649:50:4;;735:10:10;6649:50:4;;;451:3549:31;;;;;;;;;;;;;;;;;;;;;6649:50:4;;;8313:89;451:3549:31;;;;;8361:30:4;-1:-1:-1;;;8361:30:4;;;;451:3549:31;8361:30:4;2435:67:31;451:3549;;;-1:-1:-1;;;2474:16:31;;;2161:69;451:3549;;;-1:-1:-1;;;2202:16:31;;;451:3549;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;451:3549:31;;;;;-1:-1:-1;;;;451:3549:31;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;-1:-1:-1;;;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2954:6:0;451:3549:31;;-1:-1:-1;;;;;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:28;451:3549;;;;;;;;;;;;;;;-1:-1:-1;;451:3549:31;;;;;;;-1:-1:-1;;;;;451:3549:31;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;451:3549:31;;;;;;1193:11;;;1189:67;;1421:6;1414:4;;735:10:10;-1:-1:-1;;;;;1374:5:31;451:3549;1421:6;:::i;:::-;1565:13;451:3549;1565:18;;;1600:34;597:13;1561:257;;735:10:10;7791:21:4;7787:91;;451:3549:31;1945:23;451:3549;;6496:21:4;451:3549:31;6496:21:4;451:3549:31;6496:21:4;:::i;:::-;;597:13:31;735:10:10;451:3549:31;;;;;;;;;;;;597:13;;451:3549;;;;735:10:10;7346:25:4;451:3549:31;735:10:10;7346:25:4;;1565:13:31;451:3549;1945:23;:::i;7787:91:4:-;451:3549:31;;;;;7835:32:4;-1:-1:-1;;;7835:32:4;;;;451:3549:31;7835:32:4;1561:257:31;1766:40;451:3549;1767:22;3222:12:4;451:3549:31;1767:22;;:::i;:::-;1766:40;:::i;:::-;1561:257;;;1189:67;451:3549;;-1:-1:-1;;;1228:16:31;;;451:3549;;;;;;;;;;;;;;;;:::i;:::-;735:10:10;;-1:-1:-1;;;;;451:3549:31;;5421:34:0;5417:102;;451:3549:31;5529:37:0;451:3549:31;;;5529:37:0;:::i;5417:102::-;451:3549:31;;;5478:30:0;;;;451:3549:31;;;;;;;;;;;;;;;;;3075:2:4;451:3549:31;;;;;;;;;;;;;;;;;;4330:25:0;451:3549:31;;2475:4:0;451:3549:31;;;:::i;2475:4:0:-;4330:25;:::i;451:3549:31:-;;;;;;;;-1:-1:-1;;451:3549:31;;;;;;;;;;;;3901:6:0;451:3549:31;;;3901:22:0;451:3549:31;;;;;;;;;;;;;;;;-1:-1:-1;;451:3549:31;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;451:3549:31;;;;;;;;;;;735:10:10;451:3549:31;;;;;;;;10848:17:4;;;10828:37;;10824:310;;451:3549:31;;5249:5:4;;;;;;:::i;10824:310::-;10885:24;;;10881:130;;10061:19;;10057:89;;735:10:10;10159:21:4;10155:90;;-1:-1:-1;451:3549:31;;;;;;;;;;735:10:10;451:3549:31;;;;;;;;;;;;597:13;;451:3549;;5249:5:4;10824:310;;;10155:90;451:3549:31;;;;;10203:31:4;-1:-1:-1;;;10203:31:4;;;;451:3549:31;10203:31:4;10057:89;451:3549:31;;;;;10103:32:4;-1:-1:-1;;;10103:32:4;;;;451:3549:31;10103:32:4;10881:130;451:3549:31;;10936:60:4;;;735:10:10;10936:60:4;;;451:3549:31;;;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;6649:50:4;;;451:3549:31;;;;;;;;;;;;;;;;;;;3222:12:4;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:10;;10061:19:4;10057:89;;-1:-1:-1;;;;;451:3549:31;10159:21:4;;;10155:90;;735:10:10;;;451:3549:31;735:10:10;;451:3549:31;;9105:4:4;451:3549:31;;;;;;;;;;;597:13;451:3549;;;;;10333:31:4;735:10:10;;10333:31:4;;451:3549:31;9105:4:4;451:3549:31;;;10155:90:4;451:3549:31;;;;;10203:31:4;-1:-1:-1;;;10203:31:4;;;;451:3549:31;10203:31:4;10057:89;451:3549:31;;;;;10103:32:4;-1:-1:-1;;;10103:32:4;;;;451:3549:31;10103:32:4;451:3549:31;;;;;;;;;;;;;;;;;;;2151:5:4;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2151:5:4;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;451:3549:31;;;;;-1:-1:-1;;;451:3549:31;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;-1:-1:-1;;;451:3549:31;;;;;;;;;;;;;;;;;;;-1:-1:-1;;451:3549:31;;;;;;;;;;;;;;;2673:47:0;;2688:32;2673:47;;:87;;;;;451:3549:31;;;;;;;;;2673:87:0;876:25:12;861:40;;-1:-1:-1;2673:87:0;;;451:3549:31;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2954:6:0;451:3549:31;;;;;735:10:10;451:3549:31;;;;;;;;3519:23:0;3515:108;;451:3549:31;;3982:6;451:3549;;3958:5;-1:-1:-1;;;;;3958:5:31;451:3549;3982:6;:::i;:::-;451:3549;;3515:108:0;3565:47;451:3549:31;3565:47:0;-1:-1:-1;;;3565:47:0;;735:10:10;3565:47:0;;;451:3549:31;;;;;3565:47:0;451:3549:31;;;;-1:-1:-1;;;;;451:3549:31;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;451:3549:31;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;451:3549:31;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;451:3549:31;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;451:3549:31;;;;;;;;597:13;;;;;;;;;;:::o;451:3549::-;;;;;;;;;;:::o;3199:103:0:-;451:3549:31;-1:-1:-1;451:3549:31;2954:6:0;451:3549:31;;;-1:-1:-1;451:3549:31;735:10:10;-1:-1:-1;451:3549:31;;;;;-1:-1:-1;451:3549:31;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;451:3549:31;;;;3565:47:0;-1:-1:-1;;;3565:47:0;;735:10:10;3565:47:0;;;451:3549:31;;;;;3565:47:0;1303:160:8;;-1:-1:-1;;;;;451:3549:31;;1412:43:8;451:3549:31;1412:43:8;;;;451:3549:31;1412:43:8;;;451:3549:31;;;;;;1412:43:8;;451:3549:31;;;;;;;;;;;;;1412:43:8;451:3549:31;;;1412:43:8;:::i;:::-;1303:160::o;5656:300:4:-;;-1:-1:-1;;;;;451:3549:31;;;5739:18:4;;;5735:86;;451:3549:31;5834:16:4;;;5830:86;;6356:540;451:3549:31;;;;;;;;;;;6603:19:4;;;;6599:115;;451:3549:31;;;;;7346:25:4;451:3549:31;;;;;;;;;;;;597:13;451:3549;;;;;;;;597:13;;451:3549;;;;;7346:25:4;5656:300::o;6599:115::-;451:3549:31;;-1:-1:-1;;;6649:50:4;;-1:-1:-1;;;;;451:3549:31;;;;6649:50:4;;;451:3549:31;;;;;;;;;;;;;;;;6649:50:4;5830:86;451:3549:31;;;-1:-1:-1;;;5873:32:4;;5755:1;5873:32;;;451:3549:31;5873:32:4;5735:86;451:3549:31;;;-1:-1:-1;;;5780:30:4;;5755:1;5780:30;;;451:3549:31;5780:30:4;6179:316:0;;-1:-1:-1;451:3549:31;;;;2954:6:0;451:3549:31;;-1:-1:-1;;;;;451:3549:31;;;;;;;;;;;;;;;;;6276:23:0;6272:217;451:3549:31;;;;;;2954:6:0;451:3549:31;;;;;;;;;;;;;6347:4:0;451:3549:31;;;;;;;;6370:40:0;735:10:10;6370:40:0;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;;:::o;6730:317::-;;-1:-1:-1;451:3549:31;;;;2954:6:0;451:3549:31;;-1:-1:-1;;;;;451:3549:31;;;;;;;;;;;;;;;;;6824:217:0;451:3549:31;;;;;;2954:6:0;451:3549:31;;;;;;;;;;;;;;;;;;;;6922:40:0;735:10:10;6922:40:0;;;451:3549:31;6976:11:0;:::o;1702:188:8:-;;;451:3549:31;;1829:53:8;451:3549:31;1829:53:8;;;;-1:-1:-1;;;;;451:3549:31;;;1829:53:8;;;451:3549:31;;;;;;;;;;;1829:53:8;;451:3549:31;;;;;;;;;;;;;1829:53:8;451:3549:31;;;4059:629:8;-1:-1:-1;;;;;451:3549:31;2847:1:9;;3462:31;;;;;;;;;;;;451:3549:31;;;;;;;;;;;;3510:55:9;451:3549:31;;;;;3462:31:9;451:3549:31;;;;;;;;;:::i;:::-;;;;;3462:31:9;451:3549:31;;;;3510:55:9;;:::i;:::-;451:3549:31;;;4551:22:8;;;;:57;;;;451:3549:31;4547:135:8;;;;;4059:629;:::o;4547:135::-;451:3549:31;;;;4631:40:8;;;;;;;451:3549:31;4631:40:8;4551:57;4578:30;;;;;3462:31:9;4578:30:8;;;451:3549:31;;;;3462:31:9;4578:30:8;451:3549:31;;;;;;;;;;4551:57:8;;;;;;451:3549:31;;;-1:-1:-1;;;451:3549:31;;;;;;;3510:55:9;451:3549:31;;;;;4625:582:9;;4797:8;;-1:-1:-1;451:3549:31;;5874:21:9;:17;;6046:142;;;;;;5870:383;6225:17;451:3549:31;;6225:17:9;;;;4793:408;451:3549:31;;5045:22:9;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;451:3549:31;;-1:-1:-1;;;;;451:3549:31;;5121:24:9;;;;451:3549:31;5121:24:9;;;451:3549:31;5121:24:9;5045:49;5071:18;;;:23;5045:49;"
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "addLiquidity(uint256)": "51c6590a",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "deposit(uint256)": "b6b55f25",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "name()": "06fdde03",
              "removeLiquidity(uint256,uint256)": "9d7de6b3",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "token()": "fc0c546a",
              "totalReserves()": "8f840ddd",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "withdraw(uint256,address)": "00f714ce"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountInIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondaryChainSelector\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/pools/HoneyERC20Pool.sol\":\"HoneyERC20Pool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/src/HoneyErrors.sol\":{\"keccak256\":\"0xd499f330b12eac68b60213dc06cb857ca6dae670cb7e83304a03fe8595c685c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d0242cf4ceb86bca689e570bfbbb77fde41f8ab934b35691920b88155d6ced3\",\"dweb:/ipfs/Qmc15GDFempmUTg9ZahbjycsPmkXvRphx244CPeb3odWSH\"]},\"contracts/src/interfaces/IHoneyFactory.sol\":{\"keccak256\":\"0xf375e60efb31c933035f70e6c37596ce7c038ec0f59d4ff00a438d64ab0b7725\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef616abd4c127e9ac0397b3e43929d454b46aadbde944a880ecb353e925a42d4\",\"dweb:/ipfs/QmV926RFns4LfPo8WfzqYML1eHrvxwLSKHZnp9QBCsvUoU\"]},\"contracts/src/interfaces/IHoneyPool.sol\":{\"keccak256\":\"0x2685f6643c7ab6db1870e1d5609f529a8d29215c2136a1dc19c0186b5ab8ace1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://360dbe7dfab9f0edf59b457f8985bffc8c4fce8896281fa6e49ac08d19755f82\",\"dweb:/ipfs/QmeG9cfHrCS6Gpzs5U85i6ncPWd9niQiVhFdHYBD9B9AK6\"]},\"contracts/src/pools/HoneyERC20Pool.sol\":{\"keccak256\":\"0xebe135162a336843f41d96b18958a1824e8c7e0006d316aeb3f9cd46adfb45f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d28f866360923941a23d197c8530e149042a584258353c943b61e1910c69995a\",\"dweb:/ipfs/QmTR6B1Y6paTMKQThHQPD732XjctPLMHt37dLsKEcNUk55\"]}},\"version\":1}"
        }
      },
      "contracts/src/pools/HoneyETHPool.sol": {
        "HoneyETHPool": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "AmountInIsZero",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "addLiquidity",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "lpTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "secondaryChainSelector",
                  "type": "uint256"
                }
              ],
              "name": "removeLiquidity",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalReserves",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "fun_grantRole": {
                  "entryPoint": 829,
                  "id": 256,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH3 0x338 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP1 DUP4 ADD DUP3 DUP2 GT DUP3 DUP3 LT OR PUSH3 0x238 JUMPI DUP4 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH18 0x2437B732BCA837B7B6102628102A37B5B2B7 PUSH1 0x71 SHL DUP4 DUP4 ADD MSTORE DUP4 MLOAD DUP5 DUP2 ADD DUP2 DUP2 LT DUP4 DUP3 GT OR PUSH3 0x238 JUMPI DUP6 MSTORE PUSH1 0x3 SWAP1 DUP2 DUP2 MSTORE PUSH3 0x484C5 PUSH1 0xEC SHL DUP6 DUP3 ADD MSTORE DUP4 MLOAD SWAP1 DUP4 DUP3 GT PUSH3 0x238 JUMPI DUP3 SLOAD SWAP2 PUSH1 0x1 SWAP6 DUP7 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x32D JUMPI JUMPDEST DUP9 DUP6 LT EQ PUSH3 0x317 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x2C1 JUMPI JUMPDEST POP DUP9 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x25A JUMPI PUSH1 0x0 SWAP3 PUSH3 0x24E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND SWAP1 DUP7 SHL OR DUP4 SSTORE JUMPDEST DUP1 MLOAD SWAP4 DUP5 GT PUSH3 0x238 JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP7 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x22D JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x218 JUMPI DUP4 DUP2 GT PUSH3 0x1CD JUMPI JUMPDEST POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH3 0x15F JUMPI POP SWAP4 DUP4 SWAP5 SWAP2 DUP5 SWAP3 PUSH1 0x0 SWAP6 PUSH3 0x153 JUMPI JUMPDEST POP POP SHL SWAP3 PUSH1 0x0 NOT SWAP2 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x144 SWAP1 PUSH3 0x33D JUMP JUMPDEST POP MLOAD PUSH2 0xFD2 SWAP1 DUP2 PUSH3 0x3D0 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP4 POP CODESIZE DUP1 PUSH3 0x114 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1F NOT DUP2 AND DUP9 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP4 DUP4 LT PUSH3 0x1B2 JUMPI POP POP POP LT PUSH3 0x197 JUMPI JUMPDEST POP POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x124 JUMP JUMPDEST ADD MLOAD SWAP1 PUSH1 0xF8 DUP5 PUSH1 0x0 NOT SWAP3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH3 0x188 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP10 SSTORE SWAP1 SWAP8 ADD SWAP7 SWAP5 DUP6 ADD SWAP5 DUP9 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x175 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP10 LT PUSH3 0x20E JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x201 JUMPI POP POP PUSH3 0xF7 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP8 SWAP1 PUSH3 0x1F1 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1E8 JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE5 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xB6 JUMP JUMPDEST SWAP1 DUP9 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP8 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP13 DUP3 DUP3 LT PUSH3 0x2AA JUMPI POP POP DUP5 GT PUSH3 0x291 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH3 0xC8 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x283 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP13 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x270 JUMP JUMPDEST SWAP1 SWAP2 POP DUP6 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP7 LT PUSH3 0x30D JUMPI JUMPDEST SWAP2 DUP11 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2FD JUMPI POP POP PUSH3 0x9F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP11 SWAP2 ADD PUSH3 0x2ED JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2DF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0x88 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x5B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDAFF4714A0D9A8EB05499746BC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0x3CB JUMPI DUP2 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xF714CE EQ PUSH2 0xBDD JUMPI POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA47 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x99F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x980 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x875 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x822 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x806 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0x8F840DDD EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x70B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x9D7DE6B3 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D9 JUMPI PUSH4 0xE8078D94 EQ PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI CALLVALUE ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x6 SLOAD DUP1 PUSH2 0x1AD JUMPI POP PUSH10 0x21E19E0C9BAB2400000 SWAP2 JUMPDEST CALLER ISZERO PUSH2 0x198 JUMPI POP PUSH2 0x144 DUP3 PUSH1 0x2 SLOAD PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH2 0x192 CALLVALUE PUSH1 0x6 SLOAD PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP4 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1C2 SWAP1 PUSH2 0x1BD PUSH1 0x2 SLOAD CALLVALUE PUSH2 0xD20 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST SWAP2 PUSH2 0x131 JUMP JUMPDEST MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1F6 PUSH2 0xC89 JUMP JUMPDEST DUP3 PUSH2 0x1FF PUSH2 0xC6E JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x263 SWAP2 CALLDATALOAD PUSH2 0x25E PUSH1 0x1 PUSH2 0x24C PUSH2 0xC6E JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xF24 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP4 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x192 CALLVALUE PUSH1 0x6 SLOAD PUSH2 0xD69 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x2AC PUSH2 0x2A2 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xDC7 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 CALLDATALOAD DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x2FB PUSH2 0x2F2 PUSH1 0x6 SLOAD DUP4 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0xD49 JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x5E7 JUMPI CALLER ISZERO PUSH2 0x5D1 JUMPI CALLER DUP6 MSTORE PUSH1 0x20 SWAP2 DUP6 DUP4 MSTORE DUP2 DUP7 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x5A5 JUMPI SWAP1 DUP1 DUP8 SWAP3 CALLER DUP5 MSTORE DUP4 DUP7 MSTORE SUB DUP4 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 CALLER SWAP3 LOG3 DUP5 SELFBALANCE SWAP3 DUP6 DUP5 LT PUSH1 0x0 EQ PUSH2 0x563 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 PUSH1 0x7 SLOAD AND DUP7 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x5C42132E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x559 JUMPI DUP7 DUP10 DUP7 SWAP3 DUP4 SWAP6 PUSH2 0x520 JUMPI JUMPDEST POP DUP3 PUSH2 0x3CE DUP2 SWAP4 PUSH2 0x3C9 DUP9 DUP5 SWAP6 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST SWAP10 DUP2 DUP2 ISZERO PUSH2 0x517 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x50D JUMPI DUP3 PUSH1 0x7 SLOAD AND SWAP2 DUP6 MLOAD PUSH32 0x3FC8CEF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 DUP2 DUP11 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x503 JUMPI DUP7 SWAP4 PUSH2 0x4CA JUMPI JUMPDEST POP POP DUP3 EXTCODESIZE ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x84 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH32 0xA628B47F00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE CALLER DUP13 DUP8 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP8 ADD MSTORE AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH2 0x48A JUMPI JUMPDEST POP POP POP PUSH2 0x192 SWAP1 JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xD76 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SWAP6 SWAP4 SWAP6 GT PUSH2 0x4A9 JUMPI MSTORE SWAP2 POP PUSH2 0x192 CODESIZE DUP1 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH1 0x41 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4FC JUMPI JUMPDEST PUSH2 0x4E2 DUP2 DUP4 PUSH2 0xCE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4C6 JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x4C6 JUMPI SWAP1 CODESIZE DUP1 PUSH2 0x41F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4D8 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x3D7 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x552 JUMPI JUMPDEST PUSH2 0x53A DUP2 DUP4 PUSH2 0xCE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x54E JUMPI SWAP1 MLOAD SWAP1 DUP4 DUP7 DUP10 DUP3 PUSH2 0x3B7 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x530 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 DUP1 SWAP4 POP DUP1 SWAP3 SWAP6 SWAP5 POP PUSH2 0x577 CALLVALUE DUP7 PUSH2 0xD69 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x59C JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x591 JUMPI PUSH2 0x192 SWAP2 POP PUSH2 0x482 JUMP JUMPDEST POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x57F JUMP JUMPDEST DUP3 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER DUP2 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 DUP6 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x701 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x6EE JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x6CA JUMPI POP PUSH1 0x1 EQ PUSH2 0x672 JUMPI JUMPDEST PUSH2 0x66E DUP8 DUP8 PUSH2 0x664 DUP3 DUP13 SUB DUP4 PUSH2 0xCE8 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xC9F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x6B7 JUMPI POP POP POP DUP3 PUSH2 0x66E SWAP5 PUSH2 0x664 SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0x653 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x699 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x664 DUP3 PUSH2 0x66E DUP7 DUP1 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x634 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x72C PUSH2 0xC6E JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x225 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x797 PUSH2 0xC89 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH2 0x7C1 PUSH2 0xC6E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x7DE JUMPI POP PUSH2 0x263 SWAP2 SWAP3 CALLDATALOAD PUSH2 0xF24 JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x263 SWAP2 CALLDATALOAD PUSH2 0x845 PUSH1 0x1 PUSH2 0x24C PUSH2 0xC6E JUMP JUMPDEST PUSH2 0xEA3 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x27F JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI PUSH2 0x890 PUSH2 0xC89 JUMP JUMPDEST PUSH2 0x898 PUSH2 0xC6E JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x8D5 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x2AC DUP10 DUP10 DUP10 PUSH2 0xDC7 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x93B JUMPI DUP2 ISZERO PUSH2 0x925 JUMPI CALLER ISZERO PUSH2 0x90F JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x2AC CODESIZE PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x9B9 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xA31 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xA1B JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 DUP6 DUP6 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 DUP7 DUP7 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP1 DUP3 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xB32 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xB1F JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xAFD JUMPI POP PUSH1 0x1 EQ PUSH2 0xAA4 JUMPI JUMPDEST PUSH2 0x66E DUP7 DUP7 PUSH2 0x664 DUP3 DUP12 SUB DUP4 PUSH2 0xCE8 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xAEA JUMPI POP POP POP DUP3 PUSH2 0x66E SWAP5 PUSH2 0x664 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xA93 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xACD JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x664 DUP3 PUSH2 0x66E CODESIZE PUSH2 0xA93 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xA73 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xBB3 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP CODESIZE PUSH2 0xBAA JUMP JUMPDEST SWAP2 SWAP3 SWAP1 POP CALLVALUE PUSH2 0x54E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x54E JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xBFC PUSH2 0xC6E JUMP JUMPDEST SWAP2 DUP6 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 CALLER DUP8 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP6 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0xC53 JUMPI POP POP DUP4 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP3 SWAP1 DUP3 ISZERO PUSH2 0xC49 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALL ISZERO PUSH2 0xC3F JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xC2B JUMP JUMPDEST SWAP1 DUP6 PUSH1 0x44 SWAP3 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC84 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC84 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xCD4 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD0A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xD33 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xD53 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD33 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xD33 JUMPI JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xDA9 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xE8B JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xE41 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xF1F JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xF1F JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 CREATE PUSH11 0xA881FAE08C22F9FA14BB44 0xE6 LOG1 EQ LOG1 DUP9 0xAE 0xB3 0xBD COINBASE PUSH14 0x77A16C86030904A964736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "457:3163:32:-:0;;;;;;-1:-1:-1;;;;;457:3163:32;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;-1:-1:-1;457:3163:32;;;;-1:-1:-1;;;;457:3163:32;;;;;;;;;;;;;;;;;;;;1985:17:4;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;;;;;810:38;457:3163;;-1:-1:-1;;;;;;457:3163:32;735:10:10;457:3163:32;;;;;;861:44;;;:::i;:::-;;457:3163;;;;;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;-1:-1:-1;457:3163:32;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;-1:-1:-1;457:3163:32;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;-1:-1:-1;457:3163:32;;1985:17:4;457:3163:32;;-1:-1:-1;457:3163:32;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;-1:-1:-1;457:3163:32;;-1:-1:-1;457:3163:32;;;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;;-1:-1:-1;;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;6179:316:0;-1:-1:-1;;;;;457:3163:32;;;;;;;;;;;;;;;;;;;;;;2954:6:0;457:3163:32;;;;;;;;;;;;;6347:4:0;457:3163:32;;;;;;;;735:10:10;6370:40:0;;;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 3182,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_7686": {
                  "entryPoint": 3209,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 3231,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 3433,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 3401,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 3360,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 3446,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 3304,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkRole": {
                  "entryPoint": 3459,
                  "id": 93,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_grantRole": {
                  "entryPoint": 3747,
                  "id": 256,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_revokeRole": {
                  "entryPoint": 3876,
                  "id": 294,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_transfer": {
                  "entryPoint": 3527,
                  "id": 908,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060408181526004908136101561001657600080fd5b600092833560e01c908162f714ce14610bdd5750806301ffc9a714610b3c57806306fdde0314610a47578063095ea7b31461099f57806318160ddd1461098057806323b872dd14610875578063248a9ca31461084a5780632f2ff15d14610822578063313ce5671461080657806336568abe146107a657806370a08231146107705780638f840ddd1461075157806391d148541461070b57806395d89b41146106055780639d7de6b3146102ce578063a217fddf146102b3578063a9059cbb14610282578063d0e30db014610267578063d547741f14610229578063dd62ed3e146101d95763e8078d941461010a57600080fd5b826003193601126101d55734156101c857600654806101ad575069021e19e0c9bab2400000915b3315610198575061014482600254610d69565b600255336000526000602052806000208281540190555190815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a361019234600654610d69565b60065580f35b83602492519163ec442f0560e01b8352820152fd5b6101c2906101bd60025434610d20565b610d49565b91610131565b51636067798b60e01b8152fd5b8280fd5b8382346102255780600319360112610225576020916101f6610c89565b826101ff610c6e565b926001600160a01b03809316815260018652209116600052825280600020549051908152f35b5080fd5b50346101d557806003193601126101d557610263913561025e600161024c610c6e565b93838752600560205286200154610d83565b610f24565b5080f35b838060031936011261027f5761019234600654610d69565b80fd5b8382346102255780600319360112610225576020906102ac6102a2610c89565b6024359033610dc7565b5160018152f35b83823461022557816003193601126102255751908152602090f35b5090816003193601126101d557803580156105f6576102fb6102f260065483610d20565b60025490610d49565b9283156105e75733156105d157338552602091858352818620548181106105a557908087923384528386520383832055806002540360025582519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a384479285841060001461056357846001600160a01b03918083600754168651938480927f5c42132e0000000000000000000000000000000000000000000000000000000082525afa91821561055957868986928395610520575b50826103ce81936103c9888495610d76565b610d76565b99818115610517575b3390f11561050d5782600754169185517f3fc8cef300000000000000000000000000000000000000000000000000000000815282818a81875afa9283156105035786936104ca575b5050823b156104c657608492865197889586947fa628b47f000000000000000000000000000000000000000000000000000000008652338c870152602435602487015216604485015260648401525af180156104bc5761048a575b505050610192905b600654610d76565b67ffffffffffffffff82959395116104a957529150610192388061047a565b602483604187634e487b7160e01b835252fd5b81513d87823e3d90fd5b8480fd5b9080929350813d83116104fc575b6104e28183610ce8565b810103126104c6575183811681036104c65790388061041f565b503d6104d8565b87513d88823e3d90fd5b84513d85823e3d90fd5b506108fc6103d7565b94505050508082813d8311610552575b61053a8183610ce8565b8101031261054e57905190838689826103b7565b8380fd5b503d610530565b85513d86823e3d90fd5b508080935080929594506105773486610d69565b81811561059c575b3390f115610591576101929150610482565b5051903d90823e3d90fd5b506108fc61057f565b825163391434e360e21b8152338187019081526020810192909252604082018390529081906060010390fd5b82856024925191634b637e8f60e11b8352820152fd5b905051636067798b60e01b8152fd5b509051636067798b60e01b8152fd5b5082903461022557816003193601126102255780519180938054916001908360011c9260018516948515610701575b60209586861081146106ee578589529081156106ca5750600114610672575b61066e8787610664828c0383610ce8565b5191829182610c9f565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106106b7575050508261066e9461066492820101948680610653565b8054868501880152928601928101610699565b60ff19168887015250505050151560051b83010192506106648261066e8680610653565b602484602285634e487b7160e01b835252fd5b93607f1693610634565b5090346101d557816003193601126101d5578160209360ff9261072c610c6e565b90358252600586526001600160a01b0383832091168252855220541690519015158152f35b8382346102255781600319360112610225576020906006549051908152f35b83823461022557602036600319011261022557806020926001600160a01b03610797610c89565b16815280845220549051908152f35b508290346102255780600319360112610225576107c1610c6e565b90336001600160a01b038316036107de5750610263919235610f24565b8390517f6697b232000000000000000000000000000000000000000000000000000000008152fd5b8382346102255781600319360112610225576020905160128152f35b50346101d557806003193601126101d5576102639135610845600161024c610c6e565b610ea3565b5090346101d55760203660031901126101d55781602093600192358152600585522001549051908152f35b50913461027f57606036600319011261027f57610890610c89565b610898610c6e565b91604435936001600160a01b0383168083526001602052868320338452602052868320549160001983036108d5575b6020886102ac898989610dc7565b86831061093b57811561092557331561090f575082526001602090815286832033845281529186902090859003905582906102ac386108c7565b60249084895191634a1406b160e11b8352820152fd5b6024908489519163e602df0560e01b8352820152fd5b87517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018790528291506060010390fd5b8382346102255781600319360112610225576020906002549051908152f35b5090346101d557816003193601126101d5576109b9610c89565b602435903315610a31576001600160a01b0316918215610a1b57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b60249085855191634a1406b160e11b8352820152fd5b6024838686519163e602df0560e01b8352820152fd5b50346101d557826003193601126101d55780519183600354906001908260011c92600181168015610b32575b6020958686108214610b1f5750848852908115610afd5750600114610aa4575b61066e8686610664828b0383610ce8565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610aea575050508261066e94610664928201019438610a93565b8054868501880152928601928101610acd565b60ff191687860152505050151560051b83010192506106648261066e38610a93565b836022602492634e487b7160e01b835252fd5b93607f1693610a73565b5090346101d55760203660031901126101d55735907fffffffff0000000000000000000000000000000000000000000000000000000082168092036101d557602092507f7965db0b000000000000000000000000000000000000000000000000000000008214918215610bb3575b50519015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000014915038610baa565b919290503461054e578260031936011261054e57803591610bfc610c6e565b91858052600560205284862033875260205260ff858720541615610c5357505083808093819382908215610c49575b6001600160a01b031690f115610c3f575080f35b51903d90823e3d90fd5b6108fc9150610c2b565b908560449263e2517d3f60e01b835233908301526024820152fd5b602435906001600160a01b0382168203610c8457565b600080fd5b600435906001600160a01b0382168203610c8457565b6020808252825181830181905290939260005b828110610cd457505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610cb2565b90601f8019910116810190811067ffffffffffffffff821117610d0a57604052565b634e487b7160e01b600052604160045260246000fd5b81810292918115918404141715610d3357565b634e487b7160e01b600052601160045260246000fd5b8115610d53570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610d3357565b91908203918211610d3357565b80600052600560205260406000203360005260205260ff6040600020541615610da95750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b916001600160a01b03808416928315610e8b5716928315610e735760009083825281602052604082205490838210610e41575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b602460405163ec442f0560e01b815260006004820152fd5b6024604051634b637e8f60e11b815260006004820152fd5b9060009180835260056020526001600160a01b036040842092169182845260205260ff60408420541615600014610f1f5780835260056020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b9060009180835260056020526001600160a01b036040842092169182845260205260ff604084205416600014610f1f578083526005602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a460019056fea26469706673582212209ef06aa881fae08c22f9fa14bb44e6a114a188aeb3bd416d77a16c86030904a964736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xF714CE EQ PUSH2 0xBDD JUMPI POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA47 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x99F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x980 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x875 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x822 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x806 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x7A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0x8F840DDD EQ PUSH2 0x751 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x70B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0x9D7DE6B3 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D9 JUMPI PUSH4 0xE8078D94 EQ PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI CALLVALUE ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x6 SLOAD DUP1 PUSH2 0x1AD JUMPI POP PUSH10 0x21E19E0C9BAB2400000 SWAP2 JUMPDEST CALLER ISZERO PUSH2 0x198 JUMPI POP PUSH2 0x144 DUP3 PUSH1 0x2 SLOAD PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH2 0x192 CALLVALUE PUSH1 0x6 SLOAD PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP4 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x1C2 SWAP1 PUSH2 0x1BD PUSH1 0x2 SLOAD CALLVALUE PUSH2 0xD20 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST SWAP2 PUSH2 0x131 JUMP JUMPDEST MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1F6 PUSH2 0xC89 JUMP JUMPDEST DUP3 PUSH2 0x1FF PUSH2 0xC6E JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x263 SWAP2 CALLDATALOAD PUSH2 0x25E PUSH1 0x1 PUSH2 0x24C PUSH2 0xC6E JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0xD83 JUMP JUMPDEST PUSH2 0xF24 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP4 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x27F JUMPI PUSH2 0x192 CALLVALUE PUSH1 0x6 SLOAD PUSH2 0xD69 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x2AC PUSH2 0x2A2 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0xDC7 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 CALLDATALOAD DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH2 0x2FB PUSH2 0x2F2 PUSH1 0x6 SLOAD DUP4 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0xD49 JUMP JUMPDEST SWAP3 DUP4 ISZERO PUSH2 0x5E7 JUMPI CALLER ISZERO PUSH2 0x5D1 JUMPI CALLER DUP6 MSTORE PUSH1 0x20 SWAP2 DUP6 DUP4 MSTORE DUP2 DUP7 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x5A5 JUMPI SWAP1 DUP1 DUP8 SWAP3 CALLER DUP5 MSTORE DUP4 DUP7 MSTORE SUB DUP4 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 CALLER SWAP3 LOG3 DUP5 SELFBALANCE SWAP3 DUP6 DUP5 LT PUSH1 0x0 EQ PUSH2 0x563 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP1 DUP4 PUSH1 0x7 SLOAD AND DUP7 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x5C42132E00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x559 JUMPI DUP7 DUP10 DUP7 SWAP3 DUP4 SWAP6 PUSH2 0x520 JUMPI JUMPDEST POP DUP3 PUSH2 0x3CE DUP2 SWAP4 PUSH2 0x3C9 DUP9 DUP5 SWAP6 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0xD76 JUMP JUMPDEST SWAP10 DUP2 DUP2 ISZERO PUSH2 0x517 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x50D JUMPI DUP3 PUSH1 0x7 SLOAD AND SWAP2 DUP6 MLOAD PUSH32 0x3FC8CEF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 DUP2 DUP11 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x503 JUMPI DUP7 SWAP4 PUSH2 0x4CA JUMPI JUMPDEST POP POP DUP3 EXTCODESIZE ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x84 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH32 0xA628B47F00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE CALLER DUP13 DUP8 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x24 DUP8 ADD MSTORE AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH2 0x48A JUMPI JUMPDEST POP POP POP PUSH2 0x192 SWAP1 JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xD76 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SWAP6 SWAP4 SWAP6 GT PUSH2 0x4A9 JUMPI MSTORE SWAP2 POP PUSH2 0x192 CODESIZE DUP1 PUSH2 0x47A JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH1 0x41 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4FC JUMPI JUMPDEST PUSH2 0x4E2 DUP2 DUP4 PUSH2 0xCE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4C6 JUMPI MLOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x4C6 JUMPI SWAP1 CODESIZE DUP1 PUSH2 0x41F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4D8 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x3D7 JUMP JUMPDEST SWAP5 POP POP POP POP DUP1 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x552 JUMPI JUMPDEST PUSH2 0x53A DUP2 DUP4 PUSH2 0xCE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x54E JUMPI SWAP1 MLOAD SWAP1 DUP4 DUP7 DUP10 DUP3 PUSH2 0x3B7 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x530 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 DUP1 SWAP4 POP DUP1 SWAP3 SWAP6 SWAP5 POP PUSH2 0x577 CALLVALUE DUP7 PUSH2 0xD69 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x59C JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x591 JUMPI PUSH2 0x192 SWAP2 POP PUSH2 0x482 JUMP JUMPDEST POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x57F JUMP JUMPDEST DUP3 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE CALLER DUP2 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 DUP6 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP SWAP1 MLOAD PUSH4 0x6067798B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI DUP1 MLOAD SWAP2 DUP1 SWAP4 DUP1 SLOAD SWAP2 PUSH1 0x1 SWAP1 DUP4 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x701 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP2 EQ PUSH2 0x6EE JUMPI DUP6 DUP10 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x6CA JUMPI POP PUSH1 0x1 EQ PUSH2 0x672 JUMPI JUMPDEST PUSH2 0x66E DUP8 DUP8 PUSH2 0x664 DUP3 DUP13 SUB DUP4 PUSH2 0xCE8 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xC9F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0x6B7 JUMPI POP POP POP DUP3 PUSH2 0x66E SWAP5 PUSH2 0x664 SWAP3 DUP3 ADD ADD SWAP5 DUP7 DUP1 PUSH2 0x653 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x699 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP9 DUP8 ADD MSTORE POP POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x664 DUP3 PUSH2 0x66E DUP7 DUP1 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH1 0x22 DUP6 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x634 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x72C PUSH2 0xC6E JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x5 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x225 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x797 PUSH2 0xC89 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x225 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH2 0x7C1 PUSH2 0xC6E JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x7DE JUMPI POP PUSH2 0x263 SWAP2 SWAP3 CALLDATALOAD PUSH2 0xF24 JUMP JUMPDEST DUP4 SWAP1 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x263 SWAP2 CALLDATALOAD PUSH2 0x845 PUSH1 0x1 PUSH2 0x24C PUSH2 0xC6E JUMP JUMPDEST PUSH2 0xEA3 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x5 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x27F JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x27F JUMPI PUSH2 0x890 PUSH2 0xC89 JUMP JUMPDEST PUSH2 0x898 PUSH2 0xC6E JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 SUB PUSH2 0x8D5 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x2AC DUP10 DUP10 DUP10 PUSH2 0xDC7 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x93B JUMPI DUP2 ISZERO PUSH2 0x925 JUMPI CALLER ISZERO PUSH2 0x90F JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x2AC CODESIZE PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 DUP5 DUP10 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP8 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x225 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x225 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI PUSH2 0x9B9 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0xA31 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xA1B JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 SWAP1 DUP6 DUP6 MLOAD SWAP2 PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 DUP7 DUP7 MLOAD SWAP2 PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1D5 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1D5 JUMPI DUP1 MLOAD SWAP2 DUP4 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP1 DUP3 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0xB32 JUMPI JUMPDEST PUSH1 0x20 SWAP6 DUP7 DUP7 LT DUP3 EQ PUSH2 0xB1F JUMPI POP DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xAFD JUMPI POP PUSH1 0x1 EQ PUSH2 0xAA4 JUMPI JUMPDEST PUSH2 0x66E DUP7 DUP7 PUSH2 0x664 DUP3 DUP12 SUB DUP4 PUSH2 0xCE8 JUMP JUMPDEST SWAP3 SWAP6 POP PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0xAEA JUMPI POP POP POP DUP3 PUSH2 0x66E SWAP5 PUSH2 0x664 SWAP3 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0xA93 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xACD JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0x664 DUP3 PUSH2 0x66E CODESIZE PUSH2 0xA93 JUMP JUMPDEST DUP4 PUSH1 0x22 PUSH1 0x24 SWAP3 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0xA73 JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1D5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1D5 JUMPI CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1D5 JUMPI PUSH1 0x20 SWAP3 POP PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0xBB3 JUMPI JUMPDEST POP MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP CODESIZE PUSH2 0xBAA JUMP JUMPDEST SWAP2 SWAP3 SWAP1 POP CALLVALUE PUSH2 0x54E JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x54E JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xBFC PUSH2 0xC6E JUMP JUMPDEST SWAP2 DUP6 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP5 DUP7 KECCAK256 CALLER DUP8 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP6 DUP8 KECCAK256 SLOAD AND ISZERO PUSH2 0xC53 JUMPI POP POP DUP4 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP3 SWAP1 DUP3 ISZERO PUSH2 0xC49 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALL ISZERO PUSH2 0xC3F JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xC2B JUMP JUMPDEST SWAP1 DUP6 PUSH1 0x44 SWAP3 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC84 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC84 JUMPI JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xCD4 JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD0A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xD33 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xD53 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xD33 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xD33 JUMPI JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xDA9 JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0xE8B JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0xE73 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0xE41 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xF1F JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP5 KECCAK256 SWAP3 AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0xF1F JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 CREATE PUSH11 0xA881FAE08C22F9FA14BB44 0xE6 LOG1 EQ LOG1 DUP9 0xAE 0xB3 0xBD COINBASE PUSH14 0x77A16C86030904A964736F6C6343 STOP ADDMOD XOR STOP CALLER ",
              "sourceMap": "457:3163:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1069:9;1095:11;1091:67;;1336:13;457:3163;1336:18;;;1371:34;604:13;1332:257;;735:10:10;7791:21:4;7787:91;;457:3163:32;6496:21:4;457:3163:32;6496:21:4;457:3163:32;6496:21:4;:::i;:::-;;457:3163:32;735:10:10;457:3163:32;;;;;;;;;;;;;;;;;;;7346:25:4;457:3163:32;735:10:10;7346:25:4;;1716:23:32;1069:9;1336:13;457:3163;1716:23;:::i;:::-;1336:13;457:3163;;;7787:91:4;457:3163:32;;;;7835:32:4;-1:-1:-1;;;7835:32:4;;;;457:3163:32;7835:32:4;1332:257:32;1537:40;457:3163;1538:22;3222:12:4;457:3163:32;1069:9;1538:22;:::i;:::-;1537:40;:::i;:::-;1332:257;;;1091:67;457:3163;-1:-1:-1;;;1130:16:32;;;457:3163;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;457:3163:32;;;;;3952:11:4;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4747:26:0;457:3163:32;;2475:4:0;457:3163:32;;;:::i;:::-;;;;;3901:6:0;457:3163:32;;;;3901:22:0;457:3163:32;2475:4:0;:::i;:::-;4747:26;:::i;:::-;;457:3163:32;;;;;;;;;;;;3350:26;3367:9;3350:26;457:3163;3350:26;:::i;457:3163::-;;;;;;;;;;;;;;;;;;;3754:5:4;457:3163:32;;:::i;:::-;;;735:10:10;;3754:5:4;:::i;:::-;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1896:13;;1892:69;;2111:42;2112:24;2123:13;457:3163;2112:24;;:::i;:::-;3222:12:4;457:3163:32;2111:42;;:::i;:::-;2170:11;;;2166:67;;735:10:10;8317:21:4;8313:89;;735:10:10;457:3163:32;;;;;;;;;;;6603:19:4;;;6599:115;;735:10:10;;;;;457:3163:32;;;;;;;;;;;3222:12:4;457:3163:32;;3222:12:4;457:3163:32;;;;;;7346:25:4;735:10:10;;7346:25:4;;2334:21:32;;2372:20;;;;2368:841;2372:20;;;457:3163;-1:-1:-1;;;;;457:3163:32;;;2429:8;457:3163;;;;2429:23;;;;457:3163;2429:23;;;;;;;;;;;;;;;;;2368:841;2545:18;;2653:32;2545:18;;;;;;;:::i;:::-;2653:32;:::i;:::-;2776:37;;;;;;2368:841;735:10:10;2776:37:32;;;;;457:3163;2429:8;457:3163;;;;;;2956:15;;;;;;;;;;;;;;;;;;2368:841;2830:190;;;;;;;457:3163;;;;2830:190;;;;;457:3163;2830:190;;735:10:10;2830:190:32;;;457:3163;;;;;;;;;;;;;;;;2830:190;;;;;;;;2368:841;;;;3255:23;2368:841;;2123:13;457:3163;3255:23;:::i;2830:190::-;457:3163;;;;;;;;;2830:190;-1:-1:-1;3255:23:32;2830:190;;;;457:3163;;;;;-1:-1:-1;;;457:3163:32;;;;2830:190;457:3163;;;;;;;;;2830:190;457:3163;;;2956:15;;;;;;;;;;;;;;;;;:::i;:::-;;;457:3163;;;;;;;;;;;;2956:15;;;;;;;;;;;457:3163;;;;;;;;;2776:37;457:3163;;;;;;;;;2776:37;;;;;2429:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;;457:3163;;;;;;;;;;;2429:23;;457:3163;;;;2429:23;;;;;;457:3163;;;;;;;;;2368:841;3187:9;;;;;;;;;;3178:18;3187:9;3178:18;;:::i;:::-;3153:44;;;;;2368:841;735:10:10;3153:44:32;;;;;3255:23;2368:841;;;;3153:44;457:3163;;;;;;;;;;3153:44;;;;;6599:115:4;457:3163:32;;-1:-1:-1;;;6649:50:4;;735:10:10;6649:50:4;;;457:3163:32;;;;;;;;;;;;;;;;;;;;;6649:50:4;;;8313:89;457:3163:32;;;;;8361:30:4;-1:-1:-1;;;8361:30:4;;;;457:3163:32;8361:30:4;2166:67:32;457:3163;;;-1:-1:-1;;;2205:16:32;;;1892:69;457:3163;;;-1:-1:-1;;;1933:16:32;;;457:3163;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;457:3163:32;;;;;-1:-1:-1;;;;457:3163:32;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;-1:-1:-1;;;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2954:6:0;457:3163:32;;-1:-1:-1;;;;;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;674:28;457:3163;;;;;;;;;;;;;;;-1:-1:-1;;457:3163:32;;;;;;;-1:-1:-1;;;;;457:3163:32;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:10;;-1:-1:-1;;;;;457:3163:32;;5421:34:0;5417:102;;457:3163:32;5529:37:0;457:3163:32;;;5529:37:0;:::i;5417:102::-;457:3163:32;;;5478:30:0;;;;457:3163:32;;;;;;;;;;;;;;;;;3075:2:4;457:3163:32;;;;;;;;;;;;;;;;4330:25:0;457:3163:32;;2475:4:0;457:3163:32;;;:::i;2475:4:0:-;4330:25;:::i;457:3163:32:-;;;;;;;;-1:-1:-1;;457:3163:32;;;;;;;;;;;;3901:6:0;457:3163:32;;;3901:22:0;457:3163:32;;;;;;;;;;;;;;;-1:-1:-1;;457:3163:32;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;457:3163:32;;;;;;;;;;;735:10:10;457:3163:32;;;;;;;;10848:17:4;;;10828:37;;10824:310;;457:3163:32;;5249:5:4;;;;;;:::i;10824:310::-;10885:24;;;10881:130;;10061:19;;10057:89;;735:10:10;10159:21:4;10155:90;;-1:-1:-1;457:3163:32;;;;;;;;;;735:10:10;457:3163:32;;;;;;;;;;;;;;;;5249:5:4;10824:310;;;10155:90;457:3163:32;;;;;10203:31:4;-1:-1:-1;;;10203:31:4;;;;457:3163:32;10203:31:4;10057:89;457:3163:32;;;;;10103:32:4;-1:-1:-1;;;10103:32:4;;;;457:3163:32;10103:32:4;10881:130;457:3163:32;;10936:60:4;;;735:10:10;10936:60:4;;;457:3163:32;;;;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;6649:50:4;;;457:3163:32;;;;;;;;;;;;;;;;3222:12:4;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:10;;10061:19:4;10057:89;;-1:-1:-1;;;;;457:3163:32;10159:21:4;;;10155:90;;735:10:10;;;457:3163:32;735:10:10;;457:3163:32;;9105:4:4;457:3163:32;;;;;;;;;;;;;;;;;10333:31:4;735:10:10;;10333:31:4;;457:3163:32;9105:4:4;457:3163:32;;;10155:90:4;457:3163:32;;;;;10203:31:4;-1:-1:-1;;;10203:31:4;;;;457:3163:32;10203:31:4;10057:89;457:3163:32;;;;;10103:32:4;-1:-1:-1;;;10103:32:4;;;;457:3163:32;10103:32:4;457:3163:32;;;;;;;;;;;;;;;;;2151:5:4;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2151:5:4;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;457:3163:32;;;;;-1:-1:-1;;;457:3163:32;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;-1:-1:-1;;;457:3163:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;457:3163:32;;;;;;;;;;;;;;;2673:47:0;;2688:32;2673:47;;:87;;;;;457:3163:32;;;;;;;;;2673:87:0;876:25:12;861:40;;-1:-1:-1;2673:87:0;;;457:3163:32;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2954:6:0;457:3163:32;;;;;735:10:10;457:3163:32;;;;;;;;;;3519:23:0;3515:108;;3581:28:32;;;;;;;;;;;;;;457:3163;-1:-1:-1;;;;;457:3163:32;3581:28;;;;;457:3163;;;3581:28;457:3163;;;;;;;;;3581:28;;;-1:-1:-1;3581:28:32;;3515:108:0;3565:47;;457:3163:32;3565:47:0;-1:-1:-1;;;3565:47:0;;735:10:10;3565:47:0;;;457:3163:32;;;;;3565:47:0;457:3163:32;;;;-1:-1:-1;;;;;457:3163:32;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;457:3163:32;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;457:3163:32;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;457:3163:32;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;3199:103:0:-;457:3163:32;-1:-1:-1;457:3163:32;2954:6:0;457:3163:32;;;-1:-1:-1;457:3163:32;735:10:10;-1:-1:-1;457:3163:32;;;;;-1:-1:-1;457:3163:32;;;3519:23:0;3515:108;;3199:103;:::o;3515:108::-;457:3163:32;;;;3565:47:0;-1:-1:-1;;;3565:47:0;;735:10:10;3565:47:0;;;457:3163:32;;;;;3565:47:0;5656:300:4;;-1:-1:-1;;;;;457:3163:32;;;5739:18:4;;;5735:86;;457:3163:32;5834:16:4;;;5830:86;;6356:540;457:3163:32;;;;;;;;;;;6603:19:4;;;;6599:115;;457:3163:32;;;;;7346:25:4;457:3163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;7346:25:4;5656:300::o;6599:115::-;457:3163:32;;-1:-1:-1;;;6649:50:4;;-1:-1:-1;;;;;457:3163:32;;;;6649:50:4;;;457:3163:32;;;;;;;;;;;;;;;;6649:50:4;5830:86;457:3163:32;;;-1:-1:-1;;;5873:32:4;;5755:1;5873:32;;;457:3163:32;5873:32:4;5735:86;457:3163:32;;;-1:-1:-1;;;5780:30:4;;5755:1;5780:30;;;457:3163:32;5780:30:4;6179:316:0;;-1:-1:-1;457:3163:32;;;;2954:6:0;457:3163:32;;-1:-1:-1;;;;;457:3163:32;;;;;;;;;;;;;;;;;6276:23:0;6272:217;457:3163:32;;;;;;2954:6:0;457:3163:32;;;;;;;;;;;;;6347:4:0;457:3163:32;;;;;;;;6370:40:0;735:10:10;6370:40:0;;;6347:4;6424:11;:::o;6272:217::-;6466:12;;;:::o;6730:317::-;;-1:-1:-1;457:3163:32;;;;2954:6:0;457:3163:32;;-1:-1:-1;;;;;457:3163:32;;;;;;;;;;;;;;;;;6824:217:0;457:3163:32;;;;;;2954:6:0;457:3163:32;;;;;;;;;;;;;;;;;;;;6922:40:0;735:10:10;6922:40:0;;;457:3163:32;6976:11:0;:::o"
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "addLiquidity()": "e8078d94",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "deposit()": "d0e30db0",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "name()": "06fdde03",
              "removeLiquidity(uint256,uint256)": "9d7de6b3",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "totalReserves()": "8f840ddd",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "withdraw(uint256,address)": "00f714ce"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AmountInIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lpTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondaryChainSelector\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/pools/HoneyETHPool.sol\":\"HoneyETHPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/src/HoneyErrors.sol\":{\"keccak256\":\"0xd499f330b12eac68b60213dc06cb857ca6dae670cb7e83304a03fe8595c685c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d0242cf4ceb86bca689e570bfbbb77fde41f8ab934b35691920b88155d6ced3\",\"dweb:/ipfs/Qmc15GDFempmUTg9ZahbjycsPmkXvRphx244CPeb3odWSH\"]},\"contracts/src/interfaces/IHoneyETHPool.sol\":{\"keccak256\":\"0xd939b1de51bfdfde3d272ee4b3b6c10665267f4e0dc2d2f9b4c26873df77f8c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f37a152302e928be8d725306c0e97fd9154d10d32097aa1abc9eb75ffefdd4cb\",\"dweb:/ipfs/QmXk1Aczzo1HzdJgFKvKPLnF8XWD1y7trjM9mzA7qCjn8J\"]},\"contracts/src/interfaces/IHoneyFactory.sol\":{\"keccak256\":\"0xf375e60efb31c933035f70e6c37596ce7c038ec0f59d4ff00a438d64ab0b7725\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef616abd4c127e9ac0397b3e43929d454b46aadbde944a880ecb353e925a42d4\",\"dweb:/ipfs/QmV926RFns4LfPo8WfzqYML1eHrvxwLSKHZnp9QBCsvUoU\"]},\"contracts/src/pools/HoneyETHPool.sol\":{\"keccak256\":\"0x46c1cec9efb4413a906daab4d5e0159ec8c1e0f98e707b203288eb0ac3239d3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93578d25d5a731a942809a723f7b89ec0aec0ad5b9887dcec1b6336c25b321ff\",\"dweb:/ipfs/QmXsSPrhe9sscVn9bmF1qNX2Dpe1d62FnwGZECWsBhmFXj\"]}},\"version\":1}"
        }
      }
    }
  }
}